# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetConsumptionsConsumptionResult',
    'GetInvoicesInvoiceResult',
]

@pulumi.output_type
class GetConsumptionsConsumptionResult(dict):
    def __init__(__self__, *,
                 category: str,
                 description: str,
                 operation_path: str,
                 project_id: str,
                 value: str):
        """
        :param str category: The category of the consumption.
        :param str description: The description of the consumption.
        :param str operation_path: The unique identifier of the product.
        :param str project_id: The project ID of the consumption.
        :param str value: The monetary value of the consumption.
        """
        pulumi.set(__self__, "category", category)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "operation_path", operation_path)
        pulumi.set(__self__, "project_id", project_id)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def category(self) -> str:
        """
        The category of the consumption.
        """
        return pulumi.get(self, "category")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The description of the consumption.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="operationPath")
    def operation_path(self) -> str:
        """
        The unique identifier of the product.
        """
        return pulumi.get(self, "operation_path")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> str:
        """
        The project ID of the consumption.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        The monetary value of the consumption.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetInvoicesInvoiceResult(dict):
    def __init__(__self__, *,
                 due_date: str,
                 id: str,
                 invoice_type: str,
                 issued_date: str,
                 number: int,
                 start_date: str,
                 total_taxed: str,
                 total_untaxed: str):
        """
        :param str due_date: The payment time limit, set according to the Organization's payment conditions (RFC 3339 format).
        :param str id: The associated invoice ID.
        :param str invoice_type: Invoices with the given type are listed. Valid values are `periodic` and `purchase`.
        :param str issued_date: The date when the invoice was sent to the customer (RFC 3339 format).
        :param int number: The invoice number.
        :param str start_date: The start date of the billing period (RFC 3339 format).
        :param str total_taxed: The total amount, taxed.
        :param str total_untaxed: The total amount, untaxed.
        """
        pulumi.set(__self__, "due_date", due_date)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "invoice_type", invoice_type)
        pulumi.set(__self__, "issued_date", issued_date)
        pulumi.set(__self__, "number", number)
        pulumi.set(__self__, "start_date", start_date)
        pulumi.set(__self__, "total_taxed", total_taxed)
        pulumi.set(__self__, "total_untaxed", total_untaxed)

    @property
    @pulumi.getter(name="dueDate")
    def due_date(self) -> str:
        """
        The payment time limit, set according to the Organization's payment conditions (RFC 3339 format).
        """
        return pulumi.get(self, "due_date")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The associated invoice ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="invoiceType")
    def invoice_type(self) -> str:
        """
        Invoices with the given type are listed. Valid values are `periodic` and `purchase`.
        """
        return pulumi.get(self, "invoice_type")

    @property
    @pulumi.getter(name="issuedDate")
    def issued_date(self) -> str:
        """
        The date when the invoice was sent to the customer (RFC 3339 format).
        """
        return pulumi.get(self, "issued_date")

    @property
    @pulumi.getter
    def number(self) -> int:
        """
        The invoice number.
        """
        return pulumi.get(self, "number")

    @property
    @pulumi.getter(name="startDate")
    def start_date(self) -> str:
        """
        The start date of the billing period (RFC 3339 format).
        """
        return pulumi.get(self, "start_date")

    @property
    @pulumi.getter(name="totalTaxed")
    def total_taxed(self) -> str:
        """
        The total amount, taxed.
        """
        return pulumi.get(self, "total_taxed")

    @property
    @pulumi.getter(name="totalUntaxed")
    def total_untaxed(self) -> str:
        """
        The total amount, untaxed.
        """
        return pulumi.get(self, "total_untaxed")


