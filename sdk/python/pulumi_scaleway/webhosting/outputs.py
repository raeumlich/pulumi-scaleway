# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'WebHostingCpanelUrl',
    'WebHostingOption',
    'GetOfferProductResult',
    'GetWebHostingCpanelUrlResult',
    'GetWebHostingOptionResult',
]

@pulumi.output_type
class WebHostingCpanelUrl(dict):
    def __init__(__self__, *,
                 dashboard: Optional[str] = None,
                 webmail: Optional[str] = None):
        """
        :param str dashboard: The URL of the Dashboard.
        :param str webmail: The URL of the Webmail interface.
        """
        if dashboard is not None:
            pulumi.set(__self__, "dashboard", dashboard)
        if webmail is not None:
            pulumi.set(__self__, "webmail", webmail)

    @property
    @pulumi.getter
    def dashboard(self) -> Optional[str]:
        """
        The URL of the Dashboard.
        """
        return pulumi.get(self, "dashboard")

    @property
    @pulumi.getter
    def webmail(self) -> Optional[str]:
        """
        The URL of the Webmail interface.
        """
        return pulumi.get(self, "webmail")


@pulumi.output_type
class WebHostingOption(dict):
    def __init__(__self__, *,
                 id: Optional[str] = None,
                 name: Optional[str] = None):
        """
        :param str id: The option ID.
        :param str name: The option name.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The option ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        The option name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetOfferProductResult(dict):
    def __init__(__self__, *,
                 databases_quota: int,
                 email_accounts_quota: int,
                 email_storage_quota: int,
                 hosting_storage_quota: int,
                 name: str,
                 option: bool,
                 ram: int,
                 support_included: bool,
                 v_cpu: int):
        """
        :param int databases_quota: The quota of databases.
        :param int email_accounts_quota: The quota of email accounts.
        :param int email_storage_quota: The quota of email storage.
        :param int hosting_storage_quota: The quota of hosting storage.
        :param str name: The offer name. Only one of `name` and `offer_id` should be specified.
        :param bool option: The product option.
        :param int ram: The capacity of the memory in GB.
        :param bool support_included: If support is included.
        :param int v_cpu: The number of cores.
        """
        pulumi.set(__self__, "databases_quota", databases_quota)
        pulumi.set(__self__, "email_accounts_quota", email_accounts_quota)
        pulumi.set(__self__, "email_storage_quota", email_storage_quota)
        pulumi.set(__self__, "hosting_storage_quota", hosting_storage_quota)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "option", option)
        pulumi.set(__self__, "ram", ram)
        pulumi.set(__self__, "support_included", support_included)
        pulumi.set(__self__, "v_cpu", v_cpu)

    @property
    @pulumi.getter(name="databasesQuota")
    def databases_quota(self) -> int:
        """
        The quota of databases.
        """
        return pulumi.get(self, "databases_quota")

    @property
    @pulumi.getter(name="emailAccountsQuota")
    def email_accounts_quota(self) -> int:
        """
        The quota of email accounts.
        """
        return pulumi.get(self, "email_accounts_quota")

    @property
    @pulumi.getter(name="emailStorageQuota")
    def email_storage_quota(self) -> int:
        """
        The quota of email storage.
        """
        return pulumi.get(self, "email_storage_quota")

    @property
    @pulumi.getter(name="hostingStorageQuota")
    def hosting_storage_quota(self) -> int:
        """
        The quota of hosting storage.
        """
        return pulumi.get(self, "hosting_storage_quota")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The offer name. Only one of `name` and `offer_id` should be specified.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def option(self) -> bool:
        """
        The product option.
        """
        return pulumi.get(self, "option")

    @property
    @pulumi.getter
    def ram(self) -> int:
        """
        The capacity of the memory in GB.
        """
        return pulumi.get(self, "ram")

    @property
    @pulumi.getter(name="supportIncluded")
    def support_included(self) -> bool:
        """
        If support is included.
        """
        return pulumi.get(self, "support_included")

    @property
    @pulumi.getter(name="vCpu")
    def v_cpu(self) -> int:
        """
        The number of cores.
        """
        return pulumi.get(self, "v_cpu")


@pulumi.output_type
class GetWebHostingCpanelUrlResult(dict):
    def __init__(__self__, *,
                 dashboard: str,
                 webmail: str):
        pulumi.set(__self__, "dashboard", dashboard)
        pulumi.set(__self__, "webmail", webmail)

    @property
    @pulumi.getter
    def dashboard(self) -> str:
        return pulumi.get(self, "dashboard")

    @property
    @pulumi.getter
    def webmail(self) -> str:
        return pulumi.get(self, "webmail")


@pulumi.output_type
class GetWebHostingOptionResult(dict):
    def __init__(__self__, *,
                 id: str,
                 name: str):
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")


