// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway.Account
{
    public static class GetSSHKey
    {
        /// <summary>
        /// Use this data source to get SSH key information based on its ID or name.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKey = Scaleway.Account.GetSSHKey.Invoke(new()
        ///     {
        ///         SshKeyId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetSSHKeyResult> InvokeAsync(GetSSHKeyArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSSHKeyResult>("scaleway:account/getSSHKey:getSSHKey", args ?? new GetSSHKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get SSH key information based on its ID or name.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKey = Scaleway.Account.GetSSHKey.Invoke(new()
        ///     {
        ///         SshKeyId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetSSHKeyResult> Invoke(GetSSHKeyInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSSHKeyResult>("scaleway:account/getSSHKey:getSSHKey", args ?? new GetSSHKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSSHKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The SSH key name. Only one of `name` and `ssh_key_id` should be specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// `project_id`) The ID of the project the SSH key is associated with.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// The SSH key id. Only one of `name` and `ssh_key_id` should be specified.
        /// </summary>
        [Input("sshKeyId")]
        public string? SshKeyId { get; set; }

        public GetSSHKeyArgs()
        {
        }
        public static new GetSSHKeyArgs Empty => new GetSSHKeyArgs();
    }

    public sealed class GetSSHKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The SSH key name. Only one of `name` and `ssh_key_id` should be specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `project_id`) The ID of the project the SSH key is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The SSH key id. Only one of `name` and `ssh_key_id` should be specified.
        /// </summary>
        [Input("sshKeyId")]
        public Input<string>? SshKeyId { get; set; }

        public GetSSHKeyInvokeArgs()
        {
        }
        public static new GetSSHKeyInvokeArgs Empty => new GetSSHKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSSHKeyResult
    {
        public readonly string CreatedAt;
        public readonly bool Disabled;
        public readonly string Fingerprint;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        /// <summary>
        /// The ID of the organization the SSH key is associated with.
        /// </summary>
        public readonly string OrganizationId;
        public readonly string? ProjectId;
        /// <summary>
        /// The SSH public key string
        /// </summary>
        public readonly string PublicKey;
        public readonly string? SshKeyId;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetSSHKeyResult(
            string createdAt,

            bool disabled,

            string fingerprint,

            string id,

            string? name,

            string organizationId,

            string? projectId,

            string publicKey,

            string? sshKeyId,

            string updatedAt)
        {
            CreatedAt = createdAt;
            Disabled = disabled;
            Fingerprint = fingerprint;
            Id = id;
            Name = name;
            OrganizationId = organizationId;
            ProjectId = projectId;
            PublicKey = publicKey;
            SshKeyId = sshKeyId;
            UpdatedAt = updatedAt;
        }
    }
}
