// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway.Iam
{
    public static class GetApplication
    {
        /// <summary>
        /// Gets information about an existing IAM application.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var findByName = Scaleway.Iam.GetApplication.Invoke(new()
        ///     {
        ///         Name = "foobar",
        ///     });
        /// 
        ///     var findById = Scaleway.Iam.GetApplication.Invoke(new()
        ///     {
        ///         ApplicationId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("scaleway:iam/getApplication:getApplication", args ?? new GetApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an existing IAM application.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var findByName = Scaleway.Iam.GetApplication.Invoke(new()
        ///     {
        ///         Name = "foobar",
        ///     });
        /// 
        ///     var findById = Scaleway.Iam.GetApplication.Invoke(new()
        ///     {
        ///         ApplicationId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("scaleway:iam/getApplication:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the IAM application.
        /// Only one of the `name` and `application_id` should be specified.
        /// </summary>
        [Input("applicationId")]
        public string? ApplicationId { get; set; }

        /// <summary>
        /// The name of the IAM application.
        /// Only one of the `name` and `application_id` should be specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// `organization_id`) The ID of the
        /// organization the application is associated with.
        /// </summary>
        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        public GetApplicationArgs()
        {
        }
        public static new GetApplicationArgs Empty => new GetApplicationArgs();
    }

    public sealed class GetApplicationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the IAM application.
        /// Only one of the `name` and `application_id` should be specified.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// The name of the IAM application.
        /// Only one of the `name` and `application_id` should be specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `organization_id`) The ID of the
        /// organization the application is associated with.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        public GetApplicationInvokeArgs()
        {
        }
        public static new GetApplicationInvokeArgs Empty => new GetApplicationInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        public readonly string? ApplicationId;
        public readonly string CreatedAt;
        public readonly string Description;
        public readonly bool Editable;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string? OrganizationId;
        public readonly ImmutableArray<string> Tags;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetApplicationResult(
            string? applicationId,

            string createdAt,

            string description,

            bool editable,

            string id,

            string? name,

            string? organizationId,

            ImmutableArray<string> tags,

            string updatedAt)
        {
            ApplicationId = applicationId;
            CreatedAt = createdAt;
            Description = description;
            Editable = editable;
            Id = id;
            Name = name;
            OrganizationId = organizationId;
            Tags = tags;
            UpdatedAt = updatedAt;
        }
    }
}
