// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway.Iam
{
    public static class GetUser
    {
        /// <summary>
        /// Use this data source to get information on an existing IAM user based on its ID or email address.
        /// For more information,
        /// see [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#users-06bdcf).
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var findById = Scaleway.Iam.GetUser.Invoke(new()
        ///     {
        ///         UserId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        ///     var findByEmail = Scaleway.Iam.GetUser.Invoke(new()
        ///     {
        ///         Email = "foo@bar.com",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetUserResult> InvokeAsync(GetUserArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("scaleway:iam/getUser:getUser", args ?? new GetUserArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information on an existing IAM user based on its ID or email address.
        /// For more information,
        /// see [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#users-06bdcf).
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var findById = Scaleway.Iam.GetUser.Invoke(new()
        ///     {
        ///         UserId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        ///     var findByEmail = Scaleway.Iam.GetUser.Invoke(new()
        ///     {
        ///         Email = "foo@bar.com",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetUserResult> Invoke(GetUserInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("scaleway:iam/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email address of the IAM user. Only one of the `email` and `user_id` should be specified.
        /// </summary>
        [Input("email")]
        public string? Email { get; set; }

        /// <summary>
        /// `organization_id`) The ID of the
        /// organization the user is associated with.
        /// </summary>
        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        /// <summary>
        /// The ID of the IAM user. Only one of the `email` and `user_id` should be specified.
        /// </summary>
        [Input("userId")]
        public string? UserId { get; set; }

        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }

    public sealed class GetUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email address of the IAM user. Only one of the `email` and `user_id` should be specified.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// `organization_id`) The ID of the
        /// organization the user is associated with.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// The ID of the IAM user. Only one of the `email` and `user_id` should be specified.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public GetUserInvokeArgs()
        {
        }
        public static new GetUserInvokeArgs Empty => new GetUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        public readonly string? Email;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OrganizationId;
        public readonly string? UserId;

        [OutputConstructor]
        private GetUserResult(
            string? email,

            string id,

            string? organizationId,

            string? userId)
        {
            Email = email;
            Id = id;
            OrganizationId = organizationId;
            UserId = userId;
        }
    }
}
