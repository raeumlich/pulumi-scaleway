// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway.Cockpit
{
    public static class GetPlan
    {
        /// <summary>
        /// Gets information about a Scaleway Cockpit plan.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var premium = Scaleway.Cockpit.GetPlan.Invoke(new()
        ///     {
        ///         Name = "premium",
        ///     });
        /// 
        ///     var main = new Scaleway.Cockpit.Cockpit("main", new()
        ///     {
        ///         Plan = premium.Apply(getPlanResult =&gt; getPlanResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPlanResult> InvokeAsync(GetPlanArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPlanResult>("scaleway:cockpit/getPlan:getPlan", args ?? new GetPlanArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a Scaleway Cockpit plan.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var premium = Scaleway.Cockpit.GetPlan.Invoke(new()
        ///     {
        ///         Name = "premium",
        ///     });
        /// 
        ///     var main = new Scaleway.Cockpit.Cockpit("main", new()
        ///     {
        ///         Plan = premium.Apply(getPlanResult =&gt; getPlanResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPlanResult> Invoke(GetPlanInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPlanResult>("scaleway:cockpit/getPlan:getPlan", args ?? new GetPlanInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPlanArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the plan.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetPlanArgs()
        {
        }
        public static new GetPlanArgs Empty => new GetPlanArgs();
    }

    public sealed class GetPlanInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the plan.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetPlanInvokeArgs()
        {
        }
        public static new GetPlanInvokeArgs Empty => new GetPlanInvokeArgs();
    }


    [OutputType]
    public sealed class GetPlanResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetPlanResult(
            string id,

            string name)
        {
            Id = id;
            Name = name;
        }
    }
}
