// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway.Vpc
{
    public static class GetPublicGatewayIP
    {
        /// <summary>
        /// Gets information about a public gateway IP.
        /// 
        /// For further information please check the API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-66f0c0)
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = new Scaleway.Vpc.PublicGatewayIP("main");
        /// 
        ///     var ipById = Scaleway.Vpc.GetPublicGatewayIP.Invoke(new()
        ///     {
        ///         IpId = main.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetPublicGatewayIPResult> InvokeAsync(GetPublicGatewayIPArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPublicGatewayIPResult>("scaleway:vpc/getPublicGatewayIP:getPublicGatewayIP", args ?? new GetPublicGatewayIPArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a public gateway IP.
        /// 
        /// For further information please check the API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-66f0c0)
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = new Scaleway.Vpc.PublicGatewayIP("main");
        /// 
        ///     var ipById = Scaleway.Vpc.GetPublicGatewayIP.Invoke(new()
        ///     {
        ///         IpId = main.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetPublicGatewayIPResult> Invoke(GetPublicGatewayIPInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublicGatewayIPResult>("scaleway:vpc/getPublicGatewayIP:getPublicGatewayIP", args ?? new GetPublicGatewayIPInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPublicGatewayIPArgs : global::Pulumi.InvokeArgs
    {
        [Input("ipId")]
        public string? IpId { get; set; }

        public GetPublicGatewayIPArgs()
        {
        }
        public static new GetPublicGatewayIPArgs Empty => new GetPublicGatewayIPArgs();
    }

    public sealed class GetPublicGatewayIPInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ipId")]
        public Input<string>? IpId { get; set; }

        public GetPublicGatewayIPInvokeArgs()
        {
        }
        public static new GetPublicGatewayIPInvokeArgs Empty => new GetPublicGatewayIPInvokeArgs();
    }


    [OutputType]
    public sealed class GetPublicGatewayIPResult
    {
        public readonly string Address;
        public readonly string CreatedAt;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? IpId;
        public readonly string OrganizationId;
        public readonly string ProjectId;
        public readonly string Reverse;
        public readonly ImmutableArray<string> Tags;
        public readonly string UpdatedAt;
        public readonly string Zone;

        [OutputConstructor]
        private GetPublicGatewayIPResult(
            string address,

            string createdAt,

            string id,

            string? ipId,

            string organizationId,

            string projectId,

            string reverse,

            ImmutableArray<string> tags,

            string updatedAt,

            string zone)
        {
            Address = address;
            CreatedAt = createdAt;
            Id = id;
            IpId = ipId;
            OrganizationId = organizationId;
            ProjectId = projectId;
            Reverse = reverse;
            Tags = tags;
            UpdatedAt = updatedAt;
            Zone = zone;
        }
    }
}
