// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway.Instance
{
    /// <summary>
    /// Creates and manages Scaleway Compute Instance security group rules. For more information, see [the documentation](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89).
    /// 
    /// This resource can be used to externalize rules from a `scaleway.instance.SecurityGroup` to solve circular dependency problems. When using this resource do not forget to set `external_rules = true` on the security group.
    /// 
    /// &gt; **Warning:** In order to guaranty rules order in a given security group only one scaleway.instance.SecurityGroupRules is allowed per security group.
    /// 
    /// ## Example Usage
    /// ### Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumi.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sg01 = new Scaleway.Instance.SecurityGroup("sg01", new()
    ///     {
    ///         ExternalRules = true,
    ///     });
    /// 
    ///     var sgrs01 = new Scaleway.Instance.SecurityGroupRules("sgrs01", new()
    ///     {
    ///         SecurityGroupId = sg01.Id,
    ///         InboundRules = new[]
    ///         {
    ///             new Scaleway.Instance.Inputs.SecurityGroupRulesInboundRuleArgs
    ///             {
    ///                 Action = "accept",
    ///                 Port = 80,
    ///                 IpRange = "0.0.0.0/0",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Instance security group rules can be imported using the `{zone}/{id}`, e.g. bash
    /// 
    /// ```sh
    ///  $ pulumi import scaleway:instance/securityGroupRules:SecurityGroupRules web fr-par-1/11111111-1111-1111-1111-111111111111
    /// ```
    /// </summary>
    [ScalewayResourceType("scaleway:instance/securityGroupRules:SecurityGroupRules")]
    public partial class SecurityGroupRules : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of inbound rule to add to the security group. (Structure is documented below.)
        /// </summary>
        [Output("inboundRules")]
        public Output<ImmutableArray<Outputs.SecurityGroupRulesInboundRule>> InboundRules { get; private set; } = null!;

        /// <summary>
        /// A list of outbound rule to add to the security group. (Structure is documented below.)
        /// </summary>
        [Output("outboundRules")]
        public Output<ImmutableArray<Outputs.SecurityGroupRulesOutboundRule>> OutboundRules { get; private set; } = null!;

        /// <summary>
        /// The ID of the security group.
        /// </summary>
        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityGroupRules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityGroupRules(string name, SecurityGroupRulesArgs args, CustomResourceOptions? options = null)
            : base("scaleway:instance/securityGroupRules:SecurityGroupRules", name, args ?? new SecurityGroupRulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityGroupRules(string name, Input<string> id, SecurityGroupRulesState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:instance/securityGroupRules:SecurityGroupRules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/raeumlich/pulumi-scaleway/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityGroupRules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityGroupRules Get(string name, Input<string> id, SecurityGroupRulesState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityGroupRules(name, id, state, options);
        }
    }

    public sealed class SecurityGroupRulesArgs : global::Pulumi.ResourceArgs
    {
        [Input("inboundRules")]
        private InputList<Inputs.SecurityGroupRulesInboundRuleArgs>? _inboundRules;

        /// <summary>
        /// A list of inbound rule to add to the security group. (Structure is documented below.)
        /// </summary>
        public InputList<Inputs.SecurityGroupRulesInboundRuleArgs> InboundRules
        {
            get => _inboundRules ?? (_inboundRules = new InputList<Inputs.SecurityGroupRulesInboundRuleArgs>());
            set => _inboundRules = value;
        }

        [Input("outboundRules")]
        private InputList<Inputs.SecurityGroupRulesOutboundRuleArgs>? _outboundRules;

        /// <summary>
        /// A list of outbound rule to add to the security group. (Structure is documented below.)
        /// </summary>
        public InputList<Inputs.SecurityGroupRulesOutboundRuleArgs> OutboundRules
        {
            get => _outboundRules ?? (_outboundRules = new InputList<Inputs.SecurityGroupRulesOutboundRuleArgs>());
            set => _outboundRules = value;
        }

        /// <summary>
        /// The ID of the security group.
        /// </summary>
        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        public SecurityGroupRulesArgs()
        {
        }
        public static new SecurityGroupRulesArgs Empty => new SecurityGroupRulesArgs();
    }

    public sealed class SecurityGroupRulesState : global::Pulumi.ResourceArgs
    {
        [Input("inboundRules")]
        private InputList<Inputs.SecurityGroupRulesInboundRuleGetArgs>? _inboundRules;

        /// <summary>
        /// A list of inbound rule to add to the security group. (Structure is documented below.)
        /// </summary>
        public InputList<Inputs.SecurityGroupRulesInboundRuleGetArgs> InboundRules
        {
            get => _inboundRules ?? (_inboundRules = new InputList<Inputs.SecurityGroupRulesInboundRuleGetArgs>());
            set => _inboundRules = value;
        }

        [Input("outboundRules")]
        private InputList<Inputs.SecurityGroupRulesOutboundRuleGetArgs>? _outboundRules;

        /// <summary>
        /// A list of outbound rule to add to the security group. (Structure is documented below.)
        /// </summary>
        public InputList<Inputs.SecurityGroupRulesOutboundRuleGetArgs> OutboundRules
        {
            get => _outboundRules ?? (_outboundRules = new InputList<Inputs.SecurityGroupRulesOutboundRuleGetArgs>());
            set => _outboundRules = value;
        }

        /// <summary>
        /// The ID of the security group.
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        public SecurityGroupRulesState()
        {
        }
        public static new SecurityGroupRulesState Empty => new SecurityGroupRulesState();
    }
}
