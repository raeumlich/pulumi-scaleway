// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway.Instance
{
    public static class GetPrivateNIC
    {
        /// <summary>
        /// Gets information about an instance private NIC.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byNicId = Scaleway.Instance.GetPrivateNIC.Invoke(new()
        ///     {
        ///         PrivateNicId = "11111111-1111-1111-1111-111111111111",
        ///         ServerId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        ///     var byPnId = Scaleway.Instance.GetPrivateNIC.Invoke(new()
        ///     {
        ///         PrivateNetworkId = "11111111-1111-1111-1111-111111111111",
        ///         ServerId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        ///     var byTags = Scaleway.Instance.GetPrivateNIC.Invoke(new()
        ///     {
        ///         ServerId = "11111111-1111-1111-1111-111111111111",
        ///         Tags = new[]
        ///         {
        ///             "mytag",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetPrivateNICResult> InvokeAsync(GetPrivateNICArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateNICResult>("scaleway:instance/getPrivateNIC:getPrivateNIC", args ?? new GetPrivateNICArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an instance private NIC.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byNicId = Scaleway.Instance.GetPrivateNIC.Invoke(new()
        ///     {
        ///         PrivateNicId = "11111111-1111-1111-1111-111111111111",
        ///         ServerId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        ///     var byPnId = Scaleway.Instance.GetPrivateNIC.Invoke(new()
        ///     {
        ///         PrivateNetworkId = "11111111-1111-1111-1111-111111111111",
        ///         ServerId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        ///     var byTags = Scaleway.Instance.GetPrivateNIC.Invoke(new()
        ///     {
        ///         ServerId = "11111111-1111-1111-1111-111111111111",
        ///         Tags = new[]
        ///         {
        ///             "mytag",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetPrivateNICResult> Invoke(GetPrivateNICInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateNICResult>("scaleway:instance/getPrivateNIC:getPrivateNIC", args ?? new GetPrivateNICInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateNICArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the private network
        /// Only one of `private_nic_id` and `private_network_id` should be specified.
        /// </summary>
        [Input("privateNetworkId")]
        public string? PrivateNetworkId { get; set; }

        /// <summary>
        /// The ID of the instance server private nic
        /// Only one of `private_nic_id` and `private_network_id` should be specified.
        /// </summary>
        [Input("privateNicId")]
        public string? PrivateNicId { get; set; }

        /// <summary>
        /// The server's id
        /// </summary>
        [Input("serverId", required: true)]
        public string ServerId { get; set; } = null!;

        [Input("tags")]
        private List<string>? _tags;

        /// <summary>
        /// The tags associated with the private NIC.
        /// As datasource only returns one private NIC, the search with given tags must return only one result
        /// </summary>
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        /// <summary>
        /// `zone`) The zone in which the private nic exists.
        /// </summary>
        [Input("zone")]
        public string? Zone { get; set; }

        public GetPrivateNICArgs()
        {
        }
        public static new GetPrivateNICArgs Empty => new GetPrivateNICArgs();
    }

    public sealed class GetPrivateNICInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the private network
        /// Only one of `private_nic_id` and `private_network_id` should be specified.
        /// </summary>
        [Input("privateNetworkId")]
        public Input<string>? PrivateNetworkId { get; set; }

        /// <summary>
        /// The ID of the instance server private nic
        /// Only one of `private_nic_id` and `private_network_id` should be specified.
        /// </summary>
        [Input("privateNicId")]
        public Input<string>? PrivateNicId { get; set; }

        /// <summary>
        /// The server's id
        /// </summary>
        [Input("serverId", required: true)]
        public Input<string> ServerId { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags associated with the private NIC.
        /// As datasource only returns one private NIC, the search with given tags must return only one result
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// `zone`) The zone in which the private nic exists.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetPrivateNICInvokeArgs()
        {
        }
        public static new GetPrivateNICInvokeArgs Empty => new GetPrivateNICInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateNICResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> IpIds;
        public readonly string MacAddress;
        public readonly string? PrivateNetworkId;
        public readonly string? PrivateNicId;
        public readonly string ServerId;
        public readonly ImmutableArray<string> Tags;
        public readonly string? Zone;

        [OutputConstructor]
        private GetPrivateNICResult(
            string id,

            ImmutableArray<string> ipIds,

            string macAddress,

            string? privateNetworkId,

            string? privateNicId,

            string serverId,

            ImmutableArray<string> tags,

            string? zone)
        {
            Id = id;
            IpIds = ipIds;
            MacAddress = macAddress;
            PrivateNetworkId = privateNetworkId;
            PrivateNicId = privateNicId;
            ServerId = serverId;
            Tags = tags;
            Zone = zone;
        }
    }
}
