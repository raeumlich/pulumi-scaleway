// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticmetal

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a baremetal option.
// For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/elasticmetal"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := elasticmetal.GetBareMetalOption(ctx, &elasticmetal.GetBareMetalOptionArgs{
//				Name: pulumi.StringRef("Remote Access"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = elasticmetal.GetBareMetalOption(ctx, &elasticmetal.GetBareMetalOptionArgs{
//				OptionId: pulumi.StringRef("931df052-d713-4674-8b58-96a63244c8e2"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBareMetalOption(ctx *pulumi.Context, args *GetBareMetalOptionArgs, opts ...pulumi.InvokeOption) (*GetBareMetalOptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBareMetalOptionResult
	err := ctx.Invoke("scaleway:elasticmetal/getBareMetalOption:getBareMetalOption", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBareMetalOption.
type GetBareMetalOptionArgs struct {
	// The option name. Only one of `name` and `optionId` should be specified.
	Name *string `pulumi:"name"`
	// The option id. Only one of `name` and `optionId` should be specified.
	OptionId *string `pulumi:"optionId"`
	// `zone`) The zone in which the option exists.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getBareMetalOption.
type GetBareMetalOptionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Is false if the option could not be added or removed.
	Manageable bool `pulumi:"manageable"`
	// The name of the option.
	Name     *string `pulumi:"name"`
	OptionId *string `pulumi:"optionId"`
	Zone     string  `pulumi:"zone"`
}

func GetBareMetalOptionOutput(ctx *pulumi.Context, args GetBareMetalOptionOutputArgs, opts ...pulumi.InvokeOption) GetBareMetalOptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBareMetalOptionResult, error) {
			args := v.(GetBareMetalOptionArgs)
			r, err := GetBareMetalOption(ctx, &args, opts...)
			var s GetBareMetalOptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBareMetalOptionResultOutput)
}

// A collection of arguments for invoking getBareMetalOption.
type GetBareMetalOptionOutputArgs struct {
	// The option name. Only one of `name` and `optionId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The option id. Only one of `name` and `optionId` should be specified.
	OptionId pulumi.StringPtrInput `pulumi:"optionId"`
	// `zone`) The zone in which the option exists.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GetBareMetalOptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalOptionArgs)(nil)).Elem()
}

// A collection of values returned by getBareMetalOption.
type GetBareMetalOptionResultOutput struct{ *pulumi.OutputState }

func (GetBareMetalOptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalOptionResult)(nil)).Elem()
}

func (o GetBareMetalOptionResultOutput) ToGetBareMetalOptionResultOutput() GetBareMetalOptionResultOutput {
	return o
}

func (o GetBareMetalOptionResultOutput) ToGetBareMetalOptionResultOutputWithContext(ctx context.Context) GetBareMetalOptionResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetBareMetalOptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalOptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Is false if the option could not be added or removed.
func (o GetBareMetalOptionResultOutput) Manageable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBareMetalOptionResult) bool { return v.Manageable }).(pulumi.BoolOutput)
}

// The name of the option.
func (o GetBareMetalOptionResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBareMetalOptionResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetBareMetalOptionResultOutput) OptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBareMetalOptionResult) *string { return v.OptionId }).(pulumi.StringPtrOutput)
}

func (o GetBareMetalOptionResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalOptionResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBareMetalOptionResultOutput{})
}
