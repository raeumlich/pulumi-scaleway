// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticmetal

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a Flexible IP.
func LookupFlexibleIP(ctx *pulumi.Context, args *LookupFlexibleIPArgs, opts ...pulumi.InvokeOption) (*LookupFlexibleIPResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFlexibleIPResult
	err := ctx.Invoke("scaleway:elasticmetal/getFlexibleIP:getFlexibleIP", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlexibleIP.
type LookupFlexibleIPArgs struct {
	FlexibleIpId *string `pulumi:"flexibleIpId"`
	// The IP address.
	// Only one of `ipAddress` and `ipId` should be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// (Defaults to provider `projectId`) The ID of the project the IP is in.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getFlexibleIP.
type LookupFlexibleIPResult struct {
	CreatedAt    string  `pulumi:"createdAt"`
	Description  string  `pulumi:"description"`
	FlexibleIpId *string `pulumi:"flexibleIpId"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	IpAddress *string `pulumi:"ipAddress"`
	IsIpv6    bool    `pulumi:"isIpv6"`
	// (Defaults to provider `organizationId`) The ID of the organization the IP is in.
	OrganizationId string `pulumi:"organizationId"`
	// (Defaults to provider `projectId`) The ID of the project the IP is in.
	ProjectId string `pulumi:"projectId"`
	// The reverse domain associated with this IP.
	Reverse string `pulumi:"reverse"`
	// The associated server ID if any
	ServerId  string   `pulumi:"serverId"`
	Status    string   `pulumi:"status"`
	Tags      []string `pulumi:"tags"`
	UpdatedAt string   `pulumi:"updatedAt"`
	Zone      string   `pulumi:"zone"`
}

func LookupFlexibleIPOutput(ctx *pulumi.Context, args LookupFlexibleIPOutputArgs, opts ...pulumi.InvokeOption) LookupFlexibleIPResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFlexibleIPResult, error) {
			args := v.(LookupFlexibleIPArgs)
			r, err := LookupFlexibleIP(ctx, &args, opts...)
			var s LookupFlexibleIPResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFlexibleIPResultOutput)
}

// A collection of arguments for invoking getFlexibleIP.
type LookupFlexibleIPOutputArgs struct {
	FlexibleIpId pulumi.StringPtrInput `pulumi:"flexibleIpId"`
	// The IP address.
	// Only one of `ipAddress` and `ipId` should be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// (Defaults to provider `projectId`) The ID of the project the IP is in.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupFlexibleIPOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlexibleIPArgs)(nil)).Elem()
}

// A collection of values returned by getFlexibleIP.
type LookupFlexibleIPResultOutput struct{ *pulumi.OutputState }

func (LookupFlexibleIPResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlexibleIPResult)(nil)).Elem()
}

func (o LookupFlexibleIPResultOutput) ToLookupFlexibleIPResultOutput() LookupFlexibleIPResultOutput {
	return o
}

func (o LookupFlexibleIPResultOutput) ToLookupFlexibleIPResultOutputWithContext(ctx context.Context) LookupFlexibleIPResultOutput {
	return o
}

func (o LookupFlexibleIPResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupFlexibleIPResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupFlexibleIPResultOutput) FlexibleIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) *string { return v.FlexibleIpId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFlexibleIPResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFlexibleIPResultOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o LookupFlexibleIPResultOutput) IsIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) bool { return v.IsIpv6 }).(pulumi.BoolOutput)
}

// (Defaults to provider `organizationId`) The ID of the organization the IP is in.
func (o LookupFlexibleIPResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// (Defaults to provider `projectId`) The ID of the project the IP is in.
func (o LookupFlexibleIPResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The reverse domain associated with this IP.
func (o LookupFlexibleIPResultOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) string { return v.Reverse }).(pulumi.StringOutput)
}

// The associated server ID if any
func (o LookupFlexibleIPResultOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) string { return v.ServerId }).(pulumi.StringOutput)
}

func (o LookupFlexibleIPResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupFlexibleIPResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupFlexibleIPResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o LookupFlexibleIPResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleIPResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlexibleIPResultOutput{})
}
