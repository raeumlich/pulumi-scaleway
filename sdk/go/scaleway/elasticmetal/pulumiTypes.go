// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticmetal

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type BareMetalServerIp struct {
	// The address of the IPv6.
	Address *string `pulumi:"address"`
	// The id of the private network to attach.
	Id *string `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse *string `pulumi:"reverse"`
	// The type of the IPv6.
	Version *string `pulumi:"version"`
}

// BareMetalServerIpInput is an input type that accepts BareMetalServerIpArgs and BareMetalServerIpOutput values.
// You can construct a concrete instance of `BareMetalServerIpInput` via:
//
//	BareMetalServerIpArgs{...}
type BareMetalServerIpInput interface {
	pulumi.Input

	ToBareMetalServerIpOutput() BareMetalServerIpOutput
	ToBareMetalServerIpOutputWithContext(context.Context) BareMetalServerIpOutput
}

type BareMetalServerIpArgs struct {
	// The address of the IPv6.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The id of the private network to attach.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse pulumi.StringPtrInput `pulumi:"reverse"`
	// The type of the IPv6.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (BareMetalServerIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalServerIp)(nil)).Elem()
}

func (i BareMetalServerIpArgs) ToBareMetalServerIpOutput() BareMetalServerIpOutput {
	return i.ToBareMetalServerIpOutputWithContext(context.Background())
}

func (i BareMetalServerIpArgs) ToBareMetalServerIpOutputWithContext(ctx context.Context) BareMetalServerIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalServerIpOutput)
}

// BareMetalServerIpArrayInput is an input type that accepts BareMetalServerIpArray and BareMetalServerIpArrayOutput values.
// You can construct a concrete instance of `BareMetalServerIpArrayInput` via:
//
//	BareMetalServerIpArray{ BareMetalServerIpArgs{...} }
type BareMetalServerIpArrayInput interface {
	pulumi.Input

	ToBareMetalServerIpArrayOutput() BareMetalServerIpArrayOutput
	ToBareMetalServerIpArrayOutputWithContext(context.Context) BareMetalServerIpArrayOutput
}

type BareMetalServerIpArray []BareMetalServerIpInput

func (BareMetalServerIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalServerIp)(nil)).Elem()
}

func (i BareMetalServerIpArray) ToBareMetalServerIpArrayOutput() BareMetalServerIpArrayOutput {
	return i.ToBareMetalServerIpArrayOutputWithContext(context.Background())
}

func (i BareMetalServerIpArray) ToBareMetalServerIpArrayOutputWithContext(ctx context.Context) BareMetalServerIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalServerIpArrayOutput)
}

type BareMetalServerIpOutput struct{ *pulumi.OutputState }

func (BareMetalServerIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalServerIp)(nil)).Elem()
}

func (o BareMetalServerIpOutput) ToBareMetalServerIpOutput() BareMetalServerIpOutput {
	return o
}

func (o BareMetalServerIpOutput) ToBareMetalServerIpOutputWithContext(ctx context.Context) BareMetalServerIpOutput {
	return o
}

// The address of the IPv6.
func (o BareMetalServerIpOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIp) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The id of the private network to attach.
func (o BareMetalServerIpOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIp) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reverse of the IPv6.
func (o BareMetalServerIpOutput) Reverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIp) *string { return v.Reverse }).(pulumi.StringPtrOutput)
}

// The type of the IPv6.
func (o BareMetalServerIpOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIp) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type BareMetalServerIpArrayOutput struct{ *pulumi.OutputState }

func (BareMetalServerIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalServerIp)(nil)).Elem()
}

func (o BareMetalServerIpArrayOutput) ToBareMetalServerIpArrayOutput() BareMetalServerIpArrayOutput {
	return o
}

func (o BareMetalServerIpArrayOutput) ToBareMetalServerIpArrayOutputWithContext(ctx context.Context) BareMetalServerIpArrayOutput {
	return o
}

func (o BareMetalServerIpArrayOutput) Index(i pulumi.IntInput) BareMetalServerIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalServerIp {
		return vs[0].([]BareMetalServerIp)[vs[1].(int)]
	}).(BareMetalServerIpOutput)
}

type BareMetalServerIpv4 struct {
	// The address of the IPv6.
	Address *string `pulumi:"address"`
	// The id of the private network to attach.
	Id *string `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse *string `pulumi:"reverse"`
	// The type of the IPv6.
	Version *string `pulumi:"version"`
}

// BareMetalServerIpv4Input is an input type that accepts BareMetalServerIpv4Args and BareMetalServerIpv4Output values.
// You can construct a concrete instance of `BareMetalServerIpv4Input` via:
//
//	BareMetalServerIpv4Args{...}
type BareMetalServerIpv4Input interface {
	pulumi.Input

	ToBareMetalServerIpv4Output() BareMetalServerIpv4Output
	ToBareMetalServerIpv4OutputWithContext(context.Context) BareMetalServerIpv4Output
}

type BareMetalServerIpv4Args struct {
	// The address of the IPv6.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The id of the private network to attach.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse pulumi.StringPtrInput `pulumi:"reverse"`
	// The type of the IPv6.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (BareMetalServerIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalServerIpv4)(nil)).Elem()
}

func (i BareMetalServerIpv4Args) ToBareMetalServerIpv4Output() BareMetalServerIpv4Output {
	return i.ToBareMetalServerIpv4OutputWithContext(context.Background())
}

func (i BareMetalServerIpv4Args) ToBareMetalServerIpv4OutputWithContext(ctx context.Context) BareMetalServerIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalServerIpv4Output)
}

// BareMetalServerIpv4ArrayInput is an input type that accepts BareMetalServerIpv4Array and BareMetalServerIpv4ArrayOutput values.
// You can construct a concrete instance of `BareMetalServerIpv4ArrayInput` via:
//
//	BareMetalServerIpv4Array{ BareMetalServerIpv4Args{...} }
type BareMetalServerIpv4ArrayInput interface {
	pulumi.Input

	ToBareMetalServerIpv4ArrayOutput() BareMetalServerIpv4ArrayOutput
	ToBareMetalServerIpv4ArrayOutputWithContext(context.Context) BareMetalServerIpv4ArrayOutput
}

type BareMetalServerIpv4Array []BareMetalServerIpv4Input

func (BareMetalServerIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalServerIpv4)(nil)).Elem()
}

func (i BareMetalServerIpv4Array) ToBareMetalServerIpv4ArrayOutput() BareMetalServerIpv4ArrayOutput {
	return i.ToBareMetalServerIpv4ArrayOutputWithContext(context.Background())
}

func (i BareMetalServerIpv4Array) ToBareMetalServerIpv4ArrayOutputWithContext(ctx context.Context) BareMetalServerIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalServerIpv4ArrayOutput)
}

type BareMetalServerIpv4Output struct{ *pulumi.OutputState }

func (BareMetalServerIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalServerIpv4)(nil)).Elem()
}

func (o BareMetalServerIpv4Output) ToBareMetalServerIpv4Output() BareMetalServerIpv4Output {
	return o
}

func (o BareMetalServerIpv4Output) ToBareMetalServerIpv4OutputWithContext(ctx context.Context) BareMetalServerIpv4Output {
	return o
}

// The address of the IPv6.
func (o BareMetalServerIpv4Output) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIpv4) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The id of the private network to attach.
func (o BareMetalServerIpv4Output) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIpv4) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reverse of the IPv6.
func (o BareMetalServerIpv4Output) Reverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIpv4) *string { return v.Reverse }).(pulumi.StringPtrOutput)
}

// The type of the IPv6.
func (o BareMetalServerIpv4Output) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIpv4) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type BareMetalServerIpv4ArrayOutput struct{ *pulumi.OutputState }

func (BareMetalServerIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalServerIpv4)(nil)).Elem()
}

func (o BareMetalServerIpv4ArrayOutput) ToBareMetalServerIpv4ArrayOutput() BareMetalServerIpv4ArrayOutput {
	return o
}

func (o BareMetalServerIpv4ArrayOutput) ToBareMetalServerIpv4ArrayOutputWithContext(ctx context.Context) BareMetalServerIpv4ArrayOutput {
	return o
}

func (o BareMetalServerIpv4ArrayOutput) Index(i pulumi.IntInput) BareMetalServerIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalServerIpv4 {
		return vs[0].([]BareMetalServerIpv4)[vs[1].(int)]
	}).(BareMetalServerIpv4Output)
}

type BareMetalServerIpv6 struct {
	// The address of the IPv6.
	Address *string `pulumi:"address"`
	// The id of the private network to attach.
	Id *string `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse *string `pulumi:"reverse"`
	// The type of the IPv6.
	Version *string `pulumi:"version"`
}

// BareMetalServerIpv6Input is an input type that accepts BareMetalServerIpv6Args and BareMetalServerIpv6Output values.
// You can construct a concrete instance of `BareMetalServerIpv6Input` via:
//
//	BareMetalServerIpv6Args{...}
type BareMetalServerIpv6Input interface {
	pulumi.Input

	ToBareMetalServerIpv6Output() BareMetalServerIpv6Output
	ToBareMetalServerIpv6OutputWithContext(context.Context) BareMetalServerIpv6Output
}

type BareMetalServerIpv6Args struct {
	// The address of the IPv6.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The id of the private network to attach.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse pulumi.StringPtrInput `pulumi:"reverse"`
	// The type of the IPv6.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (BareMetalServerIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalServerIpv6)(nil)).Elem()
}

func (i BareMetalServerIpv6Args) ToBareMetalServerIpv6Output() BareMetalServerIpv6Output {
	return i.ToBareMetalServerIpv6OutputWithContext(context.Background())
}

func (i BareMetalServerIpv6Args) ToBareMetalServerIpv6OutputWithContext(ctx context.Context) BareMetalServerIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalServerIpv6Output)
}

// BareMetalServerIpv6ArrayInput is an input type that accepts BareMetalServerIpv6Array and BareMetalServerIpv6ArrayOutput values.
// You can construct a concrete instance of `BareMetalServerIpv6ArrayInput` via:
//
//	BareMetalServerIpv6Array{ BareMetalServerIpv6Args{...} }
type BareMetalServerIpv6ArrayInput interface {
	pulumi.Input

	ToBareMetalServerIpv6ArrayOutput() BareMetalServerIpv6ArrayOutput
	ToBareMetalServerIpv6ArrayOutputWithContext(context.Context) BareMetalServerIpv6ArrayOutput
}

type BareMetalServerIpv6Array []BareMetalServerIpv6Input

func (BareMetalServerIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalServerIpv6)(nil)).Elem()
}

func (i BareMetalServerIpv6Array) ToBareMetalServerIpv6ArrayOutput() BareMetalServerIpv6ArrayOutput {
	return i.ToBareMetalServerIpv6ArrayOutputWithContext(context.Background())
}

func (i BareMetalServerIpv6Array) ToBareMetalServerIpv6ArrayOutputWithContext(ctx context.Context) BareMetalServerIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalServerIpv6ArrayOutput)
}

type BareMetalServerIpv6Output struct{ *pulumi.OutputState }

func (BareMetalServerIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalServerIpv6)(nil)).Elem()
}

func (o BareMetalServerIpv6Output) ToBareMetalServerIpv6Output() BareMetalServerIpv6Output {
	return o
}

func (o BareMetalServerIpv6Output) ToBareMetalServerIpv6OutputWithContext(ctx context.Context) BareMetalServerIpv6Output {
	return o
}

// The address of the IPv6.
func (o BareMetalServerIpv6Output) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIpv6) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The id of the private network to attach.
func (o BareMetalServerIpv6Output) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIpv6) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reverse of the IPv6.
func (o BareMetalServerIpv6Output) Reverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIpv6) *string { return v.Reverse }).(pulumi.StringPtrOutput)
}

// The type of the IPv6.
func (o BareMetalServerIpv6Output) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerIpv6) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type BareMetalServerIpv6ArrayOutput struct{ *pulumi.OutputState }

func (BareMetalServerIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalServerIpv6)(nil)).Elem()
}

func (o BareMetalServerIpv6ArrayOutput) ToBareMetalServerIpv6ArrayOutput() BareMetalServerIpv6ArrayOutput {
	return o
}

func (o BareMetalServerIpv6ArrayOutput) ToBareMetalServerIpv6ArrayOutputWithContext(ctx context.Context) BareMetalServerIpv6ArrayOutput {
	return o
}

func (o BareMetalServerIpv6ArrayOutput) Index(i pulumi.IntInput) BareMetalServerIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalServerIpv6 {
		return vs[0].([]BareMetalServerIpv6)[vs[1].(int)]
	}).(BareMetalServerIpv6Output)
}

type BareMetalServerOption struct {
	// The auto expiration date for compatible options
	ExpiresAt *string `pulumi:"expiresAt"`
	// The id of the private network to attach.
	Id string `pulumi:"id"`
	// The name of the server.
	Name *string `pulumi:"name"`
}

// BareMetalServerOptionInput is an input type that accepts BareMetalServerOptionArgs and BareMetalServerOptionOutput values.
// You can construct a concrete instance of `BareMetalServerOptionInput` via:
//
//	BareMetalServerOptionArgs{...}
type BareMetalServerOptionInput interface {
	pulumi.Input

	ToBareMetalServerOptionOutput() BareMetalServerOptionOutput
	ToBareMetalServerOptionOutputWithContext(context.Context) BareMetalServerOptionOutput
}

type BareMetalServerOptionArgs struct {
	// The auto expiration date for compatible options
	ExpiresAt pulumi.StringPtrInput `pulumi:"expiresAt"`
	// The id of the private network to attach.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the server.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BareMetalServerOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalServerOption)(nil)).Elem()
}

func (i BareMetalServerOptionArgs) ToBareMetalServerOptionOutput() BareMetalServerOptionOutput {
	return i.ToBareMetalServerOptionOutputWithContext(context.Background())
}

func (i BareMetalServerOptionArgs) ToBareMetalServerOptionOutputWithContext(ctx context.Context) BareMetalServerOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalServerOptionOutput)
}

// BareMetalServerOptionArrayInput is an input type that accepts BareMetalServerOptionArray and BareMetalServerOptionArrayOutput values.
// You can construct a concrete instance of `BareMetalServerOptionArrayInput` via:
//
//	BareMetalServerOptionArray{ BareMetalServerOptionArgs{...} }
type BareMetalServerOptionArrayInput interface {
	pulumi.Input

	ToBareMetalServerOptionArrayOutput() BareMetalServerOptionArrayOutput
	ToBareMetalServerOptionArrayOutputWithContext(context.Context) BareMetalServerOptionArrayOutput
}

type BareMetalServerOptionArray []BareMetalServerOptionInput

func (BareMetalServerOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalServerOption)(nil)).Elem()
}

func (i BareMetalServerOptionArray) ToBareMetalServerOptionArrayOutput() BareMetalServerOptionArrayOutput {
	return i.ToBareMetalServerOptionArrayOutputWithContext(context.Background())
}

func (i BareMetalServerOptionArray) ToBareMetalServerOptionArrayOutputWithContext(ctx context.Context) BareMetalServerOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalServerOptionArrayOutput)
}

type BareMetalServerOptionOutput struct{ *pulumi.OutputState }

func (BareMetalServerOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalServerOption)(nil)).Elem()
}

func (o BareMetalServerOptionOutput) ToBareMetalServerOptionOutput() BareMetalServerOptionOutput {
	return o
}

func (o BareMetalServerOptionOutput) ToBareMetalServerOptionOutputWithContext(ctx context.Context) BareMetalServerOptionOutput {
	return o
}

// The auto expiration date for compatible options
func (o BareMetalServerOptionOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerOption) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

// The id of the private network to attach.
func (o BareMetalServerOptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalServerOption) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the server.
func (o BareMetalServerOptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerOption) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BareMetalServerOptionArrayOutput struct{ *pulumi.OutputState }

func (BareMetalServerOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalServerOption)(nil)).Elem()
}

func (o BareMetalServerOptionArrayOutput) ToBareMetalServerOptionArrayOutput() BareMetalServerOptionArrayOutput {
	return o
}

func (o BareMetalServerOptionArrayOutput) ToBareMetalServerOptionArrayOutputWithContext(ctx context.Context) BareMetalServerOptionArrayOutput {
	return o
}

func (o BareMetalServerOptionArrayOutput) Index(i pulumi.IntInput) BareMetalServerOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalServerOption {
		return vs[0].([]BareMetalServerOption)[vs[1].(int)]
	}).(BareMetalServerOptionOutput)
}

type BareMetalServerPrivateNetwork struct {
	// The date and time of the creation of the private network.
	CreatedAt *string `pulumi:"createdAt"`
	// The id of the private network to attach.
	Id string `pulumi:"id"`
	// The private network status.
	Status *string `pulumi:"status"`
	// The date and time of the last update of the private network.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The VLAN ID associated to the private network.
	Vlan *int `pulumi:"vlan"`
}

// BareMetalServerPrivateNetworkInput is an input type that accepts BareMetalServerPrivateNetworkArgs and BareMetalServerPrivateNetworkOutput values.
// You can construct a concrete instance of `BareMetalServerPrivateNetworkInput` via:
//
//	BareMetalServerPrivateNetworkArgs{...}
type BareMetalServerPrivateNetworkInput interface {
	pulumi.Input

	ToBareMetalServerPrivateNetworkOutput() BareMetalServerPrivateNetworkOutput
	ToBareMetalServerPrivateNetworkOutputWithContext(context.Context) BareMetalServerPrivateNetworkOutput
}

type BareMetalServerPrivateNetworkArgs struct {
	// The date and time of the creation of the private network.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The id of the private network to attach.
	Id pulumi.StringInput `pulumi:"id"`
	// The private network status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The date and time of the last update of the private network.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
	// The VLAN ID associated to the private network.
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
}

func (BareMetalServerPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalServerPrivateNetwork)(nil)).Elem()
}

func (i BareMetalServerPrivateNetworkArgs) ToBareMetalServerPrivateNetworkOutput() BareMetalServerPrivateNetworkOutput {
	return i.ToBareMetalServerPrivateNetworkOutputWithContext(context.Background())
}

func (i BareMetalServerPrivateNetworkArgs) ToBareMetalServerPrivateNetworkOutputWithContext(ctx context.Context) BareMetalServerPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalServerPrivateNetworkOutput)
}

// BareMetalServerPrivateNetworkArrayInput is an input type that accepts BareMetalServerPrivateNetworkArray and BareMetalServerPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `BareMetalServerPrivateNetworkArrayInput` via:
//
//	BareMetalServerPrivateNetworkArray{ BareMetalServerPrivateNetworkArgs{...} }
type BareMetalServerPrivateNetworkArrayInput interface {
	pulumi.Input

	ToBareMetalServerPrivateNetworkArrayOutput() BareMetalServerPrivateNetworkArrayOutput
	ToBareMetalServerPrivateNetworkArrayOutputWithContext(context.Context) BareMetalServerPrivateNetworkArrayOutput
}

type BareMetalServerPrivateNetworkArray []BareMetalServerPrivateNetworkInput

func (BareMetalServerPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalServerPrivateNetwork)(nil)).Elem()
}

func (i BareMetalServerPrivateNetworkArray) ToBareMetalServerPrivateNetworkArrayOutput() BareMetalServerPrivateNetworkArrayOutput {
	return i.ToBareMetalServerPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i BareMetalServerPrivateNetworkArray) ToBareMetalServerPrivateNetworkArrayOutputWithContext(ctx context.Context) BareMetalServerPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalServerPrivateNetworkArrayOutput)
}

type BareMetalServerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (BareMetalServerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalServerPrivateNetwork)(nil)).Elem()
}

func (o BareMetalServerPrivateNetworkOutput) ToBareMetalServerPrivateNetworkOutput() BareMetalServerPrivateNetworkOutput {
	return o
}

func (o BareMetalServerPrivateNetworkOutput) ToBareMetalServerPrivateNetworkOutputWithContext(ctx context.Context) BareMetalServerPrivateNetworkOutput {
	return o
}

// The date and time of the creation of the private network.
func (o BareMetalServerPrivateNetworkOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerPrivateNetwork) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The id of the private network to attach.
func (o BareMetalServerPrivateNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalServerPrivateNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// The private network status.
func (o BareMetalServerPrivateNetworkOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerPrivateNetwork) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The date and time of the last update of the private network.
func (o BareMetalServerPrivateNetworkOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalServerPrivateNetwork) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The VLAN ID associated to the private network.
func (o BareMetalServerPrivateNetworkOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BareMetalServerPrivateNetwork) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type BareMetalServerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (BareMetalServerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalServerPrivateNetwork)(nil)).Elem()
}

func (o BareMetalServerPrivateNetworkArrayOutput) ToBareMetalServerPrivateNetworkArrayOutput() BareMetalServerPrivateNetworkArrayOutput {
	return o
}

func (o BareMetalServerPrivateNetworkArrayOutput) ToBareMetalServerPrivateNetworkArrayOutputWithContext(ctx context.Context) BareMetalServerPrivateNetworkArrayOutput {
	return o
}

func (o BareMetalServerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) BareMetalServerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalServerPrivateNetwork {
		return vs[0].([]BareMetalServerPrivateNetwork)[vs[1].(int)]
	}).(BareMetalServerPrivateNetworkOutput)
}

type GetBareMetalOfferCpus struct {
	// Number of core on this CPU.
	CoreCount int `pulumi:"coreCount"`
	// Frequency of the memory in MHz.
	Frequency int `pulumi:"frequency"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name string `pulumi:"name"`
	// Number of thread on this CPU.
	ThreadCount int `pulumi:"threadCount"`
}

// GetBareMetalOfferCpusInput is an input type that accepts GetBareMetalOfferCpusArgs and GetBareMetalOfferCpusOutput values.
// You can construct a concrete instance of `GetBareMetalOfferCpusInput` via:
//
//	GetBareMetalOfferCpusArgs{...}
type GetBareMetalOfferCpusInput interface {
	pulumi.Input

	ToGetBareMetalOfferCpusOutput() GetBareMetalOfferCpusOutput
	ToGetBareMetalOfferCpusOutputWithContext(context.Context) GetBareMetalOfferCpusOutput
}

type GetBareMetalOfferCpusArgs struct {
	// Number of core on this CPU.
	CoreCount pulumi.IntInput `pulumi:"coreCount"`
	// Frequency of the memory in MHz.
	Frequency pulumi.IntInput `pulumi:"frequency"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// Number of thread on this CPU.
	ThreadCount pulumi.IntInput `pulumi:"threadCount"`
}

func (GetBareMetalOfferCpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalOfferCpus)(nil)).Elem()
}

func (i GetBareMetalOfferCpusArgs) ToGetBareMetalOfferCpusOutput() GetBareMetalOfferCpusOutput {
	return i.ToGetBareMetalOfferCpusOutputWithContext(context.Background())
}

func (i GetBareMetalOfferCpusArgs) ToGetBareMetalOfferCpusOutputWithContext(ctx context.Context) GetBareMetalOfferCpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalOfferCpusOutput)
}

// GetBareMetalOfferCpusArrayInput is an input type that accepts GetBareMetalOfferCpusArray and GetBareMetalOfferCpusArrayOutput values.
// You can construct a concrete instance of `GetBareMetalOfferCpusArrayInput` via:
//
//	GetBareMetalOfferCpusArray{ GetBareMetalOfferCpusArgs{...} }
type GetBareMetalOfferCpusArrayInput interface {
	pulumi.Input

	ToGetBareMetalOfferCpusArrayOutput() GetBareMetalOfferCpusArrayOutput
	ToGetBareMetalOfferCpusArrayOutputWithContext(context.Context) GetBareMetalOfferCpusArrayOutput
}

type GetBareMetalOfferCpusArray []GetBareMetalOfferCpusInput

func (GetBareMetalOfferCpusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalOfferCpus)(nil)).Elem()
}

func (i GetBareMetalOfferCpusArray) ToGetBareMetalOfferCpusArrayOutput() GetBareMetalOfferCpusArrayOutput {
	return i.ToGetBareMetalOfferCpusArrayOutputWithContext(context.Background())
}

func (i GetBareMetalOfferCpusArray) ToGetBareMetalOfferCpusArrayOutputWithContext(ctx context.Context) GetBareMetalOfferCpusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalOfferCpusArrayOutput)
}

type GetBareMetalOfferCpusOutput struct{ *pulumi.OutputState }

func (GetBareMetalOfferCpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalOfferCpus)(nil)).Elem()
}

func (o GetBareMetalOfferCpusOutput) ToGetBareMetalOfferCpusOutput() GetBareMetalOfferCpusOutput {
	return o
}

func (o GetBareMetalOfferCpusOutput) ToGetBareMetalOfferCpusOutputWithContext(ctx context.Context) GetBareMetalOfferCpusOutput {
	return o
}

// Number of core on this CPU.
func (o GetBareMetalOfferCpusOutput) CoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBareMetalOfferCpus) int { return v.CoreCount }).(pulumi.IntOutput)
}

// Frequency of the memory in MHz.
func (o GetBareMetalOfferCpusOutput) Frequency() pulumi.IntOutput {
	return o.ApplyT(func(v GetBareMetalOfferCpus) int { return v.Frequency }).(pulumi.IntOutput)
}

// The offer name. Only one of `name` and `offerId` should be specified.
func (o GetBareMetalOfferCpusOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalOfferCpus) string { return v.Name }).(pulumi.StringOutput)
}

// Number of thread on this CPU.
func (o GetBareMetalOfferCpusOutput) ThreadCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBareMetalOfferCpus) int { return v.ThreadCount }).(pulumi.IntOutput)
}

type GetBareMetalOfferCpusArrayOutput struct{ *pulumi.OutputState }

func (GetBareMetalOfferCpusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalOfferCpus)(nil)).Elem()
}

func (o GetBareMetalOfferCpusArrayOutput) ToGetBareMetalOfferCpusArrayOutput() GetBareMetalOfferCpusArrayOutput {
	return o
}

func (o GetBareMetalOfferCpusArrayOutput) ToGetBareMetalOfferCpusArrayOutputWithContext(ctx context.Context) GetBareMetalOfferCpusArrayOutput {
	return o
}

func (o GetBareMetalOfferCpusArrayOutput) Index(i pulumi.IntInput) GetBareMetalOfferCpusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBareMetalOfferCpus {
		return vs[0].([]GetBareMetalOfferCpus)[vs[1].(int)]
	}).(GetBareMetalOfferCpusOutput)
}

type GetBareMetalOfferDisk struct {
	// Capacity of the memory in GB.
	Capacity int `pulumi:"capacity"`
	// Type of memory.
	Type string `pulumi:"type"`
}

// GetBareMetalOfferDiskInput is an input type that accepts GetBareMetalOfferDiskArgs and GetBareMetalOfferDiskOutput values.
// You can construct a concrete instance of `GetBareMetalOfferDiskInput` via:
//
//	GetBareMetalOfferDiskArgs{...}
type GetBareMetalOfferDiskInput interface {
	pulumi.Input

	ToGetBareMetalOfferDiskOutput() GetBareMetalOfferDiskOutput
	ToGetBareMetalOfferDiskOutputWithContext(context.Context) GetBareMetalOfferDiskOutput
}

type GetBareMetalOfferDiskArgs struct {
	// Capacity of the memory in GB.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Type of memory.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetBareMetalOfferDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalOfferDisk)(nil)).Elem()
}

func (i GetBareMetalOfferDiskArgs) ToGetBareMetalOfferDiskOutput() GetBareMetalOfferDiskOutput {
	return i.ToGetBareMetalOfferDiskOutputWithContext(context.Background())
}

func (i GetBareMetalOfferDiskArgs) ToGetBareMetalOfferDiskOutputWithContext(ctx context.Context) GetBareMetalOfferDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalOfferDiskOutput)
}

// GetBareMetalOfferDiskArrayInput is an input type that accepts GetBareMetalOfferDiskArray and GetBareMetalOfferDiskArrayOutput values.
// You can construct a concrete instance of `GetBareMetalOfferDiskArrayInput` via:
//
//	GetBareMetalOfferDiskArray{ GetBareMetalOfferDiskArgs{...} }
type GetBareMetalOfferDiskArrayInput interface {
	pulumi.Input

	ToGetBareMetalOfferDiskArrayOutput() GetBareMetalOfferDiskArrayOutput
	ToGetBareMetalOfferDiskArrayOutputWithContext(context.Context) GetBareMetalOfferDiskArrayOutput
}

type GetBareMetalOfferDiskArray []GetBareMetalOfferDiskInput

func (GetBareMetalOfferDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalOfferDisk)(nil)).Elem()
}

func (i GetBareMetalOfferDiskArray) ToGetBareMetalOfferDiskArrayOutput() GetBareMetalOfferDiskArrayOutput {
	return i.ToGetBareMetalOfferDiskArrayOutputWithContext(context.Background())
}

func (i GetBareMetalOfferDiskArray) ToGetBareMetalOfferDiskArrayOutputWithContext(ctx context.Context) GetBareMetalOfferDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalOfferDiskArrayOutput)
}

type GetBareMetalOfferDiskOutput struct{ *pulumi.OutputState }

func (GetBareMetalOfferDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalOfferDisk)(nil)).Elem()
}

func (o GetBareMetalOfferDiskOutput) ToGetBareMetalOfferDiskOutput() GetBareMetalOfferDiskOutput {
	return o
}

func (o GetBareMetalOfferDiskOutput) ToGetBareMetalOfferDiskOutputWithContext(ctx context.Context) GetBareMetalOfferDiskOutput {
	return o
}

// Capacity of the memory in GB.
func (o GetBareMetalOfferDiskOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBareMetalOfferDisk) int { return v.Capacity }).(pulumi.IntOutput)
}

// Type of memory.
func (o GetBareMetalOfferDiskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalOfferDisk) string { return v.Type }).(pulumi.StringOutput)
}

type GetBareMetalOfferDiskArrayOutput struct{ *pulumi.OutputState }

func (GetBareMetalOfferDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalOfferDisk)(nil)).Elem()
}

func (o GetBareMetalOfferDiskArrayOutput) ToGetBareMetalOfferDiskArrayOutput() GetBareMetalOfferDiskArrayOutput {
	return o
}

func (o GetBareMetalOfferDiskArrayOutput) ToGetBareMetalOfferDiskArrayOutputWithContext(ctx context.Context) GetBareMetalOfferDiskArrayOutput {
	return o
}

func (o GetBareMetalOfferDiskArrayOutput) Index(i pulumi.IntInput) GetBareMetalOfferDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBareMetalOfferDisk {
		return vs[0].([]GetBareMetalOfferDisk)[vs[1].(int)]
	}).(GetBareMetalOfferDiskOutput)
}

type GetBareMetalOfferMemory struct {
	// Capacity of the memory in GB.
	Capacity int `pulumi:"capacity"`
	// Frequency of the memory in MHz.
	Frequency int `pulumi:"frequency"`
	// True if error-correcting code is available on this memory.
	IsEcc bool `pulumi:"isEcc"`
	// Type of memory.
	Type string `pulumi:"type"`
}

// GetBareMetalOfferMemoryInput is an input type that accepts GetBareMetalOfferMemoryArgs and GetBareMetalOfferMemoryOutput values.
// You can construct a concrete instance of `GetBareMetalOfferMemoryInput` via:
//
//	GetBareMetalOfferMemoryArgs{...}
type GetBareMetalOfferMemoryInput interface {
	pulumi.Input

	ToGetBareMetalOfferMemoryOutput() GetBareMetalOfferMemoryOutput
	ToGetBareMetalOfferMemoryOutputWithContext(context.Context) GetBareMetalOfferMemoryOutput
}

type GetBareMetalOfferMemoryArgs struct {
	// Capacity of the memory in GB.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Frequency of the memory in MHz.
	Frequency pulumi.IntInput `pulumi:"frequency"`
	// True if error-correcting code is available on this memory.
	IsEcc pulumi.BoolInput `pulumi:"isEcc"`
	// Type of memory.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetBareMetalOfferMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalOfferMemory)(nil)).Elem()
}

func (i GetBareMetalOfferMemoryArgs) ToGetBareMetalOfferMemoryOutput() GetBareMetalOfferMemoryOutput {
	return i.ToGetBareMetalOfferMemoryOutputWithContext(context.Background())
}

func (i GetBareMetalOfferMemoryArgs) ToGetBareMetalOfferMemoryOutputWithContext(ctx context.Context) GetBareMetalOfferMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalOfferMemoryOutput)
}

// GetBareMetalOfferMemoryArrayInput is an input type that accepts GetBareMetalOfferMemoryArray and GetBareMetalOfferMemoryArrayOutput values.
// You can construct a concrete instance of `GetBareMetalOfferMemoryArrayInput` via:
//
//	GetBareMetalOfferMemoryArray{ GetBareMetalOfferMemoryArgs{...} }
type GetBareMetalOfferMemoryArrayInput interface {
	pulumi.Input

	ToGetBareMetalOfferMemoryArrayOutput() GetBareMetalOfferMemoryArrayOutput
	ToGetBareMetalOfferMemoryArrayOutputWithContext(context.Context) GetBareMetalOfferMemoryArrayOutput
}

type GetBareMetalOfferMemoryArray []GetBareMetalOfferMemoryInput

func (GetBareMetalOfferMemoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalOfferMemory)(nil)).Elem()
}

func (i GetBareMetalOfferMemoryArray) ToGetBareMetalOfferMemoryArrayOutput() GetBareMetalOfferMemoryArrayOutput {
	return i.ToGetBareMetalOfferMemoryArrayOutputWithContext(context.Background())
}

func (i GetBareMetalOfferMemoryArray) ToGetBareMetalOfferMemoryArrayOutputWithContext(ctx context.Context) GetBareMetalOfferMemoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalOfferMemoryArrayOutput)
}

type GetBareMetalOfferMemoryOutput struct{ *pulumi.OutputState }

func (GetBareMetalOfferMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalOfferMemory)(nil)).Elem()
}

func (o GetBareMetalOfferMemoryOutput) ToGetBareMetalOfferMemoryOutput() GetBareMetalOfferMemoryOutput {
	return o
}

func (o GetBareMetalOfferMemoryOutput) ToGetBareMetalOfferMemoryOutputWithContext(ctx context.Context) GetBareMetalOfferMemoryOutput {
	return o
}

// Capacity of the memory in GB.
func (o GetBareMetalOfferMemoryOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBareMetalOfferMemory) int { return v.Capacity }).(pulumi.IntOutput)
}

// Frequency of the memory in MHz.
func (o GetBareMetalOfferMemoryOutput) Frequency() pulumi.IntOutput {
	return o.ApplyT(func(v GetBareMetalOfferMemory) int { return v.Frequency }).(pulumi.IntOutput)
}

// True if error-correcting code is available on this memory.
func (o GetBareMetalOfferMemoryOutput) IsEcc() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBareMetalOfferMemory) bool { return v.IsEcc }).(pulumi.BoolOutput)
}

// Type of memory.
func (o GetBareMetalOfferMemoryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalOfferMemory) string { return v.Type }).(pulumi.StringOutput)
}

type GetBareMetalOfferMemoryArrayOutput struct{ *pulumi.OutputState }

func (GetBareMetalOfferMemoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalOfferMemory)(nil)).Elem()
}

func (o GetBareMetalOfferMemoryArrayOutput) ToGetBareMetalOfferMemoryArrayOutput() GetBareMetalOfferMemoryArrayOutput {
	return o
}

func (o GetBareMetalOfferMemoryArrayOutput) ToGetBareMetalOfferMemoryArrayOutputWithContext(ctx context.Context) GetBareMetalOfferMemoryArrayOutput {
	return o
}

func (o GetBareMetalOfferMemoryArrayOutput) Index(i pulumi.IntInput) GetBareMetalOfferMemoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBareMetalOfferMemory {
		return vs[0].([]GetBareMetalOfferMemory)[vs[1].(int)]
	}).(GetBareMetalOfferMemoryOutput)
}

type GetBareMetalServerIp struct {
	// The IPv6 address
	Address string `pulumi:"address"`
	// The ID of the server.
	Id string `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse string `pulumi:"reverse"`
	// The version of the IPv6
	Version string `pulumi:"version"`
}

// GetBareMetalServerIpInput is an input type that accepts GetBareMetalServerIpArgs and GetBareMetalServerIpOutput values.
// You can construct a concrete instance of `GetBareMetalServerIpInput` via:
//
//	GetBareMetalServerIpArgs{...}
type GetBareMetalServerIpInput interface {
	pulumi.Input

	ToGetBareMetalServerIpOutput() GetBareMetalServerIpOutput
	ToGetBareMetalServerIpOutputWithContext(context.Context) GetBareMetalServerIpOutput
}

type GetBareMetalServerIpArgs struct {
	// The IPv6 address
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse pulumi.StringInput `pulumi:"reverse"`
	// The version of the IPv6
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetBareMetalServerIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalServerIp)(nil)).Elem()
}

func (i GetBareMetalServerIpArgs) ToGetBareMetalServerIpOutput() GetBareMetalServerIpOutput {
	return i.ToGetBareMetalServerIpOutputWithContext(context.Background())
}

func (i GetBareMetalServerIpArgs) ToGetBareMetalServerIpOutputWithContext(ctx context.Context) GetBareMetalServerIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalServerIpOutput)
}

// GetBareMetalServerIpArrayInput is an input type that accepts GetBareMetalServerIpArray and GetBareMetalServerIpArrayOutput values.
// You can construct a concrete instance of `GetBareMetalServerIpArrayInput` via:
//
//	GetBareMetalServerIpArray{ GetBareMetalServerIpArgs{...} }
type GetBareMetalServerIpArrayInput interface {
	pulumi.Input

	ToGetBareMetalServerIpArrayOutput() GetBareMetalServerIpArrayOutput
	ToGetBareMetalServerIpArrayOutputWithContext(context.Context) GetBareMetalServerIpArrayOutput
}

type GetBareMetalServerIpArray []GetBareMetalServerIpInput

func (GetBareMetalServerIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalServerIp)(nil)).Elem()
}

func (i GetBareMetalServerIpArray) ToGetBareMetalServerIpArrayOutput() GetBareMetalServerIpArrayOutput {
	return i.ToGetBareMetalServerIpArrayOutputWithContext(context.Background())
}

func (i GetBareMetalServerIpArray) ToGetBareMetalServerIpArrayOutputWithContext(ctx context.Context) GetBareMetalServerIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalServerIpArrayOutput)
}

type GetBareMetalServerIpOutput struct{ *pulumi.OutputState }

func (GetBareMetalServerIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalServerIp)(nil)).Elem()
}

func (o GetBareMetalServerIpOutput) ToGetBareMetalServerIpOutput() GetBareMetalServerIpOutput {
	return o
}

func (o GetBareMetalServerIpOutput) ToGetBareMetalServerIpOutputWithContext(ctx context.Context) GetBareMetalServerIpOutput {
	return o
}

// The IPv6 address
func (o GetBareMetalServerIpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIp) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of the server.
func (o GetBareMetalServerIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIp) string { return v.Id }).(pulumi.StringOutput)
}

// The Reverse of the IPv6
func (o GetBareMetalServerIpOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIp) string { return v.Reverse }).(pulumi.StringOutput)
}

// The version of the IPv6
func (o GetBareMetalServerIpOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIp) string { return v.Version }).(pulumi.StringOutput)
}

type GetBareMetalServerIpArrayOutput struct{ *pulumi.OutputState }

func (GetBareMetalServerIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalServerIp)(nil)).Elem()
}

func (o GetBareMetalServerIpArrayOutput) ToGetBareMetalServerIpArrayOutput() GetBareMetalServerIpArrayOutput {
	return o
}

func (o GetBareMetalServerIpArrayOutput) ToGetBareMetalServerIpArrayOutputWithContext(ctx context.Context) GetBareMetalServerIpArrayOutput {
	return o
}

func (o GetBareMetalServerIpArrayOutput) Index(i pulumi.IntInput) GetBareMetalServerIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBareMetalServerIp {
		return vs[0].([]GetBareMetalServerIp)[vs[1].(int)]
	}).(GetBareMetalServerIpOutput)
}

type GetBareMetalServerIpv4 struct {
	// The IPv6 address
	Address string `pulumi:"address"`
	// The ID of the server.
	Id string `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse string `pulumi:"reverse"`
	// The version of the IPv6
	Version string `pulumi:"version"`
}

// GetBareMetalServerIpv4Input is an input type that accepts GetBareMetalServerIpv4Args and GetBareMetalServerIpv4Output values.
// You can construct a concrete instance of `GetBareMetalServerIpv4Input` via:
//
//	GetBareMetalServerIpv4Args{...}
type GetBareMetalServerIpv4Input interface {
	pulumi.Input

	ToGetBareMetalServerIpv4Output() GetBareMetalServerIpv4Output
	ToGetBareMetalServerIpv4OutputWithContext(context.Context) GetBareMetalServerIpv4Output
}

type GetBareMetalServerIpv4Args struct {
	// The IPv6 address
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse pulumi.StringInput `pulumi:"reverse"`
	// The version of the IPv6
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetBareMetalServerIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalServerIpv4)(nil)).Elem()
}

func (i GetBareMetalServerIpv4Args) ToGetBareMetalServerIpv4Output() GetBareMetalServerIpv4Output {
	return i.ToGetBareMetalServerIpv4OutputWithContext(context.Background())
}

func (i GetBareMetalServerIpv4Args) ToGetBareMetalServerIpv4OutputWithContext(ctx context.Context) GetBareMetalServerIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalServerIpv4Output)
}

// GetBareMetalServerIpv4ArrayInput is an input type that accepts GetBareMetalServerIpv4Array and GetBareMetalServerIpv4ArrayOutput values.
// You can construct a concrete instance of `GetBareMetalServerIpv4ArrayInput` via:
//
//	GetBareMetalServerIpv4Array{ GetBareMetalServerIpv4Args{...} }
type GetBareMetalServerIpv4ArrayInput interface {
	pulumi.Input

	ToGetBareMetalServerIpv4ArrayOutput() GetBareMetalServerIpv4ArrayOutput
	ToGetBareMetalServerIpv4ArrayOutputWithContext(context.Context) GetBareMetalServerIpv4ArrayOutput
}

type GetBareMetalServerIpv4Array []GetBareMetalServerIpv4Input

func (GetBareMetalServerIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalServerIpv4)(nil)).Elem()
}

func (i GetBareMetalServerIpv4Array) ToGetBareMetalServerIpv4ArrayOutput() GetBareMetalServerIpv4ArrayOutput {
	return i.ToGetBareMetalServerIpv4ArrayOutputWithContext(context.Background())
}

func (i GetBareMetalServerIpv4Array) ToGetBareMetalServerIpv4ArrayOutputWithContext(ctx context.Context) GetBareMetalServerIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalServerIpv4ArrayOutput)
}

type GetBareMetalServerIpv4Output struct{ *pulumi.OutputState }

func (GetBareMetalServerIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalServerIpv4)(nil)).Elem()
}

func (o GetBareMetalServerIpv4Output) ToGetBareMetalServerIpv4Output() GetBareMetalServerIpv4Output {
	return o
}

func (o GetBareMetalServerIpv4Output) ToGetBareMetalServerIpv4OutputWithContext(ctx context.Context) GetBareMetalServerIpv4Output {
	return o
}

// The IPv6 address
func (o GetBareMetalServerIpv4Output) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIpv4) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of the server.
func (o GetBareMetalServerIpv4Output) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIpv4) string { return v.Id }).(pulumi.StringOutput)
}

// The Reverse of the IPv6
func (o GetBareMetalServerIpv4Output) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIpv4) string { return v.Reverse }).(pulumi.StringOutput)
}

// The version of the IPv6
func (o GetBareMetalServerIpv4Output) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIpv4) string { return v.Version }).(pulumi.StringOutput)
}

type GetBareMetalServerIpv4ArrayOutput struct{ *pulumi.OutputState }

func (GetBareMetalServerIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalServerIpv4)(nil)).Elem()
}

func (o GetBareMetalServerIpv4ArrayOutput) ToGetBareMetalServerIpv4ArrayOutput() GetBareMetalServerIpv4ArrayOutput {
	return o
}

func (o GetBareMetalServerIpv4ArrayOutput) ToGetBareMetalServerIpv4ArrayOutputWithContext(ctx context.Context) GetBareMetalServerIpv4ArrayOutput {
	return o
}

func (o GetBareMetalServerIpv4ArrayOutput) Index(i pulumi.IntInput) GetBareMetalServerIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBareMetalServerIpv4 {
		return vs[0].([]GetBareMetalServerIpv4)[vs[1].(int)]
	}).(GetBareMetalServerIpv4Output)
}

type GetBareMetalServerIpv6 struct {
	// The IPv6 address
	Address string `pulumi:"address"`
	// The ID of the server.
	Id string `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse string `pulumi:"reverse"`
	// The version of the IPv6
	Version string `pulumi:"version"`
}

// GetBareMetalServerIpv6Input is an input type that accepts GetBareMetalServerIpv6Args and GetBareMetalServerIpv6Output values.
// You can construct a concrete instance of `GetBareMetalServerIpv6Input` via:
//
//	GetBareMetalServerIpv6Args{...}
type GetBareMetalServerIpv6Input interface {
	pulumi.Input

	ToGetBareMetalServerIpv6Output() GetBareMetalServerIpv6Output
	ToGetBareMetalServerIpv6OutputWithContext(context.Context) GetBareMetalServerIpv6Output
}

type GetBareMetalServerIpv6Args struct {
	// The IPv6 address
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse pulumi.StringInput `pulumi:"reverse"`
	// The version of the IPv6
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetBareMetalServerIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalServerIpv6)(nil)).Elem()
}

func (i GetBareMetalServerIpv6Args) ToGetBareMetalServerIpv6Output() GetBareMetalServerIpv6Output {
	return i.ToGetBareMetalServerIpv6OutputWithContext(context.Background())
}

func (i GetBareMetalServerIpv6Args) ToGetBareMetalServerIpv6OutputWithContext(ctx context.Context) GetBareMetalServerIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalServerIpv6Output)
}

// GetBareMetalServerIpv6ArrayInput is an input type that accepts GetBareMetalServerIpv6Array and GetBareMetalServerIpv6ArrayOutput values.
// You can construct a concrete instance of `GetBareMetalServerIpv6ArrayInput` via:
//
//	GetBareMetalServerIpv6Array{ GetBareMetalServerIpv6Args{...} }
type GetBareMetalServerIpv6ArrayInput interface {
	pulumi.Input

	ToGetBareMetalServerIpv6ArrayOutput() GetBareMetalServerIpv6ArrayOutput
	ToGetBareMetalServerIpv6ArrayOutputWithContext(context.Context) GetBareMetalServerIpv6ArrayOutput
}

type GetBareMetalServerIpv6Array []GetBareMetalServerIpv6Input

func (GetBareMetalServerIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalServerIpv6)(nil)).Elem()
}

func (i GetBareMetalServerIpv6Array) ToGetBareMetalServerIpv6ArrayOutput() GetBareMetalServerIpv6ArrayOutput {
	return i.ToGetBareMetalServerIpv6ArrayOutputWithContext(context.Background())
}

func (i GetBareMetalServerIpv6Array) ToGetBareMetalServerIpv6ArrayOutputWithContext(ctx context.Context) GetBareMetalServerIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalServerIpv6ArrayOutput)
}

type GetBareMetalServerIpv6Output struct{ *pulumi.OutputState }

func (GetBareMetalServerIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalServerIpv6)(nil)).Elem()
}

func (o GetBareMetalServerIpv6Output) ToGetBareMetalServerIpv6Output() GetBareMetalServerIpv6Output {
	return o
}

func (o GetBareMetalServerIpv6Output) ToGetBareMetalServerIpv6OutputWithContext(ctx context.Context) GetBareMetalServerIpv6Output {
	return o
}

// The IPv6 address
func (o GetBareMetalServerIpv6Output) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIpv6) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of the server.
func (o GetBareMetalServerIpv6Output) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIpv6) string { return v.Id }).(pulumi.StringOutput)
}

// The Reverse of the IPv6
func (o GetBareMetalServerIpv6Output) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIpv6) string { return v.Reverse }).(pulumi.StringOutput)
}

// The version of the IPv6
func (o GetBareMetalServerIpv6Output) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerIpv6) string { return v.Version }).(pulumi.StringOutput)
}

type GetBareMetalServerIpv6ArrayOutput struct{ *pulumi.OutputState }

func (GetBareMetalServerIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalServerIpv6)(nil)).Elem()
}

func (o GetBareMetalServerIpv6ArrayOutput) ToGetBareMetalServerIpv6ArrayOutput() GetBareMetalServerIpv6ArrayOutput {
	return o
}

func (o GetBareMetalServerIpv6ArrayOutput) ToGetBareMetalServerIpv6ArrayOutputWithContext(ctx context.Context) GetBareMetalServerIpv6ArrayOutput {
	return o
}

func (o GetBareMetalServerIpv6ArrayOutput) Index(i pulumi.IntInput) GetBareMetalServerIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBareMetalServerIpv6 {
		return vs[0].([]GetBareMetalServerIpv6)[vs[1].(int)]
	}).(GetBareMetalServerIpv6Output)
}

type GetBareMetalServerOption struct {
	// Auto expire the option after this date
	ExpiresAt string `pulumi:"expiresAt"`
	// The ID of the server.
	Id string `pulumi:"id"`
	// The server name. Only one of `name` and `serverId` should be specified.
	Name string `pulumi:"name"`
}

// GetBareMetalServerOptionInput is an input type that accepts GetBareMetalServerOptionArgs and GetBareMetalServerOptionOutput values.
// You can construct a concrete instance of `GetBareMetalServerOptionInput` via:
//
//	GetBareMetalServerOptionArgs{...}
type GetBareMetalServerOptionInput interface {
	pulumi.Input

	ToGetBareMetalServerOptionOutput() GetBareMetalServerOptionOutput
	ToGetBareMetalServerOptionOutputWithContext(context.Context) GetBareMetalServerOptionOutput
}

type GetBareMetalServerOptionArgs struct {
	// Auto expire the option after this date
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// The ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// The server name. Only one of `name` and `serverId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetBareMetalServerOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalServerOption)(nil)).Elem()
}

func (i GetBareMetalServerOptionArgs) ToGetBareMetalServerOptionOutput() GetBareMetalServerOptionOutput {
	return i.ToGetBareMetalServerOptionOutputWithContext(context.Background())
}

func (i GetBareMetalServerOptionArgs) ToGetBareMetalServerOptionOutputWithContext(ctx context.Context) GetBareMetalServerOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalServerOptionOutput)
}

// GetBareMetalServerOptionArrayInput is an input type that accepts GetBareMetalServerOptionArray and GetBareMetalServerOptionArrayOutput values.
// You can construct a concrete instance of `GetBareMetalServerOptionArrayInput` via:
//
//	GetBareMetalServerOptionArray{ GetBareMetalServerOptionArgs{...} }
type GetBareMetalServerOptionArrayInput interface {
	pulumi.Input

	ToGetBareMetalServerOptionArrayOutput() GetBareMetalServerOptionArrayOutput
	ToGetBareMetalServerOptionArrayOutputWithContext(context.Context) GetBareMetalServerOptionArrayOutput
}

type GetBareMetalServerOptionArray []GetBareMetalServerOptionInput

func (GetBareMetalServerOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalServerOption)(nil)).Elem()
}

func (i GetBareMetalServerOptionArray) ToGetBareMetalServerOptionArrayOutput() GetBareMetalServerOptionArrayOutput {
	return i.ToGetBareMetalServerOptionArrayOutputWithContext(context.Background())
}

func (i GetBareMetalServerOptionArray) ToGetBareMetalServerOptionArrayOutputWithContext(ctx context.Context) GetBareMetalServerOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalServerOptionArrayOutput)
}

type GetBareMetalServerOptionOutput struct{ *pulumi.OutputState }

func (GetBareMetalServerOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalServerOption)(nil)).Elem()
}

func (o GetBareMetalServerOptionOutput) ToGetBareMetalServerOptionOutput() GetBareMetalServerOptionOutput {
	return o
}

func (o GetBareMetalServerOptionOutput) ToGetBareMetalServerOptionOutputWithContext(ctx context.Context) GetBareMetalServerOptionOutput {
	return o
}

// Auto expire the option after this date
func (o GetBareMetalServerOptionOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerOption) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// The ID of the server.
func (o GetBareMetalServerOptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerOption) string { return v.Id }).(pulumi.StringOutput)
}

// The server name. Only one of `name` and `serverId` should be specified.
func (o GetBareMetalServerOptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerOption) string { return v.Name }).(pulumi.StringOutput)
}

type GetBareMetalServerOptionArrayOutput struct{ *pulumi.OutputState }

func (GetBareMetalServerOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalServerOption)(nil)).Elem()
}

func (o GetBareMetalServerOptionArrayOutput) ToGetBareMetalServerOptionArrayOutput() GetBareMetalServerOptionArrayOutput {
	return o
}

func (o GetBareMetalServerOptionArrayOutput) ToGetBareMetalServerOptionArrayOutputWithContext(ctx context.Context) GetBareMetalServerOptionArrayOutput {
	return o
}

func (o GetBareMetalServerOptionArrayOutput) Index(i pulumi.IntInput) GetBareMetalServerOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBareMetalServerOption {
		return vs[0].([]GetBareMetalServerOption)[vs[1].(int)]
	}).(GetBareMetalServerOptionOutput)
}

type GetBareMetalServerPrivateNetwork struct {
	// The date and time of the creation of the private network
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the server.
	Id string `pulumi:"id"`
	// The private network status
	Status string `pulumi:"status"`
	// The date and time of the last update of the private network
	UpdatedAt string `pulumi:"updatedAt"`
	// The VLAN ID associated to the private network
	Vlan int `pulumi:"vlan"`
}

// GetBareMetalServerPrivateNetworkInput is an input type that accepts GetBareMetalServerPrivateNetworkArgs and GetBareMetalServerPrivateNetworkOutput values.
// You can construct a concrete instance of `GetBareMetalServerPrivateNetworkInput` via:
//
//	GetBareMetalServerPrivateNetworkArgs{...}
type GetBareMetalServerPrivateNetworkInput interface {
	pulumi.Input

	ToGetBareMetalServerPrivateNetworkOutput() GetBareMetalServerPrivateNetworkOutput
	ToGetBareMetalServerPrivateNetworkOutputWithContext(context.Context) GetBareMetalServerPrivateNetworkOutput
}

type GetBareMetalServerPrivateNetworkArgs struct {
	// The date and time of the creation of the private network
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// The private network status
	Status pulumi.StringInput `pulumi:"status"`
	// The date and time of the last update of the private network
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The VLAN ID associated to the private network
	Vlan pulumi.IntInput `pulumi:"vlan"`
}

func (GetBareMetalServerPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalServerPrivateNetwork)(nil)).Elem()
}

func (i GetBareMetalServerPrivateNetworkArgs) ToGetBareMetalServerPrivateNetworkOutput() GetBareMetalServerPrivateNetworkOutput {
	return i.ToGetBareMetalServerPrivateNetworkOutputWithContext(context.Background())
}

func (i GetBareMetalServerPrivateNetworkArgs) ToGetBareMetalServerPrivateNetworkOutputWithContext(ctx context.Context) GetBareMetalServerPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalServerPrivateNetworkOutput)
}

// GetBareMetalServerPrivateNetworkArrayInput is an input type that accepts GetBareMetalServerPrivateNetworkArray and GetBareMetalServerPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `GetBareMetalServerPrivateNetworkArrayInput` via:
//
//	GetBareMetalServerPrivateNetworkArray{ GetBareMetalServerPrivateNetworkArgs{...} }
type GetBareMetalServerPrivateNetworkArrayInput interface {
	pulumi.Input

	ToGetBareMetalServerPrivateNetworkArrayOutput() GetBareMetalServerPrivateNetworkArrayOutput
	ToGetBareMetalServerPrivateNetworkArrayOutputWithContext(context.Context) GetBareMetalServerPrivateNetworkArrayOutput
}

type GetBareMetalServerPrivateNetworkArray []GetBareMetalServerPrivateNetworkInput

func (GetBareMetalServerPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalServerPrivateNetwork)(nil)).Elem()
}

func (i GetBareMetalServerPrivateNetworkArray) ToGetBareMetalServerPrivateNetworkArrayOutput() GetBareMetalServerPrivateNetworkArrayOutput {
	return i.ToGetBareMetalServerPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i GetBareMetalServerPrivateNetworkArray) ToGetBareMetalServerPrivateNetworkArrayOutputWithContext(ctx context.Context) GetBareMetalServerPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBareMetalServerPrivateNetworkArrayOutput)
}

type GetBareMetalServerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (GetBareMetalServerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBareMetalServerPrivateNetwork)(nil)).Elem()
}

func (o GetBareMetalServerPrivateNetworkOutput) ToGetBareMetalServerPrivateNetworkOutput() GetBareMetalServerPrivateNetworkOutput {
	return o
}

func (o GetBareMetalServerPrivateNetworkOutput) ToGetBareMetalServerPrivateNetworkOutputWithContext(ctx context.Context) GetBareMetalServerPrivateNetworkOutput {
	return o
}

// The date and time of the creation of the private network
func (o GetBareMetalServerPrivateNetworkOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerPrivateNetwork) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the server.
func (o GetBareMetalServerPrivateNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerPrivateNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// The private network status
func (o GetBareMetalServerPrivateNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerPrivateNetwork) string { return v.Status }).(pulumi.StringOutput)
}

// The date and time of the last update of the private network
func (o GetBareMetalServerPrivateNetworkOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBareMetalServerPrivateNetwork) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The VLAN ID associated to the private network
func (o GetBareMetalServerPrivateNetworkOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetBareMetalServerPrivateNetwork) int { return v.Vlan }).(pulumi.IntOutput)
}

type GetBareMetalServerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetBareMetalServerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBareMetalServerPrivateNetwork)(nil)).Elem()
}

func (o GetBareMetalServerPrivateNetworkArrayOutput) ToGetBareMetalServerPrivateNetworkArrayOutput() GetBareMetalServerPrivateNetworkArrayOutput {
	return o
}

func (o GetBareMetalServerPrivateNetworkArrayOutput) ToGetBareMetalServerPrivateNetworkArrayOutputWithContext(ctx context.Context) GetBareMetalServerPrivateNetworkArrayOutput {
	return o
}

func (o GetBareMetalServerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) GetBareMetalServerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBareMetalServerPrivateNetwork {
		return vs[0].([]GetBareMetalServerPrivateNetwork)[vs[1].(int)]
	}).(GetBareMetalServerPrivateNetworkOutput)
}

type GetFlexibleIPsIp struct {
	// The date on which the flexible IP was created (RFC 3339 format).
	CreatedAt string `pulumi:"createdAt"`
	// The description of the flexible IP.
	Description string `pulumi:"description"`
	// The MAC address ID.
	Id        string `pulumi:"id"`
	IpAddress string `pulumi:"ipAddress"`
	// The MAC address of the Virtual MAC.
	MacAddresses []GetFlexibleIPsIpMacAddress `pulumi:"macAddresses"`
	// (Defaults to provider `organizationId`) The ID of the organization the IP is in.
	OrganizationId string `pulumi:"organizationId"`
	// (Defaults to provider `projectId`) The ID of the project the IP is in.
	ProjectId string `pulumi:"projectId"`
	// The reverse domain associated with this IP.
	Reverse string `pulumi:"reverse"`
	// The status of virtual MAC.
	Status string `pulumi:"status"`
	// List of tags used as filter. IPs with these exact tags are listed.
	Tags []string `pulumi:"tags"`
	// The date on which the flexible IP was last updated (RFC 3339 format).
	UpdatedAt string `pulumi:"updatedAt"`
	// `zone`) The zone in which IPs exist.
	Zone string `pulumi:"zone"`
}

// GetFlexibleIPsIpInput is an input type that accepts GetFlexibleIPsIpArgs and GetFlexibleIPsIpOutput values.
// You can construct a concrete instance of `GetFlexibleIPsIpInput` via:
//
//	GetFlexibleIPsIpArgs{...}
type GetFlexibleIPsIpInput interface {
	pulumi.Input

	ToGetFlexibleIPsIpOutput() GetFlexibleIPsIpOutput
	ToGetFlexibleIPsIpOutputWithContext(context.Context) GetFlexibleIPsIpOutput
}

type GetFlexibleIPsIpArgs struct {
	// The date on which the flexible IP was created (RFC 3339 format).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the flexible IP.
	Description pulumi.StringInput `pulumi:"description"`
	// The MAC address ID.
	Id        pulumi.StringInput `pulumi:"id"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The MAC address of the Virtual MAC.
	MacAddresses GetFlexibleIPsIpMacAddressArrayInput `pulumi:"macAddresses"`
	// (Defaults to provider `organizationId`) The ID of the organization the IP is in.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// (Defaults to provider `projectId`) The ID of the project the IP is in.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The reverse domain associated with this IP.
	Reverse pulumi.StringInput `pulumi:"reverse"`
	// The status of virtual MAC.
	Status pulumi.StringInput `pulumi:"status"`
	// List of tags used as filter. IPs with these exact tags are listed.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The date on which the flexible IP was last updated (RFC 3339 format).
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// `zone`) The zone in which IPs exist.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetFlexibleIPsIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleIPsIp)(nil)).Elem()
}

func (i GetFlexibleIPsIpArgs) ToGetFlexibleIPsIpOutput() GetFlexibleIPsIpOutput {
	return i.ToGetFlexibleIPsIpOutputWithContext(context.Background())
}

func (i GetFlexibleIPsIpArgs) ToGetFlexibleIPsIpOutputWithContext(ctx context.Context) GetFlexibleIPsIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleIPsIpOutput)
}

// GetFlexibleIPsIpArrayInput is an input type that accepts GetFlexibleIPsIpArray and GetFlexibleIPsIpArrayOutput values.
// You can construct a concrete instance of `GetFlexibleIPsIpArrayInput` via:
//
//	GetFlexibleIPsIpArray{ GetFlexibleIPsIpArgs{...} }
type GetFlexibleIPsIpArrayInput interface {
	pulumi.Input

	ToGetFlexibleIPsIpArrayOutput() GetFlexibleIPsIpArrayOutput
	ToGetFlexibleIPsIpArrayOutputWithContext(context.Context) GetFlexibleIPsIpArrayOutput
}

type GetFlexibleIPsIpArray []GetFlexibleIPsIpInput

func (GetFlexibleIPsIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleIPsIp)(nil)).Elem()
}

func (i GetFlexibleIPsIpArray) ToGetFlexibleIPsIpArrayOutput() GetFlexibleIPsIpArrayOutput {
	return i.ToGetFlexibleIPsIpArrayOutputWithContext(context.Background())
}

func (i GetFlexibleIPsIpArray) ToGetFlexibleIPsIpArrayOutputWithContext(ctx context.Context) GetFlexibleIPsIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleIPsIpArrayOutput)
}

type GetFlexibleIPsIpOutput struct{ *pulumi.OutputState }

func (GetFlexibleIPsIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleIPsIp)(nil)).Elem()
}

func (o GetFlexibleIPsIpOutput) ToGetFlexibleIPsIpOutput() GetFlexibleIPsIpOutput {
	return o
}

func (o GetFlexibleIPsIpOutput) ToGetFlexibleIPsIpOutputWithContext(ctx context.Context) GetFlexibleIPsIpOutput {
	return o
}

// The date on which the flexible IP was created (RFC 3339 format).
func (o GetFlexibleIPsIpOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the flexible IP.
func (o GetFlexibleIPsIpOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) string { return v.Description }).(pulumi.StringOutput)
}

// The MAC address ID.
func (o GetFlexibleIPsIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFlexibleIPsIpOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The MAC address of the Virtual MAC.
func (o GetFlexibleIPsIpOutput) MacAddresses() GetFlexibleIPsIpMacAddressArrayOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) []GetFlexibleIPsIpMacAddress { return v.MacAddresses }).(GetFlexibleIPsIpMacAddressArrayOutput)
}

// (Defaults to provider `organizationId`) The ID of the organization the IP is in.
func (o GetFlexibleIPsIpOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// (Defaults to provider `projectId`) The ID of the project the IP is in.
func (o GetFlexibleIPsIpOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The reverse domain associated with this IP.
func (o GetFlexibleIPsIpOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) string { return v.Reverse }).(pulumi.StringOutput)
}

// The status of virtual MAC.
func (o GetFlexibleIPsIpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) string { return v.Status }).(pulumi.StringOutput)
}

// List of tags used as filter. IPs with these exact tags are listed.
func (o GetFlexibleIPsIpOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The date on which the flexible IP was last updated (RFC 3339 format).
func (o GetFlexibleIPsIpOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// `zone`) The zone in which IPs exist.
func (o GetFlexibleIPsIpOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIp) string { return v.Zone }).(pulumi.StringOutput)
}

type GetFlexibleIPsIpArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleIPsIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleIPsIp)(nil)).Elem()
}

func (o GetFlexibleIPsIpArrayOutput) ToGetFlexibleIPsIpArrayOutput() GetFlexibleIPsIpArrayOutput {
	return o
}

func (o GetFlexibleIPsIpArrayOutput) ToGetFlexibleIPsIpArrayOutputWithContext(ctx context.Context) GetFlexibleIPsIpArrayOutput {
	return o
}

func (o GetFlexibleIPsIpArrayOutput) Index(i pulumi.IntInput) GetFlexibleIPsIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleIPsIp {
		return vs[0].([]GetFlexibleIPsIp)[vs[1].(int)]
	}).(GetFlexibleIPsIpOutput)
}

type GetFlexibleIPsIpMacAddress struct {
	// The date on which the flexible IP was created (RFC 3339 format).
	CreatedAt string `pulumi:"createdAt"`
	// The MAC address ID.
	Id string `pulumi:"id"`
	// The MAC address of the Virtual MAC.
	MacAddress string `pulumi:"macAddress"`
	// The type of virtual MAC.
	MacType string `pulumi:"macType"`
	// The status of virtual MAC.
	Status string `pulumi:"status"`
	// The date on which the flexible IP was last updated (RFC 3339 format).
	UpdatedAt string `pulumi:"updatedAt"`
	// `zone`) The zone in which IPs exist.
	Zone string `pulumi:"zone"`
}

// GetFlexibleIPsIpMacAddressInput is an input type that accepts GetFlexibleIPsIpMacAddressArgs and GetFlexibleIPsIpMacAddressOutput values.
// You can construct a concrete instance of `GetFlexibleIPsIpMacAddressInput` via:
//
//	GetFlexibleIPsIpMacAddressArgs{...}
type GetFlexibleIPsIpMacAddressInput interface {
	pulumi.Input

	ToGetFlexibleIPsIpMacAddressOutput() GetFlexibleIPsIpMacAddressOutput
	ToGetFlexibleIPsIpMacAddressOutputWithContext(context.Context) GetFlexibleIPsIpMacAddressOutput
}

type GetFlexibleIPsIpMacAddressArgs struct {
	// The date on which the flexible IP was created (RFC 3339 format).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The MAC address ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The MAC address of the Virtual MAC.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The type of virtual MAC.
	MacType pulumi.StringInput `pulumi:"macType"`
	// The status of virtual MAC.
	Status pulumi.StringInput `pulumi:"status"`
	// The date on which the flexible IP was last updated (RFC 3339 format).
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// `zone`) The zone in which IPs exist.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetFlexibleIPsIpMacAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleIPsIpMacAddress)(nil)).Elem()
}

func (i GetFlexibleIPsIpMacAddressArgs) ToGetFlexibleIPsIpMacAddressOutput() GetFlexibleIPsIpMacAddressOutput {
	return i.ToGetFlexibleIPsIpMacAddressOutputWithContext(context.Background())
}

func (i GetFlexibleIPsIpMacAddressArgs) ToGetFlexibleIPsIpMacAddressOutputWithContext(ctx context.Context) GetFlexibleIPsIpMacAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleIPsIpMacAddressOutput)
}

// GetFlexibleIPsIpMacAddressArrayInput is an input type that accepts GetFlexibleIPsIpMacAddressArray and GetFlexibleIPsIpMacAddressArrayOutput values.
// You can construct a concrete instance of `GetFlexibleIPsIpMacAddressArrayInput` via:
//
//	GetFlexibleIPsIpMacAddressArray{ GetFlexibleIPsIpMacAddressArgs{...} }
type GetFlexibleIPsIpMacAddressArrayInput interface {
	pulumi.Input

	ToGetFlexibleIPsIpMacAddressArrayOutput() GetFlexibleIPsIpMacAddressArrayOutput
	ToGetFlexibleIPsIpMacAddressArrayOutputWithContext(context.Context) GetFlexibleIPsIpMacAddressArrayOutput
}

type GetFlexibleIPsIpMacAddressArray []GetFlexibleIPsIpMacAddressInput

func (GetFlexibleIPsIpMacAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleIPsIpMacAddress)(nil)).Elem()
}

func (i GetFlexibleIPsIpMacAddressArray) ToGetFlexibleIPsIpMacAddressArrayOutput() GetFlexibleIPsIpMacAddressArrayOutput {
	return i.ToGetFlexibleIPsIpMacAddressArrayOutputWithContext(context.Background())
}

func (i GetFlexibleIPsIpMacAddressArray) ToGetFlexibleIPsIpMacAddressArrayOutputWithContext(ctx context.Context) GetFlexibleIPsIpMacAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleIPsIpMacAddressArrayOutput)
}

type GetFlexibleIPsIpMacAddressOutput struct{ *pulumi.OutputState }

func (GetFlexibleIPsIpMacAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleIPsIpMacAddress)(nil)).Elem()
}

func (o GetFlexibleIPsIpMacAddressOutput) ToGetFlexibleIPsIpMacAddressOutput() GetFlexibleIPsIpMacAddressOutput {
	return o
}

func (o GetFlexibleIPsIpMacAddressOutput) ToGetFlexibleIPsIpMacAddressOutputWithContext(ctx context.Context) GetFlexibleIPsIpMacAddressOutput {
	return o
}

// The date on which the flexible IP was created (RFC 3339 format).
func (o GetFlexibleIPsIpMacAddressOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIpMacAddress) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The MAC address ID.
func (o GetFlexibleIPsIpMacAddressOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIpMacAddress) string { return v.Id }).(pulumi.StringOutput)
}

// The MAC address of the Virtual MAC.
func (o GetFlexibleIPsIpMacAddressOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIpMacAddress) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The type of virtual MAC.
func (o GetFlexibleIPsIpMacAddressOutput) MacType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIpMacAddress) string { return v.MacType }).(pulumi.StringOutput)
}

// The status of virtual MAC.
func (o GetFlexibleIPsIpMacAddressOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIpMacAddress) string { return v.Status }).(pulumi.StringOutput)
}

// The date on which the flexible IP was last updated (RFC 3339 format).
func (o GetFlexibleIPsIpMacAddressOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIpMacAddress) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// `zone`) The zone in which IPs exist.
func (o GetFlexibleIPsIpMacAddressOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIPsIpMacAddress) string { return v.Zone }).(pulumi.StringOutput)
}

type GetFlexibleIPsIpMacAddressArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleIPsIpMacAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleIPsIpMacAddress)(nil)).Elem()
}

func (o GetFlexibleIPsIpMacAddressArrayOutput) ToGetFlexibleIPsIpMacAddressArrayOutput() GetFlexibleIPsIpMacAddressArrayOutput {
	return o
}

func (o GetFlexibleIPsIpMacAddressArrayOutput) ToGetFlexibleIPsIpMacAddressArrayOutputWithContext(ctx context.Context) GetFlexibleIPsIpMacAddressArrayOutput {
	return o
}

func (o GetFlexibleIPsIpMacAddressArrayOutput) Index(i pulumi.IntInput) GetFlexibleIPsIpMacAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleIPsIpMacAddress {
		return vs[0].([]GetFlexibleIPsIpMacAddress)[vs[1].(int)]
	}).(GetFlexibleIPsIpMacAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalServerIpInput)(nil)).Elem(), BareMetalServerIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalServerIpArrayInput)(nil)).Elem(), BareMetalServerIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalServerIpv4Input)(nil)).Elem(), BareMetalServerIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalServerIpv4ArrayInput)(nil)).Elem(), BareMetalServerIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalServerIpv6Input)(nil)).Elem(), BareMetalServerIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalServerIpv6ArrayInput)(nil)).Elem(), BareMetalServerIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalServerOptionInput)(nil)).Elem(), BareMetalServerOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalServerOptionArrayInput)(nil)).Elem(), BareMetalServerOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalServerPrivateNetworkInput)(nil)).Elem(), BareMetalServerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalServerPrivateNetworkArrayInput)(nil)).Elem(), BareMetalServerPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalOfferCpusInput)(nil)).Elem(), GetBareMetalOfferCpusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalOfferCpusArrayInput)(nil)).Elem(), GetBareMetalOfferCpusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalOfferDiskInput)(nil)).Elem(), GetBareMetalOfferDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalOfferDiskArrayInput)(nil)).Elem(), GetBareMetalOfferDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalOfferMemoryInput)(nil)).Elem(), GetBareMetalOfferMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalOfferMemoryArrayInput)(nil)).Elem(), GetBareMetalOfferMemoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalServerIpInput)(nil)).Elem(), GetBareMetalServerIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalServerIpArrayInput)(nil)).Elem(), GetBareMetalServerIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalServerIpv4Input)(nil)).Elem(), GetBareMetalServerIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalServerIpv4ArrayInput)(nil)).Elem(), GetBareMetalServerIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalServerIpv6Input)(nil)).Elem(), GetBareMetalServerIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalServerIpv6ArrayInput)(nil)).Elem(), GetBareMetalServerIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalServerOptionInput)(nil)).Elem(), GetBareMetalServerOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalServerOptionArrayInput)(nil)).Elem(), GetBareMetalServerOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalServerPrivateNetworkInput)(nil)).Elem(), GetBareMetalServerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBareMetalServerPrivateNetworkArrayInput)(nil)).Elem(), GetBareMetalServerPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleIPsIpInput)(nil)).Elem(), GetFlexibleIPsIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleIPsIpArrayInput)(nil)).Elem(), GetFlexibleIPsIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleIPsIpMacAddressInput)(nil)).Elem(), GetFlexibleIPsIpMacAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleIPsIpMacAddressArrayInput)(nil)).Elem(), GetFlexibleIPsIpMacAddressArray{})
	pulumi.RegisterOutputType(BareMetalServerIpOutput{})
	pulumi.RegisterOutputType(BareMetalServerIpArrayOutput{})
	pulumi.RegisterOutputType(BareMetalServerIpv4Output{})
	pulumi.RegisterOutputType(BareMetalServerIpv4ArrayOutput{})
	pulumi.RegisterOutputType(BareMetalServerIpv6Output{})
	pulumi.RegisterOutputType(BareMetalServerIpv6ArrayOutput{})
	pulumi.RegisterOutputType(BareMetalServerOptionOutput{})
	pulumi.RegisterOutputType(BareMetalServerOptionArrayOutput{})
	pulumi.RegisterOutputType(BareMetalServerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(BareMetalServerPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetBareMetalOfferCpusOutput{})
	pulumi.RegisterOutputType(GetBareMetalOfferCpusArrayOutput{})
	pulumi.RegisterOutputType(GetBareMetalOfferDiskOutput{})
	pulumi.RegisterOutputType(GetBareMetalOfferDiskArrayOutput{})
	pulumi.RegisterOutputType(GetBareMetalOfferMemoryOutput{})
	pulumi.RegisterOutputType(GetBareMetalOfferMemoryArrayOutput{})
	pulumi.RegisterOutputType(GetBareMetalServerIpOutput{})
	pulumi.RegisterOutputType(GetBareMetalServerIpArrayOutput{})
	pulumi.RegisterOutputType(GetBareMetalServerIpv4Output{})
	pulumi.RegisterOutputType(GetBareMetalServerIpv4ArrayOutput{})
	pulumi.RegisterOutputType(GetBareMetalServerIpv6Output{})
	pulumi.RegisterOutputType(GetBareMetalServerIpv6ArrayOutput{})
	pulumi.RegisterOutputType(GetBareMetalServerOptionOutput{})
	pulumi.RegisterOutputType(GetBareMetalServerOptionArrayOutput{})
	pulumi.RegisterOutputType(GetBareMetalServerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(GetBareMetalServerPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetFlexibleIPsIpOutput{})
	pulumi.RegisterOutputType(GetFlexibleIPsIpArrayOutput{})
	pulumi.RegisterOutputType(GetFlexibleIPsIpMacAddressOutput{})
	pulumi.RegisterOutputType(GetFlexibleIPsIpMacAddressArrayOutput{})
}
