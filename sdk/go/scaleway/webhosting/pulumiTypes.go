// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webhosting

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type WebHostingCpanelUrl struct {
	// The URL of the Dashboard.
	Dashboard *string `pulumi:"dashboard"`
	// The URL of the Webmail interface.
	Webmail *string `pulumi:"webmail"`
}

// WebHostingCpanelUrlInput is an input type that accepts WebHostingCpanelUrlArgs and WebHostingCpanelUrlOutput values.
// You can construct a concrete instance of `WebHostingCpanelUrlInput` via:
//
//	WebHostingCpanelUrlArgs{...}
type WebHostingCpanelUrlInput interface {
	pulumi.Input

	ToWebHostingCpanelUrlOutput() WebHostingCpanelUrlOutput
	ToWebHostingCpanelUrlOutputWithContext(context.Context) WebHostingCpanelUrlOutput
}

type WebHostingCpanelUrlArgs struct {
	// The URL of the Dashboard.
	Dashboard pulumi.StringPtrInput `pulumi:"dashboard"`
	// The URL of the Webmail interface.
	Webmail pulumi.StringPtrInput `pulumi:"webmail"`
}

func (WebHostingCpanelUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebHostingCpanelUrl)(nil)).Elem()
}

func (i WebHostingCpanelUrlArgs) ToWebHostingCpanelUrlOutput() WebHostingCpanelUrlOutput {
	return i.ToWebHostingCpanelUrlOutputWithContext(context.Background())
}

func (i WebHostingCpanelUrlArgs) ToWebHostingCpanelUrlOutputWithContext(ctx context.Context) WebHostingCpanelUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebHostingCpanelUrlOutput)
}

// WebHostingCpanelUrlArrayInput is an input type that accepts WebHostingCpanelUrlArray and WebHostingCpanelUrlArrayOutput values.
// You can construct a concrete instance of `WebHostingCpanelUrlArrayInput` via:
//
//	WebHostingCpanelUrlArray{ WebHostingCpanelUrlArgs{...} }
type WebHostingCpanelUrlArrayInput interface {
	pulumi.Input

	ToWebHostingCpanelUrlArrayOutput() WebHostingCpanelUrlArrayOutput
	ToWebHostingCpanelUrlArrayOutputWithContext(context.Context) WebHostingCpanelUrlArrayOutput
}

type WebHostingCpanelUrlArray []WebHostingCpanelUrlInput

func (WebHostingCpanelUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebHostingCpanelUrl)(nil)).Elem()
}

func (i WebHostingCpanelUrlArray) ToWebHostingCpanelUrlArrayOutput() WebHostingCpanelUrlArrayOutput {
	return i.ToWebHostingCpanelUrlArrayOutputWithContext(context.Background())
}

func (i WebHostingCpanelUrlArray) ToWebHostingCpanelUrlArrayOutputWithContext(ctx context.Context) WebHostingCpanelUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebHostingCpanelUrlArrayOutput)
}

type WebHostingCpanelUrlOutput struct{ *pulumi.OutputState }

func (WebHostingCpanelUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebHostingCpanelUrl)(nil)).Elem()
}

func (o WebHostingCpanelUrlOutput) ToWebHostingCpanelUrlOutput() WebHostingCpanelUrlOutput {
	return o
}

func (o WebHostingCpanelUrlOutput) ToWebHostingCpanelUrlOutputWithContext(ctx context.Context) WebHostingCpanelUrlOutput {
	return o
}

// The URL of the Dashboard.
func (o WebHostingCpanelUrlOutput) Dashboard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebHostingCpanelUrl) *string { return v.Dashboard }).(pulumi.StringPtrOutput)
}

// The URL of the Webmail interface.
func (o WebHostingCpanelUrlOutput) Webmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebHostingCpanelUrl) *string { return v.Webmail }).(pulumi.StringPtrOutput)
}

type WebHostingCpanelUrlArrayOutput struct{ *pulumi.OutputState }

func (WebHostingCpanelUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebHostingCpanelUrl)(nil)).Elem()
}

func (o WebHostingCpanelUrlArrayOutput) ToWebHostingCpanelUrlArrayOutput() WebHostingCpanelUrlArrayOutput {
	return o
}

func (o WebHostingCpanelUrlArrayOutput) ToWebHostingCpanelUrlArrayOutputWithContext(ctx context.Context) WebHostingCpanelUrlArrayOutput {
	return o
}

func (o WebHostingCpanelUrlArrayOutput) Index(i pulumi.IntInput) WebHostingCpanelUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebHostingCpanelUrl {
		return vs[0].([]WebHostingCpanelUrl)[vs[1].(int)]
	}).(WebHostingCpanelUrlOutput)
}

type WebHostingOption struct {
	// The option ID.
	Id *string `pulumi:"id"`
	// The option name.
	Name *string `pulumi:"name"`
}

// WebHostingOptionInput is an input type that accepts WebHostingOptionArgs and WebHostingOptionOutput values.
// You can construct a concrete instance of `WebHostingOptionInput` via:
//
//	WebHostingOptionArgs{...}
type WebHostingOptionInput interface {
	pulumi.Input

	ToWebHostingOptionOutput() WebHostingOptionOutput
	ToWebHostingOptionOutputWithContext(context.Context) WebHostingOptionOutput
}

type WebHostingOptionArgs struct {
	// The option ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The option name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebHostingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebHostingOption)(nil)).Elem()
}

func (i WebHostingOptionArgs) ToWebHostingOptionOutput() WebHostingOptionOutput {
	return i.ToWebHostingOptionOutputWithContext(context.Background())
}

func (i WebHostingOptionArgs) ToWebHostingOptionOutputWithContext(ctx context.Context) WebHostingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebHostingOptionOutput)
}

// WebHostingOptionArrayInput is an input type that accepts WebHostingOptionArray and WebHostingOptionArrayOutput values.
// You can construct a concrete instance of `WebHostingOptionArrayInput` via:
//
//	WebHostingOptionArray{ WebHostingOptionArgs{...} }
type WebHostingOptionArrayInput interface {
	pulumi.Input

	ToWebHostingOptionArrayOutput() WebHostingOptionArrayOutput
	ToWebHostingOptionArrayOutputWithContext(context.Context) WebHostingOptionArrayOutput
}

type WebHostingOptionArray []WebHostingOptionInput

func (WebHostingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebHostingOption)(nil)).Elem()
}

func (i WebHostingOptionArray) ToWebHostingOptionArrayOutput() WebHostingOptionArrayOutput {
	return i.ToWebHostingOptionArrayOutputWithContext(context.Background())
}

func (i WebHostingOptionArray) ToWebHostingOptionArrayOutputWithContext(ctx context.Context) WebHostingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebHostingOptionArrayOutput)
}

type WebHostingOptionOutput struct{ *pulumi.OutputState }

func (WebHostingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebHostingOption)(nil)).Elem()
}

func (o WebHostingOptionOutput) ToWebHostingOptionOutput() WebHostingOptionOutput {
	return o
}

func (o WebHostingOptionOutput) ToWebHostingOptionOutputWithContext(ctx context.Context) WebHostingOptionOutput {
	return o
}

// The option ID.
func (o WebHostingOptionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebHostingOption) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The option name.
func (o WebHostingOptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebHostingOption) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebHostingOptionArrayOutput struct{ *pulumi.OutputState }

func (WebHostingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebHostingOption)(nil)).Elem()
}

func (o WebHostingOptionArrayOutput) ToWebHostingOptionArrayOutput() WebHostingOptionArrayOutput {
	return o
}

func (o WebHostingOptionArrayOutput) ToWebHostingOptionArrayOutputWithContext(ctx context.Context) WebHostingOptionArrayOutput {
	return o
}

func (o WebHostingOptionArrayOutput) Index(i pulumi.IntInput) WebHostingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebHostingOption {
		return vs[0].([]WebHostingOption)[vs[1].(int)]
	}).(WebHostingOptionOutput)
}

type GetOfferProduct struct {
	// The quota of databases.
	DatabasesQuota int `pulumi:"databasesQuota"`
	// The quota of email accounts.
	EmailAccountsQuota int `pulumi:"emailAccountsQuota"`
	// The quota of email storage.
	EmailStorageQuota int `pulumi:"emailStorageQuota"`
	// The quota of hosting storage.
	HostingStorageQuota int `pulumi:"hostingStorageQuota"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name string `pulumi:"name"`
	// The product option.
	Option bool `pulumi:"option"`
	// The capacity of the memory in GB.
	Ram int `pulumi:"ram"`
	// If support is included.
	SupportIncluded bool `pulumi:"supportIncluded"`
	// The number of cores.
	VCpu int `pulumi:"vCpu"`
}

// GetOfferProductInput is an input type that accepts GetOfferProductArgs and GetOfferProductOutput values.
// You can construct a concrete instance of `GetOfferProductInput` via:
//
//	GetOfferProductArgs{...}
type GetOfferProductInput interface {
	pulumi.Input

	ToGetOfferProductOutput() GetOfferProductOutput
	ToGetOfferProductOutputWithContext(context.Context) GetOfferProductOutput
}

type GetOfferProductArgs struct {
	// The quota of databases.
	DatabasesQuota pulumi.IntInput `pulumi:"databasesQuota"`
	// The quota of email accounts.
	EmailAccountsQuota pulumi.IntInput `pulumi:"emailAccountsQuota"`
	// The quota of email storage.
	EmailStorageQuota pulumi.IntInput `pulumi:"emailStorageQuota"`
	// The quota of hosting storage.
	HostingStorageQuota pulumi.IntInput `pulumi:"hostingStorageQuota"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// The product option.
	Option pulumi.BoolInput `pulumi:"option"`
	// The capacity of the memory in GB.
	Ram pulumi.IntInput `pulumi:"ram"`
	// If support is included.
	SupportIncluded pulumi.BoolInput `pulumi:"supportIncluded"`
	// The number of cores.
	VCpu pulumi.IntInput `pulumi:"vCpu"`
}

func (GetOfferProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOfferProduct)(nil)).Elem()
}

func (i GetOfferProductArgs) ToGetOfferProductOutput() GetOfferProductOutput {
	return i.ToGetOfferProductOutputWithContext(context.Background())
}

func (i GetOfferProductArgs) ToGetOfferProductOutputWithContext(ctx context.Context) GetOfferProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOfferProductOutput)
}

// GetOfferProductArrayInput is an input type that accepts GetOfferProductArray and GetOfferProductArrayOutput values.
// You can construct a concrete instance of `GetOfferProductArrayInput` via:
//
//	GetOfferProductArray{ GetOfferProductArgs{...} }
type GetOfferProductArrayInput interface {
	pulumi.Input

	ToGetOfferProductArrayOutput() GetOfferProductArrayOutput
	ToGetOfferProductArrayOutputWithContext(context.Context) GetOfferProductArrayOutput
}

type GetOfferProductArray []GetOfferProductInput

func (GetOfferProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOfferProduct)(nil)).Elem()
}

func (i GetOfferProductArray) ToGetOfferProductArrayOutput() GetOfferProductArrayOutput {
	return i.ToGetOfferProductArrayOutputWithContext(context.Background())
}

func (i GetOfferProductArray) ToGetOfferProductArrayOutputWithContext(ctx context.Context) GetOfferProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOfferProductArrayOutput)
}

type GetOfferProductOutput struct{ *pulumi.OutputState }

func (GetOfferProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOfferProduct)(nil)).Elem()
}

func (o GetOfferProductOutput) ToGetOfferProductOutput() GetOfferProductOutput {
	return o
}

func (o GetOfferProductOutput) ToGetOfferProductOutputWithContext(ctx context.Context) GetOfferProductOutput {
	return o
}

// The quota of databases.
func (o GetOfferProductOutput) DatabasesQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.DatabasesQuota }).(pulumi.IntOutput)
}

// The quota of email accounts.
func (o GetOfferProductOutput) EmailAccountsQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.EmailAccountsQuota }).(pulumi.IntOutput)
}

// The quota of email storage.
func (o GetOfferProductOutput) EmailStorageQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.EmailStorageQuota }).(pulumi.IntOutput)
}

// The quota of hosting storage.
func (o GetOfferProductOutput) HostingStorageQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.HostingStorageQuota }).(pulumi.IntOutput)
}

// The offer name. Only one of `name` and `offerId` should be specified.
func (o GetOfferProductOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferProduct) string { return v.Name }).(pulumi.StringOutput)
}

// The product option.
func (o GetOfferProductOutput) Option() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOfferProduct) bool { return v.Option }).(pulumi.BoolOutput)
}

// The capacity of the memory in GB.
func (o GetOfferProductOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.Ram }).(pulumi.IntOutput)
}

// If support is included.
func (o GetOfferProductOutput) SupportIncluded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOfferProduct) bool { return v.SupportIncluded }).(pulumi.BoolOutput)
}

// The number of cores.
func (o GetOfferProductOutput) VCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.VCpu }).(pulumi.IntOutput)
}

type GetOfferProductArrayOutput struct{ *pulumi.OutputState }

func (GetOfferProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOfferProduct)(nil)).Elem()
}

func (o GetOfferProductArrayOutput) ToGetOfferProductArrayOutput() GetOfferProductArrayOutput {
	return o
}

func (o GetOfferProductArrayOutput) ToGetOfferProductArrayOutputWithContext(ctx context.Context) GetOfferProductArrayOutput {
	return o
}

func (o GetOfferProductArrayOutput) Index(i pulumi.IntInput) GetOfferProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOfferProduct {
		return vs[0].([]GetOfferProduct)[vs[1].(int)]
	}).(GetOfferProductOutput)
}

type GetWebHostingCpanelUrl struct {
	Dashboard string `pulumi:"dashboard"`
	Webmail   string `pulumi:"webmail"`
}

// GetWebHostingCpanelUrlInput is an input type that accepts GetWebHostingCpanelUrlArgs and GetWebHostingCpanelUrlOutput values.
// You can construct a concrete instance of `GetWebHostingCpanelUrlInput` via:
//
//	GetWebHostingCpanelUrlArgs{...}
type GetWebHostingCpanelUrlInput interface {
	pulumi.Input

	ToGetWebHostingCpanelUrlOutput() GetWebHostingCpanelUrlOutput
	ToGetWebHostingCpanelUrlOutputWithContext(context.Context) GetWebHostingCpanelUrlOutput
}

type GetWebHostingCpanelUrlArgs struct {
	Dashboard pulumi.StringInput `pulumi:"dashboard"`
	Webmail   pulumi.StringInput `pulumi:"webmail"`
}

func (GetWebHostingCpanelUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebHostingCpanelUrl)(nil)).Elem()
}

func (i GetWebHostingCpanelUrlArgs) ToGetWebHostingCpanelUrlOutput() GetWebHostingCpanelUrlOutput {
	return i.ToGetWebHostingCpanelUrlOutputWithContext(context.Background())
}

func (i GetWebHostingCpanelUrlArgs) ToGetWebHostingCpanelUrlOutputWithContext(ctx context.Context) GetWebHostingCpanelUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebHostingCpanelUrlOutput)
}

// GetWebHostingCpanelUrlArrayInput is an input type that accepts GetWebHostingCpanelUrlArray and GetWebHostingCpanelUrlArrayOutput values.
// You can construct a concrete instance of `GetWebHostingCpanelUrlArrayInput` via:
//
//	GetWebHostingCpanelUrlArray{ GetWebHostingCpanelUrlArgs{...} }
type GetWebHostingCpanelUrlArrayInput interface {
	pulumi.Input

	ToGetWebHostingCpanelUrlArrayOutput() GetWebHostingCpanelUrlArrayOutput
	ToGetWebHostingCpanelUrlArrayOutputWithContext(context.Context) GetWebHostingCpanelUrlArrayOutput
}

type GetWebHostingCpanelUrlArray []GetWebHostingCpanelUrlInput

func (GetWebHostingCpanelUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebHostingCpanelUrl)(nil)).Elem()
}

func (i GetWebHostingCpanelUrlArray) ToGetWebHostingCpanelUrlArrayOutput() GetWebHostingCpanelUrlArrayOutput {
	return i.ToGetWebHostingCpanelUrlArrayOutputWithContext(context.Background())
}

func (i GetWebHostingCpanelUrlArray) ToGetWebHostingCpanelUrlArrayOutputWithContext(ctx context.Context) GetWebHostingCpanelUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebHostingCpanelUrlArrayOutput)
}

type GetWebHostingCpanelUrlOutput struct{ *pulumi.OutputState }

func (GetWebHostingCpanelUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebHostingCpanelUrl)(nil)).Elem()
}

func (o GetWebHostingCpanelUrlOutput) ToGetWebHostingCpanelUrlOutput() GetWebHostingCpanelUrlOutput {
	return o
}

func (o GetWebHostingCpanelUrlOutput) ToGetWebHostingCpanelUrlOutputWithContext(ctx context.Context) GetWebHostingCpanelUrlOutput {
	return o
}

func (o GetWebHostingCpanelUrlOutput) Dashboard() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebHostingCpanelUrl) string { return v.Dashboard }).(pulumi.StringOutput)
}

func (o GetWebHostingCpanelUrlOutput) Webmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebHostingCpanelUrl) string { return v.Webmail }).(pulumi.StringOutput)
}

type GetWebHostingCpanelUrlArrayOutput struct{ *pulumi.OutputState }

func (GetWebHostingCpanelUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebHostingCpanelUrl)(nil)).Elem()
}

func (o GetWebHostingCpanelUrlArrayOutput) ToGetWebHostingCpanelUrlArrayOutput() GetWebHostingCpanelUrlArrayOutput {
	return o
}

func (o GetWebHostingCpanelUrlArrayOutput) ToGetWebHostingCpanelUrlArrayOutputWithContext(ctx context.Context) GetWebHostingCpanelUrlArrayOutput {
	return o
}

func (o GetWebHostingCpanelUrlArrayOutput) Index(i pulumi.IntInput) GetWebHostingCpanelUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWebHostingCpanelUrl {
		return vs[0].([]GetWebHostingCpanelUrl)[vs[1].(int)]
	}).(GetWebHostingCpanelUrlOutput)
}

type GetWebHostingOption struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetWebHostingOptionInput is an input type that accepts GetWebHostingOptionArgs and GetWebHostingOptionOutput values.
// You can construct a concrete instance of `GetWebHostingOptionInput` via:
//
//	GetWebHostingOptionArgs{...}
type GetWebHostingOptionInput interface {
	pulumi.Input

	ToGetWebHostingOptionOutput() GetWebHostingOptionOutput
	ToGetWebHostingOptionOutputWithContext(context.Context) GetWebHostingOptionOutput
}

type GetWebHostingOptionArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWebHostingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebHostingOption)(nil)).Elem()
}

func (i GetWebHostingOptionArgs) ToGetWebHostingOptionOutput() GetWebHostingOptionOutput {
	return i.ToGetWebHostingOptionOutputWithContext(context.Background())
}

func (i GetWebHostingOptionArgs) ToGetWebHostingOptionOutputWithContext(ctx context.Context) GetWebHostingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebHostingOptionOutput)
}

// GetWebHostingOptionArrayInput is an input type that accepts GetWebHostingOptionArray and GetWebHostingOptionArrayOutput values.
// You can construct a concrete instance of `GetWebHostingOptionArrayInput` via:
//
//	GetWebHostingOptionArray{ GetWebHostingOptionArgs{...} }
type GetWebHostingOptionArrayInput interface {
	pulumi.Input

	ToGetWebHostingOptionArrayOutput() GetWebHostingOptionArrayOutput
	ToGetWebHostingOptionArrayOutputWithContext(context.Context) GetWebHostingOptionArrayOutput
}

type GetWebHostingOptionArray []GetWebHostingOptionInput

func (GetWebHostingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebHostingOption)(nil)).Elem()
}

func (i GetWebHostingOptionArray) ToGetWebHostingOptionArrayOutput() GetWebHostingOptionArrayOutput {
	return i.ToGetWebHostingOptionArrayOutputWithContext(context.Background())
}

func (i GetWebHostingOptionArray) ToGetWebHostingOptionArrayOutputWithContext(ctx context.Context) GetWebHostingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebHostingOptionArrayOutput)
}

type GetWebHostingOptionOutput struct{ *pulumi.OutputState }

func (GetWebHostingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebHostingOption)(nil)).Elem()
}

func (o GetWebHostingOptionOutput) ToGetWebHostingOptionOutput() GetWebHostingOptionOutput {
	return o
}

func (o GetWebHostingOptionOutput) ToGetWebHostingOptionOutputWithContext(ctx context.Context) GetWebHostingOptionOutput {
	return o
}

func (o GetWebHostingOptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebHostingOption) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetWebHostingOptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebHostingOption) string { return v.Name }).(pulumi.StringOutput)
}

type GetWebHostingOptionArrayOutput struct{ *pulumi.OutputState }

func (GetWebHostingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebHostingOption)(nil)).Elem()
}

func (o GetWebHostingOptionArrayOutput) ToGetWebHostingOptionArrayOutput() GetWebHostingOptionArrayOutput {
	return o
}

func (o GetWebHostingOptionArrayOutput) ToGetWebHostingOptionArrayOutputWithContext(ctx context.Context) GetWebHostingOptionArrayOutput {
	return o
}

func (o GetWebHostingOptionArrayOutput) Index(i pulumi.IntInput) GetWebHostingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWebHostingOption {
		return vs[0].([]GetWebHostingOption)[vs[1].(int)]
	}).(GetWebHostingOptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebHostingCpanelUrlInput)(nil)).Elem(), WebHostingCpanelUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebHostingCpanelUrlArrayInput)(nil)).Elem(), WebHostingCpanelUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebHostingOptionInput)(nil)).Elem(), WebHostingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebHostingOptionArrayInput)(nil)).Elem(), WebHostingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOfferProductInput)(nil)).Elem(), GetOfferProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOfferProductArrayInput)(nil)).Elem(), GetOfferProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebHostingCpanelUrlInput)(nil)).Elem(), GetWebHostingCpanelUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebHostingCpanelUrlArrayInput)(nil)).Elem(), GetWebHostingCpanelUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebHostingOptionInput)(nil)).Elem(), GetWebHostingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebHostingOptionArrayInput)(nil)).Elem(), GetWebHostingOptionArray{})
	pulumi.RegisterOutputType(WebHostingCpanelUrlOutput{})
	pulumi.RegisterOutputType(WebHostingCpanelUrlArrayOutput{})
	pulumi.RegisterOutputType(WebHostingOptionOutput{})
	pulumi.RegisterOutputType(WebHostingOptionArrayOutput{})
	pulumi.RegisterOutputType(GetOfferProductOutput{})
	pulumi.RegisterOutputType(GetOfferProductArrayOutput{})
	pulumi.RegisterOutputType(GetWebHostingCpanelUrlOutput{})
	pulumi.RegisterOutputType(GetWebHostingCpanelUrlArrayOutput{})
	pulumi.RegisterOutputType(GetWebHostingOptionOutput{})
	pulumi.RegisterOutputType(GetWebHostingOptionArrayOutput{})
}
