// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about the Bucket.
// For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/objectstorage"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			main, err := objectstorage.NewBucket(ctx, "main", &objectstorage.BucketArgs{
//				Tags: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_ = objectstorage.LookupBucketOutput(ctx, objectstorage.GetBucketOutputArgs{
//				Name: main.ID(),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
// ### Fetching the bucket from a specific project
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/objectstorage"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := objectstorage.LookupBucket(ctx, &objectstorage.LookupBucketArgs{
//				Name:      pulumi.StringRef("bucket.test.com"),
//				ProjectId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBucket(ctx *pulumi.Context, args *LookupBucketArgs, opts ...pulumi.InvokeOption) (*LookupBucketResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBucketResult
	err := ctx.Invoke("scaleway:objectstorage/getBucket:getBucket", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBucket.
type LookupBucketArgs struct {
	Name *string `pulumi:"name"`
	// `projectId`) The ID of the project the bucket is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `region`) The region in which the bucket exists.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getBucket.
type LookupBucketResult struct {
	Acl         string              `pulumi:"acl"`
	ApiEndpoint string              `pulumi:"apiEndpoint"`
	CorsRules   []GetBucketCorsRule `pulumi:"corsRules"`
	// The endpoint URL of the bucket
	Endpoint     string `pulumi:"endpoint"`
	ForceDestroy bool   `pulumi:"forceDestroy"`
	// The provider-assigned unique ID for this managed resource.
	Id                string                   `pulumi:"id"`
	LifecycleRules    []GetBucketLifecycleRule `pulumi:"lifecycleRules"`
	Name              *string                  `pulumi:"name"`
	ObjectLockEnabled bool                     `pulumi:"objectLockEnabled"`
	ProjectId         *string                  `pulumi:"projectId"`
	Region            *string                  `pulumi:"region"`
	Tags              map[string]string        `pulumi:"tags"`
	Versionings       []GetBucketVersioning    `pulumi:"versionings"`
}

func LookupBucketOutput(ctx *pulumi.Context, args LookupBucketOutputArgs, opts ...pulumi.InvokeOption) LookupBucketResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBucketResult, error) {
			args := v.(LookupBucketArgs)
			r, err := LookupBucket(ctx, &args, opts...)
			var s LookupBucketResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBucketResultOutput)
}

// A collection of arguments for invoking getBucket.
type LookupBucketOutputArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
	// `projectId`) The ID of the project the bucket is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `region`) The region in which the bucket exists.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupBucketOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBucketArgs)(nil)).Elem()
}

// A collection of values returned by getBucket.
type LookupBucketResultOutput struct{ *pulumi.OutputState }

func (LookupBucketResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBucketResult)(nil)).Elem()
}

func (o LookupBucketResultOutput) ToLookupBucketResultOutput() LookupBucketResultOutput {
	return o
}

func (o LookupBucketResultOutput) ToLookupBucketResultOutputWithContext(ctx context.Context) LookupBucketResultOutput {
	return o
}

func (o LookupBucketResultOutput) Acl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.Acl }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) ApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.ApiEndpoint }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) CorsRules() GetBucketCorsRuleArrayOutput {
	return o.ApplyT(func(v LookupBucketResult) []GetBucketCorsRule { return v.CorsRules }).(GetBucketCorsRuleArrayOutput)
}

// The endpoint URL of the bucket
func (o LookupBucketResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) ForceDestroy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBucketResult) bool { return v.ForceDestroy }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBucketResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) LifecycleRules() GetBucketLifecycleRuleArrayOutput {
	return o.ApplyT(func(v LookupBucketResult) []GetBucketLifecycleRule { return v.LifecycleRules }).(GetBucketLifecycleRuleArrayOutput)
}

func (o LookupBucketResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBucketResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupBucketResultOutput) ObjectLockEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBucketResult) bool { return v.ObjectLockEnabled }).(pulumi.BoolOutput)
}

func (o LookupBucketResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBucketResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupBucketResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBucketResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupBucketResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBucketResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupBucketResultOutput) Versionings() GetBucketVersioningArrayOutput {
	return o.ApplyT(func(v LookupBucketResult) []GetBucketVersioning { return v.Versionings }).(GetBucketVersioningArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBucketResultOutput{})
}
