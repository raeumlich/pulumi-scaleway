// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mnq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type SNSCredentialsPermissions struct {
	// . Defines if user can manage the associated resource(s).
	CanManage *bool `pulumi:"canManage"`
	// . Defines if user can publish messages to the service.
	CanPublish *bool `pulumi:"canPublish"`
	// . Defines if user can receive messages from the service.
	CanReceive *bool `pulumi:"canReceive"`
}

// SNSCredentialsPermissionsInput is an input type that accepts SNSCredentialsPermissionsArgs and SNSCredentialsPermissionsOutput values.
// You can construct a concrete instance of `SNSCredentialsPermissionsInput` via:
//
//	SNSCredentialsPermissionsArgs{...}
type SNSCredentialsPermissionsInput interface {
	pulumi.Input

	ToSNSCredentialsPermissionsOutput() SNSCredentialsPermissionsOutput
	ToSNSCredentialsPermissionsOutputWithContext(context.Context) SNSCredentialsPermissionsOutput
}

type SNSCredentialsPermissionsArgs struct {
	// . Defines if user can manage the associated resource(s).
	CanManage pulumi.BoolPtrInput `pulumi:"canManage"`
	// . Defines if user can publish messages to the service.
	CanPublish pulumi.BoolPtrInput `pulumi:"canPublish"`
	// . Defines if user can receive messages from the service.
	CanReceive pulumi.BoolPtrInput `pulumi:"canReceive"`
}

func (SNSCredentialsPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SNSCredentialsPermissions)(nil)).Elem()
}

func (i SNSCredentialsPermissionsArgs) ToSNSCredentialsPermissionsOutput() SNSCredentialsPermissionsOutput {
	return i.ToSNSCredentialsPermissionsOutputWithContext(context.Background())
}

func (i SNSCredentialsPermissionsArgs) ToSNSCredentialsPermissionsOutputWithContext(ctx context.Context) SNSCredentialsPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SNSCredentialsPermissionsOutput)
}

func (i SNSCredentialsPermissionsArgs) ToSNSCredentialsPermissionsPtrOutput() SNSCredentialsPermissionsPtrOutput {
	return i.ToSNSCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i SNSCredentialsPermissionsArgs) ToSNSCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SNSCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SNSCredentialsPermissionsOutput).ToSNSCredentialsPermissionsPtrOutputWithContext(ctx)
}

// SNSCredentialsPermissionsPtrInput is an input type that accepts SNSCredentialsPermissionsArgs, SNSCredentialsPermissionsPtr and SNSCredentialsPermissionsPtrOutput values.
// You can construct a concrete instance of `SNSCredentialsPermissionsPtrInput` via:
//
//	        SNSCredentialsPermissionsArgs{...}
//
//	or:
//
//	        nil
type SNSCredentialsPermissionsPtrInput interface {
	pulumi.Input

	ToSNSCredentialsPermissionsPtrOutput() SNSCredentialsPermissionsPtrOutput
	ToSNSCredentialsPermissionsPtrOutputWithContext(context.Context) SNSCredentialsPermissionsPtrOutput
}

type snscredentialsPermissionsPtrType SNSCredentialsPermissionsArgs

func SNSCredentialsPermissionsPtr(v *SNSCredentialsPermissionsArgs) SNSCredentialsPermissionsPtrInput {
	return (*snscredentialsPermissionsPtrType)(v)
}

func (*snscredentialsPermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SNSCredentialsPermissions)(nil)).Elem()
}

func (i *snscredentialsPermissionsPtrType) ToSNSCredentialsPermissionsPtrOutput() SNSCredentialsPermissionsPtrOutput {
	return i.ToSNSCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i *snscredentialsPermissionsPtrType) ToSNSCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SNSCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SNSCredentialsPermissionsPtrOutput)
}

type SNSCredentialsPermissionsOutput struct{ *pulumi.OutputState }

func (SNSCredentialsPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SNSCredentialsPermissions)(nil)).Elem()
}

func (o SNSCredentialsPermissionsOutput) ToSNSCredentialsPermissionsOutput() SNSCredentialsPermissionsOutput {
	return o
}

func (o SNSCredentialsPermissionsOutput) ToSNSCredentialsPermissionsOutputWithContext(ctx context.Context) SNSCredentialsPermissionsOutput {
	return o
}

func (o SNSCredentialsPermissionsOutput) ToSNSCredentialsPermissionsPtrOutput() SNSCredentialsPermissionsPtrOutput {
	return o.ToSNSCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (o SNSCredentialsPermissionsOutput) ToSNSCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SNSCredentialsPermissionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SNSCredentialsPermissions) *SNSCredentialsPermissions {
		return &v
	}).(SNSCredentialsPermissionsPtrOutput)
}

// . Defines if user can manage the associated resource(s).
func (o SNSCredentialsPermissionsOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SNSCredentialsPermissions) *bool { return v.CanManage }).(pulumi.BoolPtrOutput)
}

// . Defines if user can publish messages to the service.
func (o SNSCredentialsPermissionsOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SNSCredentialsPermissions) *bool { return v.CanPublish }).(pulumi.BoolPtrOutput)
}

// . Defines if user can receive messages from the service.
func (o SNSCredentialsPermissionsOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SNSCredentialsPermissions) *bool { return v.CanReceive }).(pulumi.BoolPtrOutput)
}

type SNSCredentialsPermissionsPtrOutput struct{ *pulumi.OutputState }

func (SNSCredentialsPermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SNSCredentialsPermissions)(nil)).Elem()
}

func (o SNSCredentialsPermissionsPtrOutput) ToSNSCredentialsPermissionsPtrOutput() SNSCredentialsPermissionsPtrOutput {
	return o
}

func (o SNSCredentialsPermissionsPtrOutput) ToSNSCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SNSCredentialsPermissionsPtrOutput {
	return o
}

func (o SNSCredentialsPermissionsPtrOutput) Elem() SNSCredentialsPermissionsOutput {
	return o.ApplyT(func(v *SNSCredentialsPermissions) SNSCredentialsPermissions {
		if v != nil {
			return *v
		}
		var ret SNSCredentialsPermissions
		return ret
	}).(SNSCredentialsPermissionsOutput)
}

// . Defines if user can manage the associated resource(s).
func (o SNSCredentialsPermissionsPtrOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SNSCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanManage
	}).(pulumi.BoolPtrOutput)
}

// . Defines if user can publish messages to the service.
func (o SNSCredentialsPermissionsPtrOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SNSCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanPublish
	}).(pulumi.BoolPtrOutput)
}

// . Defines if user can receive messages from the service.
func (o SNSCredentialsPermissionsPtrOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SNSCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanReceive
	}).(pulumi.BoolPtrOutput)
}

type SQSCredentialsPermissions struct {
	// . Defines if user can manage the associated resource(s).
	CanManage *bool `pulumi:"canManage"`
	// . Defines if user can publish messages to the service.
	CanPublish *bool `pulumi:"canPublish"`
	// . Defines if user can receive messages from the service.
	CanReceive *bool `pulumi:"canReceive"`
}

// SQSCredentialsPermissionsInput is an input type that accepts SQSCredentialsPermissionsArgs and SQSCredentialsPermissionsOutput values.
// You can construct a concrete instance of `SQSCredentialsPermissionsInput` via:
//
//	SQSCredentialsPermissionsArgs{...}
type SQSCredentialsPermissionsInput interface {
	pulumi.Input

	ToSQSCredentialsPermissionsOutput() SQSCredentialsPermissionsOutput
	ToSQSCredentialsPermissionsOutputWithContext(context.Context) SQSCredentialsPermissionsOutput
}

type SQSCredentialsPermissionsArgs struct {
	// . Defines if user can manage the associated resource(s).
	CanManage pulumi.BoolPtrInput `pulumi:"canManage"`
	// . Defines if user can publish messages to the service.
	CanPublish pulumi.BoolPtrInput `pulumi:"canPublish"`
	// . Defines if user can receive messages from the service.
	CanReceive pulumi.BoolPtrInput `pulumi:"canReceive"`
}

func (SQSCredentialsPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SQSCredentialsPermissions)(nil)).Elem()
}

func (i SQSCredentialsPermissionsArgs) ToSQSCredentialsPermissionsOutput() SQSCredentialsPermissionsOutput {
	return i.ToSQSCredentialsPermissionsOutputWithContext(context.Background())
}

func (i SQSCredentialsPermissionsArgs) ToSQSCredentialsPermissionsOutputWithContext(ctx context.Context) SQSCredentialsPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQSCredentialsPermissionsOutput)
}

func (i SQSCredentialsPermissionsArgs) ToSQSCredentialsPermissionsPtrOutput() SQSCredentialsPermissionsPtrOutput {
	return i.ToSQSCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i SQSCredentialsPermissionsArgs) ToSQSCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SQSCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQSCredentialsPermissionsOutput).ToSQSCredentialsPermissionsPtrOutputWithContext(ctx)
}

// SQSCredentialsPermissionsPtrInput is an input type that accepts SQSCredentialsPermissionsArgs, SQSCredentialsPermissionsPtr and SQSCredentialsPermissionsPtrOutput values.
// You can construct a concrete instance of `SQSCredentialsPermissionsPtrInput` via:
//
//	        SQSCredentialsPermissionsArgs{...}
//
//	or:
//
//	        nil
type SQSCredentialsPermissionsPtrInput interface {
	pulumi.Input

	ToSQSCredentialsPermissionsPtrOutput() SQSCredentialsPermissionsPtrOutput
	ToSQSCredentialsPermissionsPtrOutputWithContext(context.Context) SQSCredentialsPermissionsPtrOutput
}

type sqscredentialsPermissionsPtrType SQSCredentialsPermissionsArgs

func SQSCredentialsPermissionsPtr(v *SQSCredentialsPermissionsArgs) SQSCredentialsPermissionsPtrInput {
	return (*sqscredentialsPermissionsPtrType)(v)
}

func (*sqscredentialsPermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SQSCredentialsPermissions)(nil)).Elem()
}

func (i *sqscredentialsPermissionsPtrType) ToSQSCredentialsPermissionsPtrOutput() SQSCredentialsPermissionsPtrOutput {
	return i.ToSQSCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i *sqscredentialsPermissionsPtrType) ToSQSCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SQSCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQSCredentialsPermissionsPtrOutput)
}

type SQSCredentialsPermissionsOutput struct{ *pulumi.OutputState }

func (SQSCredentialsPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SQSCredentialsPermissions)(nil)).Elem()
}

func (o SQSCredentialsPermissionsOutput) ToSQSCredentialsPermissionsOutput() SQSCredentialsPermissionsOutput {
	return o
}

func (o SQSCredentialsPermissionsOutput) ToSQSCredentialsPermissionsOutputWithContext(ctx context.Context) SQSCredentialsPermissionsOutput {
	return o
}

func (o SQSCredentialsPermissionsOutput) ToSQSCredentialsPermissionsPtrOutput() SQSCredentialsPermissionsPtrOutput {
	return o.ToSQSCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (o SQSCredentialsPermissionsOutput) ToSQSCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SQSCredentialsPermissionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SQSCredentialsPermissions) *SQSCredentialsPermissions {
		return &v
	}).(SQSCredentialsPermissionsPtrOutput)
}

// . Defines if user can manage the associated resource(s).
func (o SQSCredentialsPermissionsOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SQSCredentialsPermissions) *bool { return v.CanManage }).(pulumi.BoolPtrOutput)
}

// . Defines if user can publish messages to the service.
func (o SQSCredentialsPermissionsOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SQSCredentialsPermissions) *bool { return v.CanPublish }).(pulumi.BoolPtrOutput)
}

// . Defines if user can receive messages from the service.
func (o SQSCredentialsPermissionsOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SQSCredentialsPermissions) *bool { return v.CanReceive }).(pulumi.BoolPtrOutput)
}

type SQSCredentialsPermissionsPtrOutput struct{ *pulumi.OutputState }

func (SQSCredentialsPermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SQSCredentialsPermissions)(nil)).Elem()
}

func (o SQSCredentialsPermissionsPtrOutput) ToSQSCredentialsPermissionsPtrOutput() SQSCredentialsPermissionsPtrOutput {
	return o
}

func (o SQSCredentialsPermissionsPtrOutput) ToSQSCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SQSCredentialsPermissionsPtrOutput {
	return o
}

func (o SQSCredentialsPermissionsPtrOutput) Elem() SQSCredentialsPermissionsOutput {
	return o.ApplyT(func(v *SQSCredentialsPermissions) SQSCredentialsPermissions {
		if v != nil {
			return *v
		}
		var ret SQSCredentialsPermissions
		return ret
	}).(SQSCredentialsPermissionsOutput)
}

// . Defines if user can manage the associated resource(s).
func (o SQSCredentialsPermissionsPtrOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SQSCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanManage
	}).(pulumi.BoolPtrOutput)
}

// . Defines if user can publish messages to the service.
func (o SQSCredentialsPermissionsPtrOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SQSCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanPublish
	}).(pulumi.BoolPtrOutput)
}

// . Defines if user can receive messages from the service.
func (o SQSCredentialsPermissionsPtrOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SQSCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanReceive
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SNSCredentialsPermissionsInput)(nil)).Elem(), SNSCredentialsPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SNSCredentialsPermissionsPtrInput)(nil)).Elem(), SNSCredentialsPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SQSCredentialsPermissionsInput)(nil)).Elem(), SQSCredentialsPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SQSCredentialsPermissionsPtrInput)(nil)).Elem(), SQSCredentialsPermissionsArgs{})
	pulumi.RegisterOutputType(SNSCredentialsPermissionsOutput{})
	pulumi.RegisterOutputType(SNSCredentialsPermissionsPtrOutput{})
	pulumi.RegisterOutputType(SQSCredentialsPermissionsOutput{})
	pulumi.RegisterOutputType(SQSCredentialsPermissionsPtrOutput{})
}
