// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Creates and manages Scaleway VPC Public Gateway DHCP.
// For more information, see [the documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-c05544).
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.NewPublicGatewayDHCP(ctx, "main", &vpc.PublicGatewayDHCPArgs{
//				Subnet: pulumi.String("192.168.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Public gateway DHCP config can be imported using the `{zone}/{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:vpc/publicGatewayDHCP:PublicGatewayDHCP main fr-par-1/11111111-1111-1111-1111-111111111111
// ```
type PublicGatewayDHCP struct {
	pulumi.CustomResourceState

	// The IP address of the public gateway DHCP config.
	Address pulumi.StringOutput `pulumi:"address"`
	// The date and time of the creation of the public gateway DHCP config.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private Network name if created along a GatewayNetwork, or else to `priv`.
	DnsLocalName pulumi.StringOutput `pulumi:"dnsLocalName"`
	// Additional DNS search paths
	DnsSearches pulumi.StringArrayOutput `pulumi:"dnsSearches"`
	// Override the DNS server list pushed to DHCP clients, instead of the gateway itself
	DnsServersOverrides pulumi.StringArrayOutput `pulumi:"dnsServersOverrides"`
	// Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be handed out. Defaults to `true`.
	EnableDynamic pulumi.BoolOutput `pulumi:"enableDynamic"`
	// The organization ID the public gateway DHCP config is associated with.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// High IP (excluded) of the dynamic address pool. Defaults to the last address of the subnet.
	PoolHigh pulumi.StringOutput `pulumi:"poolHigh"`
	// Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet.
	PoolLow pulumi.StringOutput `pulumi:"poolLow"`
	// `projectId`) The ID of the project the public gateway DHCP config is associated with.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to `true`.
	PushDefaultRoute pulumi.BoolOutput `pulumi:"pushDefaultRoute"`
	// Whether the gateway should push custom DNS servers to clients. This allows for instance hostname > IP resolution. Defaults to `true`.
	PushDnsServer pulumi.BoolOutput `pulumi:"pushDnsServer"`
	// After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than `validLifetime`. Defaults to 51m (3060s).
	RebindTimer pulumi.IntOutput `pulumi:"rebindTimer"`
	// After how long, in seconds, a renewal will be attempted. Must be 30s lower than `rebindTimer`. Defaults to 50m (3000s).
	RenewTimer pulumi.IntOutput `pulumi:"renewTimer"`
	// The subnet to associate with the public gateway DHCP config.
	Subnet pulumi.StringOutput `pulumi:"subnet"`
	// The date and time of the last update of the public gateway DHCP config.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s).
	ValidLifetime pulumi.IntOutput `pulumi:"validLifetime"`
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewPublicGatewayDHCP registers a new resource with the given unique name, arguments, and options.
func NewPublicGatewayDHCP(ctx *pulumi.Context,
	name string, args *PublicGatewayDHCPArgs, opts ...pulumi.ResourceOption) (*PublicGatewayDHCP, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Subnet == nil {
		return nil, errors.New("invalid value for required argument 'Subnet'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PublicGatewayDHCP
	err := ctx.RegisterResource("scaleway:vpc/publicGatewayDHCP:PublicGatewayDHCP", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicGatewayDHCP gets an existing PublicGatewayDHCP resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicGatewayDHCP(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicGatewayDHCPState, opts ...pulumi.ResourceOption) (*PublicGatewayDHCP, error) {
	var resource PublicGatewayDHCP
	err := ctx.ReadResource("scaleway:vpc/publicGatewayDHCP:PublicGatewayDHCP", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicGatewayDHCP resources.
type publicGatewayDHCPState struct {
	// The IP address of the public gateway DHCP config.
	Address *string `pulumi:"address"`
	// The date and time of the creation of the public gateway DHCP config.
	CreatedAt *string `pulumi:"createdAt"`
	// TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private Network name if created along a GatewayNetwork, or else to `priv`.
	DnsLocalName *string `pulumi:"dnsLocalName"`
	// Additional DNS search paths
	DnsSearches []string `pulumi:"dnsSearches"`
	// Override the DNS server list pushed to DHCP clients, instead of the gateway itself
	DnsServersOverrides []string `pulumi:"dnsServersOverrides"`
	// Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be handed out. Defaults to `true`.
	EnableDynamic *bool `pulumi:"enableDynamic"`
	// The organization ID the public gateway DHCP config is associated with.
	OrganizationId *string `pulumi:"organizationId"`
	// High IP (excluded) of the dynamic address pool. Defaults to the last address of the subnet.
	PoolHigh *string `pulumi:"poolHigh"`
	// Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet.
	PoolLow *string `pulumi:"poolLow"`
	// `projectId`) The ID of the project the public gateway DHCP config is associated with.
	ProjectId *string `pulumi:"projectId"`
	// Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to `true`.
	PushDefaultRoute *bool `pulumi:"pushDefaultRoute"`
	// Whether the gateway should push custom DNS servers to clients. This allows for instance hostname > IP resolution. Defaults to `true`.
	PushDnsServer *bool `pulumi:"pushDnsServer"`
	// After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than `validLifetime`. Defaults to 51m (3060s).
	RebindTimer *int `pulumi:"rebindTimer"`
	// After how long, in seconds, a renewal will be attempted. Must be 30s lower than `rebindTimer`. Defaults to 50m (3000s).
	RenewTimer *int `pulumi:"renewTimer"`
	// The subnet to associate with the public gateway DHCP config.
	Subnet *string `pulumi:"subnet"`
	// The date and time of the last update of the public gateway DHCP config.
	UpdatedAt *string `pulumi:"updatedAt"`
	// For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s).
	ValidLifetime *int `pulumi:"validLifetime"`
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone *string `pulumi:"zone"`
}

type PublicGatewayDHCPState struct {
	// The IP address of the public gateway DHCP config.
	Address pulumi.StringPtrInput
	// The date and time of the creation of the public gateway DHCP config.
	CreatedAt pulumi.StringPtrInput
	// TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private Network name if created along a GatewayNetwork, or else to `priv`.
	DnsLocalName pulumi.StringPtrInput
	// Additional DNS search paths
	DnsSearches pulumi.StringArrayInput
	// Override the DNS server list pushed to DHCP clients, instead of the gateway itself
	DnsServersOverrides pulumi.StringArrayInput
	// Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be handed out. Defaults to `true`.
	EnableDynamic pulumi.BoolPtrInput
	// The organization ID the public gateway DHCP config is associated with.
	OrganizationId pulumi.StringPtrInput
	// High IP (excluded) of the dynamic address pool. Defaults to the last address of the subnet.
	PoolHigh pulumi.StringPtrInput
	// Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet.
	PoolLow pulumi.StringPtrInput
	// `projectId`) The ID of the project the public gateway DHCP config is associated with.
	ProjectId pulumi.StringPtrInput
	// Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to `true`.
	PushDefaultRoute pulumi.BoolPtrInput
	// Whether the gateway should push custom DNS servers to clients. This allows for instance hostname > IP resolution. Defaults to `true`.
	PushDnsServer pulumi.BoolPtrInput
	// After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than `validLifetime`. Defaults to 51m (3060s).
	RebindTimer pulumi.IntPtrInput
	// After how long, in seconds, a renewal will be attempted. Must be 30s lower than `rebindTimer`. Defaults to 50m (3000s).
	RenewTimer pulumi.IntPtrInput
	// The subnet to associate with the public gateway DHCP config.
	Subnet pulumi.StringPtrInput
	// The date and time of the last update of the public gateway DHCP config.
	UpdatedAt pulumi.StringPtrInput
	// For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s).
	ValidLifetime pulumi.IntPtrInput
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone pulumi.StringPtrInput
}

func (PublicGatewayDHCPState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicGatewayDHCPState)(nil)).Elem()
}

type publicGatewayDHCPArgs struct {
	// The IP address of the public gateway DHCP config.
	Address *string `pulumi:"address"`
	// TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private Network name if created along a GatewayNetwork, or else to `priv`.
	DnsLocalName *string `pulumi:"dnsLocalName"`
	// Additional DNS search paths
	DnsSearches []string `pulumi:"dnsSearches"`
	// Override the DNS server list pushed to DHCP clients, instead of the gateway itself
	DnsServersOverrides []string `pulumi:"dnsServersOverrides"`
	// Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be handed out. Defaults to `true`.
	EnableDynamic *bool `pulumi:"enableDynamic"`
	// High IP (excluded) of the dynamic address pool. Defaults to the last address of the subnet.
	PoolHigh *string `pulumi:"poolHigh"`
	// Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet.
	PoolLow *string `pulumi:"poolLow"`
	// `projectId`) The ID of the project the public gateway DHCP config is associated with.
	ProjectId *string `pulumi:"projectId"`
	// Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to `true`.
	PushDefaultRoute *bool `pulumi:"pushDefaultRoute"`
	// Whether the gateway should push custom DNS servers to clients. This allows for instance hostname > IP resolution. Defaults to `true`.
	PushDnsServer *bool `pulumi:"pushDnsServer"`
	// After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than `validLifetime`. Defaults to 51m (3060s).
	RebindTimer *int `pulumi:"rebindTimer"`
	// After how long, in seconds, a renewal will be attempted. Must be 30s lower than `rebindTimer`. Defaults to 50m (3000s).
	RenewTimer *int `pulumi:"renewTimer"`
	// The subnet to associate with the public gateway DHCP config.
	Subnet string `pulumi:"subnet"`
	// For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s).
	ValidLifetime *int `pulumi:"validLifetime"`
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a PublicGatewayDHCP resource.
type PublicGatewayDHCPArgs struct {
	// The IP address of the public gateway DHCP config.
	Address pulumi.StringPtrInput
	// TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private Network name if created along a GatewayNetwork, or else to `priv`.
	DnsLocalName pulumi.StringPtrInput
	// Additional DNS search paths
	DnsSearches pulumi.StringArrayInput
	// Override the DNS server list pushed to DHCP clients, instead of the gateway itself
	DnsServersOverrides pulumi.StringArrayInput
	// Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be handed out. Defaults to `true`.
	EnableDynamic pulumi.BoolPtrInput
	// High IP (excluded) of the dynamic address pool. Defaults to the last address of the subnet.
	PoolHigh pulumi.StringPtrInput
	// Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet.
	PoolLow pulumi.StringPtrInput
	// `projectId`) The ID of the project the public gateway DHCP config is associated with.
	ProjectId pulumi.StringPtrInput
	// Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to `true`.
	PushDefaultRoute pulumi.BoolPtrInput
	// Whether the gateway should push custom DNS servers to clients. This allows for instance hostname > IP resolution. Defaults to `true`.
	PushDnsServer pulumi.BoolPtrInput
	// After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than `validLifetime`. Defaults to 51m (3060s).
	RebindTimer pulumi.IntPtrInput
	// After how long, in seconds, a renewal will be attempted. Must be 30s lower than `rebindTimer`. Defaults to 50m (3000s).
	RenewTimer pulumi.IntPtrInput
	// The subnet to associate with the public gateway DHCP config.
	Subnet pulumi.StringInput
	// For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s).
	ValidLifetime pulumi.IntPtrInput
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone pulumi.StringPtrInput
}

func (PublicGatewayDHCPArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicGatewayDHCPArgs)(nil)).Elem()
}

type PublicGatewayDHCPInput interface {
	pulumi.Input

	ToPublicGatewayDHCPOutput() PublicGatewayDHCPOutput
	ToPublicGatewayDHCPOutputWithContext(ctx context.Context) PublicGatewayDHCPOutput
}

func (*PublicGatewayDHCP) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicGatewayDHCP)(nil)).Elem()
}

func (i *PublicGatewayDHCP) ToPublicGatewayDHCPOutput() PublicGatewayDHCPOutput {
	return i.ToPublicGatewayDHCPOutputWithContext(context.Background())
}

func (i *PublicGatewayDHCP) ToPublicGatewayDHCPOutputWithContext(ctx context.Context) PublicGatewayDHCPOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicGatewayDHCPOutput)
}

// PublicGatewayDHCPArrayInput is an input type that accepts PublicGatewayDHCPArray and PublicGatewayDHCPArrayOutput values.
// You can construct a concrete instance of `PublicGatewayDHCPArrayInput` via:
//
//	PublicGatewayDHCPArray{ PublicGatewayDHCPArgs{...} }
type PublicGatewayDHCPArrayInput interface {
	pulumi.Input

	ToPublicGatewayDHCPArrayOutput() PublicGatewayDHCPArrayOutput
	ToPublicGatewayDHCPArrayOutputWithContext(context.Context) PublicGatewayDHCPArrayOutput
}

type PublicGatewayDHCPArray []PublicGatewayDHCPInput

func (PublicGatewayDHCPArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicGatewayDHCP)(nil)).Elem()
}

func (i PublicGatewayDHCPArray) ToPublicGatewayDHCPArrayOutput() PublicGatewayDHCPArrayOutput {
	return i.ToPublicGatewayDHCPArrayOutputWithContext(context.Background())
}

func (i PublicGatewayDHCPArray) ToPublicGatewayDHCPArrayOutputWithContext(ctx context.Context) PublicGatewayDHCPArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicGatewayDHCPArrayOutput)
}

// PublicGatewayDHCPMapInput is an input type that accepts PublicGatewayDHCPMap and PublicGatewayDHCPMapOutput values.
// You can construct a concrete instance of `PublicGatewayDHCPMapInput` via:
//
//	PublicGatewayDHCPMap{ "key": PublicGatewayDHCPArgs{...} }
type PublicGatewayDHCPMapInput interface {
	pulumi.Input

	ToPublicGatewayDHCPMapOutput() PublicGatewayDHCPMapOutput
	ToPublicGatewayDHCPMapOutputWithContext(context.Context) PublicGatewayDHCPMapOutput
}

type PublicGatewayDHCPMap map[string]PublicGatewayDHCPInput

func (PublicGatewayDHCPMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicGatewayDHCP)(nil)).Elem()
}

func (i PublicGatewayDHCPMap) ToPublicGatewayDHCPMapOutput() PublicGatewayDHCPMapOutput {
	return i.ToPublicGatewayDHCPMapOutputWithContext(context.Background())
}

func (i PublicGatewayDHCPMap) ToPublicGatewayDHCPMapOutputWithContext(ctx context.Context) PublicGatewayDHCPMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicGatewayDHCPMapOutput)
}

type PublicGatewayDHCPOutput struct{ *pulumi.OutputState }

func (PublicGatewayDHCPOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicGatewayDHCP)(nil)).Elem()
}

func (o PublicGatewayDHCPOutput) ToPublicGatewayDHCPOutput() PublicGatewayDHCPOutput {
	return o
}

func (o PublicGatewayDHCPOutput) ToPublicGatewayDHCPOutputWithContext(ctx context.Context) PublicGatewayDHCPOutput {
	return o
}

// The IP address of the public gateway DHCP config.
func (o PublicGatewayDHCPOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// The date and time of the creation of the public gateway DHCP config.
func (o PublicGatewayDHCPOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private Network name if created along a GatewayNetwork, or else to `priv`.
func (o PublicGatewayDHCPOutput) DnsLocalName() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringOutput { return v.DnsLocalName }).(pulumi.StringOutput)
}

// Additional DNS search paths
func (o PublicGatewayDHCPOutput) DnsSearches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringArrayOutput { return v.DnsSearches }).(pulumi.StringArrayOutput)
}

// Override the DNS server list pushed to DHCP clients, instead of the gateway itself
func (o PublicGatewayDHCPOutput) DnsServersOverrides() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringArrayOutput { return v.DnsServersOverrides }).(pulumi.StringArrayOutput)
}

// Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be handed out. Defaults to `true`.
func (o PublicGatewayDHCPOutput) EnableDynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.BoolOutput { return v.EnableDynamic }).(pulumi.BoolOutput)
}

// The organization ID the public gateway DHCP config is associated with.
func (o PublicGatewayDHCPOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// High IP (excluded) of the dynamic address pool. Defaults to the last address of the subnet.
func (o PublicGatewayDHCPOutput) PoolHigh() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringOutput { return v.PoolHigh }).(pulumi.StringOutput)
}

// Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet.
func (o PublicGatewayDHCPOutput) PoolLow() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringOutput { return v.PoolLow }).(pulumi.StringOutput)
}

// `projectId`) The ID of the project the public gateway DHCP config is associated with.
func (o PublicGatewayDHCPOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to `true`.
func (o PublicGatewayDHCPOutput) PushDefaultRoute() pulumi.BoolOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.BoolOutput { return v.PushDefaultRoute }).(pulumi.BoolOutput)
}

// Whether the gateway should push custom DNS servers to clients. This allows for instance hostname > IP resolution. Defaults to `true`.
func (o PublicGatewayDHCPOutput) PushDnsServer() pulumi.BoolOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.BoolOutput { return v.PushDnsServer }).(pulumi.BoolOutput)
}

// After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than `validLifetime`. Defaults to 51m (3060s).
func (o PublicGatewayDHCPOutput) RebindTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.IntOutput { return v.RebindTimer }).(pulumi.IntOutput)
}

// After how long, in seconds, a renewal will be attempted. Must be 30s lower than `rebindTimer`. Defaults to 50m (3000s).
func (o PublicGatewayDHCPOutput) RenewTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.IntOutput { return v.RenewTimer }).(pulumi.IntOutput)
}

// The subnet to associate with the public gateway DHCP config.
func (o PublicGatewayDHCPOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringOutput { return v.Subnet }).(pulumi.StringOutput)
}

// The date and time of the last update of the public gateway DHCP config.
func (o PublicGatewayDHCPOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s).
func (o PublicGatewayDHCPOutput) ValidLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.IntOutput { return v.ValidLifetime }).(pulumi.IntOutput)
}

// `zone`) The zone in which the public gateway DHCP config should be created.
func (o PublicGatewayDHCPOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCP) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type PublicGatewayDHCPArrayOutput struct{ *pulumi.OutputState }

func (PublicGatewayDHCPArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicGatewayDHCP)(nil)).Elem()
}

func (o PublicGatewayDHCPArrayOutput) ToPublicGatewayDHCPArrayOutput() PublicGatewayDHCPArrayOutput {
	return o
}

func (o PublicGatewayDHCPArrayOutput) ToPublicGatewayDHCPArrayOutputWithContext(ctx context.Context) PublicGatewayDHCPArrayOutput {
	return o
}

func (o PublicGatewayDHCPArrayOutput) Index(i pulumi.IntInput) PublicGatewayDHCPOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PublicGatewayDHCP {
		return vs[0].([]*PublicGatewayDHCP)[vs[1].(int)]
	}).(PublicGatewayDHCPOutput)
}

type PublicGatewayDHCPMapOutput struct{ *pulumi.OutputState }

func (PublicGatewayDHCPMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicGatewayDHCP)(nil)).Elem()
}

func (o PublicGatewayDHCPMapOutput) ToPublicGatewayDHCPMapOutput() PublicGatewayDHCPMapOutput {
	return o
}

func (o PublicGatewayDHCPMapOutput) ToPublicGatewayDHCPMapOutputWithContext(ctx context.Context) PublicGatewayDHCPMapOutput {
	return o
}

func (o PublicGatewayDHCPMapOutput) MapIndex(k pulumi.StringInput) PublicGatewayDHCPOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PublicGatewayDHCP {
		return vs[0].(map[string]*PublicGatewayDHCP)[vs[1].(string)]
	}).(PublicGatewayDHCPOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublicGatewayDHCPInput)(nil)).Elem(), &PublicGatewayDHCP{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicGatewayDHCPArrayInput)(nil)).Elem(), PublicGatewayDHCPArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicGatewayDHCPMapInput)(nil)).Elem(), PublicGatewayDHCPMap{})
	pulumi.RegisterOutputType(PublicGatewayDHCPOutput{})
	pulumi.RegisterOutputType(PublicGatewayDHCPArrayOutput{})
	pulumi.RegisterOutputType(PublicGatewayDHCPMapOutput{})
}
