// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Creates and manages the [Scaleway DHCP Reservations](https://www.scaleway.com/en/docs/network/vpc/concepts/#dhcp).
//
// The static associations are used to assign IP addresses based on the MAC addresses of the Instance.
//
// Statically assigned IP addresses should fall within the configured subnet, but be outside of the dynamic range.
//
// For more information, see [the documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-c05544) and [configuration guide](https://www.scaleway.com/en/docs/network/vpc/how-to/configure-a-public-gateway/#how-to-review-and-configure-dhcp).
//
// [DHCP reservations](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-entries-e40fb6) hold both dynamic DHCP leases (IP addresses dynamically assigned by the gateway to instances) and static user-created DHCP reservations.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/instance"
//	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			mainPrivateNetwork, err := vpc.NewPrivateNetwork(ctx, "mainPrivateNetwork", nil)
//			if err != nil {
//				return err
//			}
//			mainServer, err := instance.NewServer(ctx, "mainServer", &instance.ServerArgs{
//				Image: pulumi.String("ubuntu_jammy"),
//				Type:  pulumi.String("DEV1-S"),
//				Zone:  pulumi.String("fr-par-1"),
//				PrivateNetworks: instance.ServerPrivateNetworkArray{
//					&instance.ServerPrivateNetworkArgs{
//						PnId: mainPrivateNetwork.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			mainPublicGatewayIP, err := vpc.NewPublicGatewayIP(ctx, "mainPublicGatewayIP", nil)
//			if err != nil {
//				return err
//			}
//			mainPublicGatewayDHCP, err := vpc.NewPublicGatewayDHCP(ctx, "mainPublicGatewayDHCP", &vpc.PublicGatewayDHCPArgs{
//				Subnet: pulumi.String("192.168.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			mainPublicGateway, err := vpc.NewPublicGateway(ctx, "mainPublicGateway", &vpc.PublicGatewayArgs{
//				Type: pulumi.String("VPC-GW-S"),
//				IpId: mainPublicGatewayIP.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			mainGatewayNetwork, err := vpc.NewGatewayNetwork(ctx, "mainGatewayNetwork", &vpc.GatewayNetworkArgs{
//				GatewayId:        mainPublicGateway.ID(),
//				PrivateNetworkId: mainPrivateNetwork.ID(),
//				DhcpId:           mainPublicGatewayDHCP.ID(),
//				CleanupDhcp:      pulumi.Bool(true),
//				EnableMasquerade: pulumi.Bool(true),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				mainPublicGatewayIP,
//				mainPrivateNetwork,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = vpc.NewPublicGatewayDHCPReservation(ctx, "mainPublicGatewayDHCPReservation", &vpc.PublicGatewayDHCPReservationArgs{
//				GatewayNetworkId: mainGatewayNetwork.ID(),
//				MacAddress: mainServer.PrivateNetworks.ApplyT(func(privateNetworks []instance.ServerPrivateNetwork) (*string, error) {
//					return &privateNetworks[0].MacAddress, nil
//				}).(pulumi.StringPtrOutput),
//				IpAddress: pulumi.String("192.168.1.1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Public gateway DHCP Reservation config can be imported using the `{zone}/{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:vpc/publicGatewayDHCPReservation:PublicGatewayDHCPReservation main fr-par-1/11111111-1111-1111-1111-111111111111
// ```
type PublicGatewayDHCPReservation struct {
	pulumi.CustomResourceState

	// The date and time of the creation of the public gateway DHCP config.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The ID of the owning GatewayNetwork.
	GatewayNetworkId pulumi.StringOutput `pulumi:"gatewayNetworkId"`
	// The Hostname of the client machine.
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// The IP address to give to the machine (IP address).
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// The MAC address to give a static entry to.
	MacAddress pulumi.StringOutput `pulumi:"macAddress"`
	// The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are reservation and lease.
	Type pulumi.StringOutput `pulumi:"type"`
	// The date and time of the last update of the public gateway DHCP config.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewPublicGatewayDHCPReservation registers a new resource with the given unique name, arguments, and options.
func NewPublicGatewayDHCPReservation(ctx *pulumi.Context,
	name string, args *PublicGatewayDHCPReservationArgs, opts ...pulumi.ResourceOption) (*PublicGatewayDHCPReservation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayNetworkId'")
	}
	if args.IpAddress == nil {
		return nil, errors.New("invalid value for required argument 'IpAddress'")
	}
	if args.MacAddress == nil {
		return nil, errors.New("invalid value for required argument 'MacAddress'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PublicGatewayDHCPReservation
	err := ctx.RegisterResource("scaleway:vpc/publicGatewayDHCPReservation:PublicGatewayDHCPReservation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicGatewayDHCPReservation gets an existing PublicGatewayDHCPReservation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicGatewayDHCPReservation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicGatewayDHCPReservationState, opts ...pulumi.ResourceOption) (*PublicGatewayDHCPReservation, error) {
	var resource PublicGatewayDHCPReservation
	err := ctx.ReadResource("scaleway:vpc/publicGatewayDHCPReservation:PublicGatewayDHCPReservation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicGatewayDHCPReservation resources.
type publicGatewayDHCPReservationState struct {
	// The date and time of the creation of the public gateway DHCP config.
	CreatedAt *string `pulumi:"createdAt"`
	// The ID of the owning GatewayNetwork.
	GatewayNetworkId *string `pulumi:"gatewayNetworkId"`
	// The Hostname of the client machine.
	Hostname *string `pulumi:"hostname"`
	// The IP address to give to the machine (IP address).
	IpAddress *string `pulumi:"ipAddress"`
	// The MAC address to give a static entry to.
	MacAddress *string `pulumi:"macAddress"`
	// The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are reservation and lease.
	Type *string `pulumi:"type"`
	// The date and time of the last update of the public gateway DHCP config.
	UpdatedAt *string `pulumi:"updatedAt"`
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone *string `pulumi:"zone"`
}

type PublicGatewayDHCPReservationState struct {
	// The date and time of the creation of the public gateway DHCP config.
	CreatedAt pulumi.StringPtrInput
	// The ID of the owning GatewayNetwork.
	GatewayNetworkId pulumi.StringPtrInput
	// The Hostname of the client machine.
	Hostname pulumi.StringPtrInput
	// The IP address to give to the machine (IP address).
	IpAddress pulumi.StringPtrInput
	// The MAC address to give a static entry to.
	MacAddress pulumi.StringPtrInput
	// The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are reservation and lease.
	Type pulumi.StringPtrInput
	// The date and time of the last update of the public gateway DHCP config.
	UpdatedAt pulumi.StringPtrInput
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone pulumi.StringPtrInput
}

func (PublicGatewayDHCPReservationState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicGatewayDHCPReservationState)(nil)).Elem()
}

type publicGatewayDHCPReservationArgs struct {
	// The ID of the owning GatewayNetwork.
	GatewayNetworkId string `pulumi:"gatewayNetworkId"`
	// The IP address to give to the machine (IP address).
	IpAddress string `pulumi:"ipAddress"`
	// The MAC address to give a static entry to.
	MacAddress string `pulumi:"macAddress"`
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a PublicGatewayDHCPReservation resource.
type PublicGatewayDHCPReservationArgs struct {
	// The ID of the owning GatewayNetwork.
	GatewayNetworkId pulumi.StringInput
	// The IP address to give to the machine (IP address).
	IpAddress pulumi.StringInput
	// The MAC address to give a static entry to.
	MacAddress pulumi.StringInput
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone pulumi.StringPtrInput
}

func (PublicGatewayDHCPReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicGatewayDHCPReservationArgs)(nil)).Elem()
}

type PublicGatewayDHCPReservationInput interface {
	pulumi.Input

	ToPublicGatewayDHCPReservationOutput() PublicGatewayDHCPReservationOutput
	ToPublicGatewayDHCPReservationOutputWithContext(ctx context.Context) PublicGatewayDHCPReservationOutput
}

func (*PublicGatewayDHCPReservation) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicGatewayDHCPReservation)(nil)).Elem()
}

func (i *PublicGatewayDHCPReservation) ToPublicGatewayDHCPReservationOutput() PublicGatewayDHCPReservationOutput {
	return i.ToPublicGatewayDHCPReservationOutputWithContext(context.Background())
}

func (i *PublicGatewayDHCPReservation) ToPublicGatewayDHCPReservationOutputWithContext(ctx context.Context) PublicGatewayDHCPReservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicGatewayDHCPReservationOutput)
}

// PublicGatewayDHCPReservationArrayInput is an input type that accepts PublicGatewayDHCPReservationArray and PublicGatewayDHCPReservationArrayOutput values.
// You can construct a concrete instance of `PublicGatewayDHCPReservationArrayInput` via:
//
//	PublicGatewayDHCPReservationArray{ PublicGatewayDHCPReservationArgs{...} }
type PublicGatewayDHCPReservationArrayInput interface {
	pulumi.Input

	ToPublicGatewayDHCPReservationArrayOutput() PublicGatewayDHCPReservationArrayOutput
	ToPublicGatewayDHCPReservationArrayOutputWithContext(context.Context) PublicGatewayDHCPReservationArrayOutput
}

type PublicGatewayDHCPReservationArray []PublicGatewayDHCPReservationInput

func (PublicGatewayDHCPReservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicGatewayDHCPReservation)(nil)).Elem()
}

func (i PublicGatewayDHCPReservationArray) ToPublicGatewayDHCPReservationArrayOutput() PublicGatewayDHCPReservationArrayOutput {
	return i.ToPublicGatewayDHCPReservationArrayOutputWithContext(context.Background())
}

func (i PublicGatewayDHCPReservationArray) ToPublicGatewayDHCPReservationArrayOutputWithContext(ctx context.Context) PublicGatewayDHCPReservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicGatewayDHCPReservationArrayOutput)
}

// PublicGatewayDHCPReservationMapInput is an input type that accepts PublicGatewayDHCPReservationMap and PublicGatewayDHCPReservationMapOutput values.
// You can construct a concrete instance of `PublicGatewayDHCPReservationMapInput` via:
//
//	PublicGatewayDHCPReservationMap{ "key": PublicGatewayDHCPReservationArgs{...} }
type PublicGatewayDHCPReservationMapInput interface {
	pulumi.Input

	ToPublicGatewayDHCPReservationMapOutput() PublicGatewayDHCPReservationMapOutput
	ToPublicGatewayDHCPReservationMapOutputWithContext(context.Context) PublicGatewayDHCPReservationMapOutput
}

type PublicGatewayDHCPReservationMap map[string]PublicGatewayDHCPReservationInput

func (PublicGatewayDHCPReservationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicGatewayDHCPReservation)(nil)).Elem()
}

func (i PublicGatewayDHCPReservationMap) ToPublicGatewayDHCPReservationMapOutput() PublicGatewayDHCPReservationMapOutput {
	return i.ToPublicGatewayDHCPReservationMapOutputWithContext(context.Background())
}

func (i PublicGatewayDHCPReservationMap) ToPublicGatewayDHCPReservationMapOutputWithContext(ctx context.Context) PublicGatewayDHCPReservationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicGatewayDHCPReservationMapOutput)
}

type PublicGatewayDHCPReservationOutput struct{ *pulumi.OutputState }

func (PublicGatewayDHCPReservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicGatewayDHCPReservation)(nil)).Elem()
}

func (o PublicGatewayDHCPReservationOutput) ToPublicGatewayDHCPReservationOutput() PublicGatewayDHCPReservationOutput {
	return o
}

func (o PublicGatewayDHCPReservationOutput) ToPublicGatewayDHCPReservationOutputWithContext(ctx context.Context) PublicGatewayDHCPReservationOutput {
	return o
}

// The date and time of the creation of the public gateway DHCP config.
func (o PublicGatewayDHCPReservationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCPReservation) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the owning GatewayNetwork.
func (o PublicGatewayDHCPReservationOutput) GatewayNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCPReservation) pulumi.StringOutput { return v.GatewayNetworkId }).(pulumi.StringOutput)
}

// The Hostname of the client machine.
func (o PublicGatewayDHCPReservationOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCPReservation) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

// The IP address to give to the machine (IP address).
func (o PublicGatewayDHCPReservationOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCPReservation) pulumi.StringOutput { return v.IpAddress }).(pulumi.StringOutput)
}

// The MAC address to give a static entry to.
func (o PublicGatewayDHCPReservationOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCPReservation) pulumi.StringOutput { return v.MacAddress }).(pulumi.StringOutput)
}

// The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are reservation and lease.
func (o PublicGatewayDHCPReservationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCPReservation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The date and time of the last update of the public gateway DHCP config.
func (o PublicGatewayDHCPReservationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCPReservation) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// `zone`) The zone in which the public gateway DHCP config should be created.
func (o PublicGatewayDHCPReservationOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDHCPReservation) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type PublicGatewayDHCPReservationArrayOutput struct{ *pulumi.OutputState }

func (PublicGatewayDHCPReservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicGatewayDHCPReservation)(nil)).Elem()
}

func (o PublicGatewayDHCPReservationArrayOutput) ToPublicGatewayDHCPReservationArrayOutput() PublicGatewayDHCPReservationArrayOutput {
	return o
}

func (o PublicGatewayDHCPReservationArrayOutput) ToPublicGatewayDHCPReservationArrayOutputWithContext(ctx context.Context) PublicGatewayDHCPReservationArrayOutput {
	return o
}

func (o PublicGatewayDHCPReservationArrayOutput) Index(i pulumi.IntInput) PublicGatewayDHCPReservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PublicGatewayDHCPReservation {
		return vs[0].([]*PublicGatewayDHCPReservation)[vs[1].(int)]
	}).(PublicGatewayDHCPReservationOutput)
}

type PublicGatewayDHCPReservationMapOutput struct{ *pulumi.OutputState }

func (PublicGatewayDHCPReservationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicGatewayDHCPReservation)(nil)).Elem()
}

func (o PublicGatewayDHCPReservationMapOutput) ToPublicGatewayDHCPReservationMapOutput() PublicGatewayDHCPReservationMapOutput {
	return o
}

func (o PublicGatewayDHCPReservationMapOutput) ToPublicGatewayDHCPReservationMapOutputWithContext(ctx context.Context) PublicGatewayDHCPReservationMapOutput {
	return o
}

func (o PublicGatewayDHCPReservationMapOutput) MapIndex(k pulumi.StringInput) PublicGatewayDHCPReservationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PublicGatewayDHCPReservation {
		return vs[0].(map[string]*PublicGatewayDHCPReservation)[vs[1].(string)]
	}).(PublicGatewayDHCPReservationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublicGatewayDHCPReservationInput)(nil)).Elem(), &PublicGatewayDHCPReservation{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicGatewayDHCPReservationArrayInput)(nil)).Elem(), PublicGatewayDHCPReservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicGatewayDHCPReservationMapInput)(nil)).Elem(), PublicGatewayDHCPReservationMap{})
	pulumi.RegisterOutputType(PublicGatewayDHCPReservationOutput{})
	pulumi.RegisterOutputType(PublicGatewayDHCPReservationArrayOutput{})
	pulumi.RegisterOutputType(PublicGatewayDHCPReservationMapOutput{})
}
