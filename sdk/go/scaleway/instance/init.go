// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instance

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "scaleway:instance/iP:IP":
		r = &IP{}
	case "scaleway:instance/iPReverseDNS:IPReverseDNS":
		r = &IPReverseDNS{}
	case "scaleway:instance/image:Image":
		r = &Image{}
	case "scaleway:instance/placementGroup:PlacementGroup":
		r = &PlacementGroup{}
	case "scaleway:instance/privateNIC:PrivateNIC":
		r = &PrivateNIC{}
	case "scaleway:instance/securityGroup:SecurityGroup":
		r = &SecurityGroup{}
	case "scaleway:instance/securityGroupRules:SecurityGroupRules":
		r = &SecurityGroupRules{}
	case "scaleway:instance/server:Server":
		r = &Server{}
	case "scaleway:instance/snapshot:Snapshot":
		r = &Snapshot{}
	case "scaleway:instance/userData:UserData":
		r = &UserData{}
	case "scaleway:instance/volume:Volume":
		r = &Volume{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"scaleway",
		"instance/iP",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"scaleway",
		"instance/iPReverseDNS",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"scaleway",
		"instance/image",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"scaleway",
		"instance/placementGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"scaleway",
		"instance/privateNIC",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"scaleway",
		"instance/securityGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"scaleway",
		"instance/securityGroupRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"scaleway",
		"instance/server",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"scaleway",
		"instance/snapshot",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"scaleway",
		"instance/userData",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"scaleway",
		"instance/volume",
		&module{version},
	)
}
