// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about an existing IAM group. For more information, please
// check [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#applications-83ce5e)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/iam"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.LookupGroup(ctx, &iam.LookupGroupArgs{
//				Name: pulumi.StringRef("foobar"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iam.LookupGroup(ctx, &iam.LookupGroupArgs{
//				GroupId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupGroup(ctx *pulumi.Context, args *LookupGroupArgs, opts ...pulumi.InvokeOption) (*LookupGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGroupResult
	err := ctx.Invoke("scaleway:iam/getGroup:getGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroup.
type LookupGroupArgs struct {
	// The ID of the IAM group.
	// Only one of the `name` and `groupId` should be specified.
	GroupId *string `pulumi:"groupId"`
	// The name of the IAM group.
	// Only one of the `name` and `groupId` should be specified.
	Name *string `pulumi:"name"`
	// `organizationId`) The ID of the
	// organization the group is associated with.
	OrganizationId *string `pulumi:"organizationId"`
}

// A collection of values returned by getGroup.
type LookupGroupResult struct {
	ApplicationIds     []string `pulumi:"applicationIds"`
	CreatedAt          string   `pulumi:"createdAt"`
	Description        string   `pulumi:"description"`
	ExternalMembership bool     `pulumi:"externalMembership"`
	GroupId            *string  `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id             string   `pulumi:"id"`
	Name           *string  `pulumi:"name"`
	OrganizationId *string  `pulumi:"organizationId"`
	Tags           []string `pulumi:"tags"`
	UpdatedAt      string   `pulumi:"updatedAt"`
	UserIds        []string `pulumi:"userIds"`
}

func LookupGroupOutput(ctx *pulumi.Context, args LookupGroupOutputArgs, opts ...pulumi.InvokeOption) LookupGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGroupResult, error) {
			args := v.(LookupGroupArgs)
			r, err := LookupGroup(ctx, &args, opts...)
			var s LookupGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGroupResultOutput)
}

// A collection of arguments for invoking getGroup.
type LookupGroupOutputArgs struct {
	// The ID of the IAM group.
	// Only one of the `name` and `groupId` should be specified.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The name of the IAM group.
	// Only one of the `name` and `groupId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// `organizationId`) The ID of the
	// organization the group is associated with.
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
}

func (LookupGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupArgs)(nil)).Elem()
}

// A collection of values returned by getGroup.
type LookupGroupResultOutput struct{ *pulumi.OutputState }

func (LookupGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupResult)(nil)).Elem()
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutput() LookupGroupResultOutput {
	return o
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutputWithContext(ctx context.Context) LookupGroupResultOutput {
	return o
}

func (o LookupGroupResultOutput) ApplicationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGroupResult) []string { return v.ApplicationIds }).(pulumi.StringArrayOutput)
}

func (o LookupGroupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupGroupResultOutput) ExternalMembership() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.ExternalMembership }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupGroupResultOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

func (o LookupGroupResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGroupResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupGroupResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o LookupGroupResultOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGroupResult) []string { return v.UserIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGroupResultOutput{})
}
