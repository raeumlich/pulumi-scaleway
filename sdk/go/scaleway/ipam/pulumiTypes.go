// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ipam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type IPResource struct {
	// The ID of the resource that the IP is bound to.
	Id *string `pulumi:"id"`
	// The MAC Address of the resource the IP is attached to.
	MacAddress *string `pulumi:"macAddress"`
	// The name of the resource the IP is attached to.
	Name *string `pulumi:"name"`
	// The type of resource the IP is attached to.
	Type *string `pulumi:"type"`
}

// IPResourceInput is an input type that accepts IPResourceArgs and IPResourceOutput values.
// You can construct a concrete instance of `IPResourceInput` via:
//
//	IPResourceArgs{...}
type IPResourceInput interface {
	pulumi.Input

	ToIPResourceOutput() IPResourceOutput
	ToIPResourceOutputWithContext(context.Context) IPResourceOutput
}

type IPResourceArgs struct {
	// The ID of the resource that the IP is bound to.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The MAC Address of the resource the IP is attached to.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// The name of the resource the IP is attached to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of resource the IP is attached to.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IPResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPResource)(nil)).Elem()
}

func (i IPResourceArgs) ToIPResourceOutput() IPResourceOutput {
	return i.ToIPResourceOutputWithContext(context.Background())
}

func (i IPResourceArgs) ToIPResourceOutputWithContext(ctx context.Context) IPResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPResourceOutput)
}

// IPResourceArrayInput is an input type that accepts IPResourceArray and IPResourceArrayOutput values.
// You can construct a concrete instance of `IPResourceArrayInput` via:
//
//	IPResourceArray{ IPResourceArgs{...} }
type IPResourceArrayInput interface {
	pulumi.Input

	ToIPResourceArrayOutput() IPResourceArrayOutput
	ToIPResourceArrayOutputWithContext(context.Context) IPResourceArrayOutput
}

type IPResourceArray []IPResourceInput

func (IPResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPResource)(nil)).Elem()
}

func (i IPResourceArray) ToIPResourceArrayOutput() IPResourceArrayOutput {
	return i.ToIPResourceArrayOutputWithContext(context.Background())
}

func (i IPResourceArray) ToIPResourceArrayOutputWithContext(ctx context.Context) IPResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPResourceArrayOutput)
}

type IPResourceOutput struct{ *pulumi.OutputState }

func (IPResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPResource)(nil)).Elem()
}

func (o IPResourceOutput) ToIPResourceOutput() IPResourceOutput {
	return o
}

func (o IPResourceOutput) ToIPResourceOutputWithContext(ctx context.Context) IPResourceOutput {
	return o
}

// The ID of the resource that the IP is bound to.
func (o IPResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The MAC Address of the resource the IP is attached to.
func (o IPResourceOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPResource) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// The name of the resource the IP is attached to.
func (o IPResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of resource the IP is attached to.
func (o IPResourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPResource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IPResourceArrayOutput struct{ *pulumi.OutputState }

func (IPResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPResource)(nil)).Elem()
}

func (o IPResourceArrayOutput) ToIPResourceArrayOutput() IPResourceArrayOutput {
	return o
}

func (o IPResourceArrayOutput) ToIPResourceArrayOutputWithContext(ctx context.Context) IPResourceArrayOutput {
	return o
}

func (o IPResourceArrayOutput) Index(i pulumi.IntInput) IPResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPResource {
		return vs[0].([]IPResource)[vs[1].(int)]
	}).(IPResourceOutput)
}

type IPSource struct {
	// The private network the IP lives in if the IP is a private IP.
	PrivateNetworkId *string `pulumi:"privateNetworkId"`
	// The private network subnet the IP lives in if the IP is a private IP in a private network.
	SubnetId *string `pulumi:"subnetId"`
	// The zone the IP lives in if the IP is a public zoned one
	Zonal *string `pulumi:"zonal"`
}

// IPSourceInput is an input type that accepts IPSourceArgs and IPSourceOutput values.
// You can construct a concrete instance of `IPSourceInput` via:
//
//	IPSourceArgs{...}
type IPSourceInput interface {
	pulumi.Input

	ToIPSourceOutput() IPSourceOutput
	ToIPSourceOutputWithContext(context.Context) IPSourceOutput
}

type IPSourceArgs struct {
	// The private network the IP lives in if the IP is a private IP.
	PrivateNetworkId pulumi.StringPtrInput `pulumi:"privateNetworkId"`
	// The private network subnet the IP lives in if the IP is a private IP in a private network.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The zone the IP lives in if the IP is a public zoned one
	Zonal pulumi.StringPtrInput `pulumi:"zonal"`
}

func (IPSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPSource)(nil)).Elem()
}

func (i IPSourceArgs) ToIPSourceOutput() IPSourceOutput {
	return i.ToIPSourceOutputWithContext(context.Background())
}

func (i IPSourceArgs) ToIPSourceOutputWithContext(ctx context.Context) IPSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSourceOutput)
}

// IPSourceArrayInput is an input type that accepts IPSourceArray and IPSourceArrayOutput values.
// You can construct a concrete instance of `IPSourceArrayInput` via:
//
//	IPSourceArray{ IPSourceArgs{...} }
type IPSourceArrayInput interface {
	pulumi.Input

	ToIPSourceArrayOutput() IPSourceArrayOutput
	ToIPSourceArrayOutputWithContext(context.Context) IPSourceArrayOutput
}

type IPSourceArray []IPSourceInput

func (IPSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPSource)(nil)).Elem()
}

func (i IPSourceArray) ToIPSourceArrayOutput() IPSourceArrayOutput {
	return i.ToIPSourceArrayOutputWithContext(context.Background())
}

func (i IPSourceArray) ToIPSourceArrayOutputWithContext(ctx context.Context) IPSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSourceArrayOutput)
}

type IPSourceOutput struct{ *pulumi.OutputState }

func (IPSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPSource)(nil)).Elem()
}

func (o IPSourceOutput) ToIPSourceOutput() IPSourceOutput {
	return o
}

func (o IPSourceOutput) ToIPSourceOutputWithContext(ctx context.Context) IPSourceOutput {
	return o
}

// The private network the IP lives in if the IP is a private IP.
func (o IPSourceOutput) PrivateNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPSource) *string { return v.PrivateNetworkId }).(pulumi.StringPtrOutput)
}

// The private network subnet the IP lives in if the IP is a private IP in a private network.
func (o IPSourceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPSource) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The zone the IP lives in if the IP is a public zoned one
func (o IPSourceOutput) Zonal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPSource) *string { return v.Zonal }).(pulumi.StringPtrOutput)
}

type IPSourceArrayOutput struct{ *pulumi.OutputState }

func (IPSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPSource)(nil)).Elem()
}

func (o IPSourceArrayOutput) ToIPSourceArrayOutput() IPSourceArrayOutput {
	return o
}

func (o IPSourceArrayOutput) ToIPSourceArrayOutputWithContext(ctx context.Context) IPSourceArrayOutput {
	return o
}

func (o IPSourceArrayOutput) Index(i pulumi.IntInput) IPSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPSource {
		return vs[0].([]IPSource)[vs[1].(int)]
	}).(IPSourceOutput)
}

type GetIPResource struct {
	// The ID of the resource that the IP is bound to.
	Id *string `pulumi:"id"`
	// The name of the resource to get the IP from.
	Name *string `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type string `pulumi:"type"`
}

// GetIPResourceInput is an input type that accepts GetIPResourceArgs and GetIPResourceOutput values.
// You can construct a concrete instance of `GetIPResourceInput` via:
//
//	GetIPResourceArgs{...}
type GetIPResourceInput interface {
	pulumi.Input

	ToGetIPResourceOutput() GetIPResourceOutput
	ToGetIPResourceOutputWithContext(context.Context) GetIPResourceOutput
}

type GetIPResourceArgs struct {
	// The ID of the resource that the IP is bound to.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource to get the IP from.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetIPResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPResource)(nil)).Elem()
}

func (i GetIPResourceArgs) ToGetIPResourceOutput() GetIPResourceOutput {
	return i.ToGetIPResourceOutputWithContext(context.Background())
}

func (i GetIPResourceArgs) ToGetIPResourceOutputWithContext(ctx context.Context) GetIPResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIPResourceOutput)
}

func (i GetIPResourceArgs) ToGetIPResourcePtrOutput() GetIPResourcePtrOutput {
	return i.ToGetIPResourcePtrOutputWithContext(context.Background())
}

func (i GetIPResourceArgs) ToGetIPResourcePtrOutputWithContext(ctx context.Context) GetIPResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIPResourceOutput).ToGetIPResourcePtrOutputWithContext(ctx)
}

// GetIPResourcePtrInput is an input type that accepts GetIPResourceArgs, GetIPResourcePtr and GetIPResourcePtrOutput values.
// You can construct a concrete instance of `GetIPResourcePtrInput` via:
//
//	        GetIPResourceArgs{...}
//
//	or:
//
//	        nil
type GetIPResourcePtrInput interface {
	pulumi.Input

	ToGetIPResourcePtrOutput() GetIPResourcePtrOutput
	ToGetIPResourcePtrOutputWithContext(context.Context) GetIPResourcePtrOutput
}

type getIPResourcePtrType GetIPResourceArgs

func GetIPResourcePtr(v *GetIPResourceArgs) GetIPResourcePtrInput {
	return (*getIPResourcePtrType)(v)
}

func (*getIPResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIPResource)(nil)).Elem()
}

func (i *getIPResourcePtrType) ToGetIPResourcePtrOutput() GetIPResourcePtrOutput {
	return i.ToGetIPResourcePtrOutputWithContext(context.Background())
}

func (i *getIPResourcePtrType) ToGetIPResourcePtrOutputWithContext(ctx context.Context) GetIPResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIPResourcePtrOutput)
}

type GetIPResourceOutput struct{ *pulumi.OutputState }

func (GetIPResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPResource)(nil)).Elem()
}

func (o GetIPResourceOutput) ToGetIPResourceOutput() GetIPResourceOutput {
	return o
}

func (o GetIPResourceOutput) ToGetIPResourceOutputWithContext(ctx context.Context) GetIPResourceOutput {
	return o
}

func (o GetIPResourceOutput) ToGetIPResourcePtrOutput() GetIPResourcePtrOutput {
	return o.ToGetIPResourcePtrOutputWithContext(context.Background())
}

func (o GetIPResourceOutput) ToGetIPResourcePtrOutputWithContext(ctx context.Context) GetIPResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetIPResource) *GetIPResource {
		return &v
	}).(GetIPResourcePtrOutput)
}

// The ID of the resource that the IP is bound to.
func (o GetIPResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIPResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource to get the IP from.
func (o GetIPResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIPResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
func (o GetIPResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetIPResourcePtrOutput struct{ *pulumi.OutputState }

func (GetIPResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIPResource)(nil)).Elem()
}

func (o GetIPResourcePtrOutput) ToGetIPResourcePtrOutput() GetIPResourcePtrOutput {
	return o
}

func (o GetIPResourcePtrOutput) ToGetIPResourcePtrOutputWithContext(ctx context.Context) GetIPResourcePtrOutput {
	return o
}

func (o GetIPResourcePtrOutput) Elem() GetIPResourceOutput {
	return o.ApplyT(func(v *GetIPResource) GetIPResource {
		if v != nil {
			return *v
		}
		var ret GetIPResource
		return ret
	}).(GetIPResourceOutput)
}

// The ID of the resource that the IP is bound to.
func (o GetIPResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIPResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource to get the IP from.
func (o GetIPResourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIPResource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
func (o GetIPResourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIPResource) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GetIPsIp struct {
	// The Scaleway internal IP address of the server.
	Address string `pulumi:"address"`
	// The date and time of the creation of the IP.
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the resource that the IP is bound to.
	Id string `pulumi:"id"`
	// The ID of the project used as filter.
	ProjectId string `pulumi:"projectId"`
	// The region used as filter.
	Region string `pulumi:"region"`
	// Filter by resource ID, type or name.
	Resources []GetIPsIpResource `pulumi:"resources"`
	// The tags used as filter.
	Tags []string `pulumi:"tags"`
	// The date and time of the last update of the IP.
	UpdatedAt string `pulumi:"updatedAt"`
	// The zone in which the IP is.
	Zone string `pulumi:"zone"`
}

// GetIPsIpInput is an input type that accepts GetIPsIpArgs and GetIPsIpOutput values.
// You can construct a concrete instance of `GetIPsIpInput` via:
//
//	GetIPsIpArgs{...}
type GetIPsIpInput interface {
	pulumi.Input

	ToGetIPsIpOutput() GetIPsIpOutput
	ToGetIPsIpOutputWithContext(context.Context) GetIPsIpOutput
}

type GetIPsIpArgs struct {
	// The Scaleway internal IP address of the server.
	Address pulumi.StringInput `pulumi:"address"`
	// The date and time of the creation of the IP.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the resource that the IP is bound to.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the project used as filter.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The region used as filter.
	Region pulumi.StringInput `pulumi:"region"`
	// Filter by resource ID, type or name.
	Resources GetIPsIpResourceArrayInput `pulumi:"resources"`
	// The tags used as filter.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The date and time of the last update of the IP.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The zone in which the IP is.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetIPsIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPsIp)(nil)).Elem()
}

func (i GetIPsIpArgs) ToGetIPsIpOutput() GetIPsIpOutput {
	return i.ToGetIPsIpOutputWithContext(context.Background())
}

func (i GetIPsIpArgs) ToGetIPsIpOutputWithContext(ctx context.Context) GetIPsIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIPsIpOutput)
}

// GetIPsIpArrayInput is an input type that accepts GetIPsIpArray and GetIPsIpArrayOutput values.
// You can construct a concrete instance of `GetIPsIpArrayInput` via:
//
//	GetIPsIpArray{ GetIPsIpArgs{...} }
type GetIPsIpArrayInput interface {
	pulumi.Input

	ToGetIPsIpArrayOutput() GetIPsIpArrayOutput
	ToGetIPsIpArrayOutputWithContext(context.Context) GetIPsIpArrayOutput
}

type GetIPsIpArray []GetIPsIpInput

func (GetIPsIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIPsIp)(nil)).Elem()
}

func (i GetIPsIpArray) ToGetIPsIpArrayOutput() GetIPsIpArrayOutput {
	return i.ToGetIPsIpArrayOutputWithContext(context.Background())
}

func (i GetIPsIpArray) ToGetIPsIpArrayOutputWithContext(ctx context.Context) GetIPsIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIPsIpArrayOutput)
}

type GetIPsIpOutput struct{ *pulumi.OutputState }

func (GetIPsIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPsIp)(nil)).Elem()
}

func (o GetIPsIpOutput) ToGetIPsIpOutput() GetIPsIpOutput {
	return o
}

func (o GetIPsIpOutput) ToGetIPsIpOutputWithContext(ctx context.Context) GetIPsIpOutput {
	return o
}

// The Scaleway internal IP address of the server.
func (o GetIPsIpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsIp) string { return v.Address }).(pulumi.StringOutput)
}

// The date and time of the creation of the IP.
func (o GetIPsIpOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsIp) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the resource that the IP is bound to.
func (o GetIPsIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsIp) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the project used as filter.
func (o GetIPsIpOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsIp) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The region used as filter.
func (o GetIPsIpOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsIp) string { return v.Region }).(pulumi.StringOutput)
}

// Filter by resource ID, type or name.
func (o GetIPsIpOutput) Resources() GetIPsIpResourceArrayOutput {
	return o.ApplyT(func(v GetIPsIp) []GetIPsIpResource { return v.Resources }).(GetIPsIpResourceArrayOutput)
}

// The tags used as filter.
func (o GetIPsIpOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIPsIp) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The date and time of the last update of the IP.
func (o GetIPsIpOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsIp) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The zone in which the IP is.
func (o GetIPsIpOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsIp) string { return v.Zone }).(pulumi.StringOutput)
}

type GetIPsIpArrayOutput struct{ *pulumi.OutputState }

func (GetIPsIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIPsIp)(nil)).Elem()
}

func (o GetIPsIpArrayOutput) ToGetIPsIpArrayOutput() GetIPsIpArrayOutput {
	return o
}

func (o GetIPsIpArrayOutput) ToGetIPsIpArrayOutputWithContext(ctx context.Context) GetIPsIpArrayOutput {
	return o
}

func (o GetIPsIpArrayOutput) Index(i pulumi.IntInput) GetIPsIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIPsIp {
		return vs[0].([]GetIPsIp)[vs[1].(int)]
	}).(GetIPsIpOutput)
}

type GetIPsIpResource struct {
	// The ID of the resource that the IP is bound to.
	Id string `pulumi:"id"`
	// The Mac Address used as filter.
	MacAddress string `pulumi:"macAddress"`
	// The name of the resource to get the IP from.
	Name string `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type string `pulumi:"type"`
}

// GetIPsIpResourceInput is an input type that accepts GetIPsIpResourceArgs and GetIPsIpResourceOutput values.
// You can construct a concrete instance of `GetIPsIpResourceInput` via:
//
//	GetIPsIpResourceArgs{...}
type GetIPsIpResourceInput interface {
	pulumi.Input

	ToGetIPsIpResourceOutput() GetIPsIpResourceOutput
	ToGetIPsIpResourceOutputWithContext(context.Context) GetIPsIpResourceOutput
}

type GetIPsIpResourceArgs struct {
	// The ID of the resource that the IP is bound to.
	Id pulumi.StringInput `pulumi:"id"`
	// The Mac Address used as filter.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The name of the resource to get the IP from.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetIPsIpResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPsIpResource)(nil)).Elem()
}

func (i GetIPsIpResourceArgs) ToGetIPsIpResourceOutput() GetIPsIpResourceOutput {
	return i.ToGetIPsIpResourceOutputWithContext(context.Background())
}

func (i GetIPsIpResourceArgs) ToGetIPsIpResourceOutputWithContext(ctx context.Context) GetIPsIpResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIPsIpResourceOutput)
}

// GetIPsIpResourceArrayInput is an input type that accepts GetIPsIpResourceArray and GetIPsIpResourceArrayOutput values.
// You can construct a concrete instance of `GetIPsIpResourceArrayInput` via:
//
//	GetIPsIpResourceArray{ GetIPsIpResourceArgs{...} }
type GetIPsIpResourceArrayInput interface {
	pulumi.Input

	ToGetIPsIpResourceArrayOutput() GetIPsIpResourceArrayOutput
	ToGetIPsIpResourceArrayOutputWithContext(context.Context) GetIPsIpResourceArrayOutput
}

type GetIPsIpResourceArray []GetIPsIpResourceInput

func (GetIPsIpResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIPsIpResource)(nil)).Elem()
}

func (i GetIPsIpResourceArray) ToGetIPsIpResourceArrayOutput() GetIPsIpResourceArrayOutput {
	return i.ToGetIPsIpResourceArrayOutputWithContext(context.Background())
}

func (i GetIPsIpResourceArray) ToGetIPsIpResourceArrayOutputWithContext(ctx context.Context) GetIPsIpResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIPsIpResourceArrayOutput)
}

type GetIPsIpResourceOutput struct{ *pulumi.OutputState }

func (GetIPsIpResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPsIpResource)(nil)).Elem()
}

func (o GetIPsIpResourceOutput) ToGetIPsIpResourceOutput() GetIPsIpResourceOutput {
	return o
}

func (o GetIPsIpResourceOutput) ToGetIPsIpResourceOutputWithContext(ctx context.Context) GetIPsIpResourceOutput {
	return o
}

// The ID of the resource that the IP is bound to.
func (o GetIPsIpResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsIpResource) string { return v.Id }).(pulumi.StringOutput)
}

// The Mac Address used as filter.
func (o GetIPsIpResourceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsIpResource) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The name of the resource to get the IP from.
func (o GetIPsIpResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsIpResource) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
func (o GetIPsIpResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsIpResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetIPsIpResourceArrayOutput struct{ *pulumi.OutputState }

func (GetIPsIpResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIPsIpResource)(nil)).Elem()
}

func (o GetIPsIpResourceArrayOutput) ToGetIPsIpResourceArrayOutput() GetIPsIpResourceArrayOutput {
	return o
}

func (o GetIPsIpResourceArrayOutput) ToGetIPsIpResourceArrayOutputWithContext(ctx context.Context) GetIPsIpResourceArrayOutput {
	return o
}

func (o GetIPsIpResourceArrayOutput) Index(i pulumi.IntInput) GetIPsIpResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIPsIpResource {
		return vs[0].([]GetIPsIpResource)[vs[1].(int)]
	}).(GetIPsIpResourceOutput)
}

type GetIPsResource struct {
	// The ID of the resource that the IP is bound to.
	Id *string `pulumi:"id"`
	// The name of the resource to get the IP from.
	Name *string `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type string `pulumi:"type"`
}

// GetIPsResourceInput is an input type that accepts GetIPsResourceArgs and GetIPsResourceOutput values.
// You can construct a concrete instance of `GetIPsResourceInput` via:
//
//	GetIPsResourceArgs{...}
type GetIPsResourceInput interface {
	pulumi.Input

	ToGetIPsResourceOutput() GetIPsResourceOutput
	ToGetIPsResourceOutputWithContext(context.Context) GetIPsResourceOutput
}

type GetIPsResourceArgs struct {
	// The ID of the resource that the IP is bound to.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource to get the IP from.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetIPsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPsResource)(nil)).Elem()
}

func (i GetIPsResourceArgs) ToGetIPsResourceOutput() GetIPsResourceOutput {
	return i.ToGetIPsResourceOutputWithContext(context.Background())
}

func (i GetIPsResourceArgs) ToGetIPsResourceOutputWithContext(ctx context.Context) GetIPsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIPsResourceOutput)
}

func (i GetIPsResourceArgs) ToGetIPsResourcePtrOutput() GetIPsResourcePtrOutput {
	return i.ToGetIPsResourcePtrOutputWithContext(context.Background())
}

func (i GetIPsResourceArgs) ToGetIPsResourcePtrOutputWithContext(ctx context.Context) GetIPsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIPsResourceOutput).ToGetIPsResourcePtrOutputWithContext(ctx)
}

// GetIPsResourcePtrInput is an input type that accepts GetIPsResourceArgs, GetIPsResourcePtr and GetIPsResourcePtrOutput values.
// You can construct a concrete instance of `GetIPsResourcePtrInput` via:
//
//	        GetIPsResourceArgs{...}
//
//	or:
//
//	        nil
type GetIPsResourcePtrInput interface {
	pulumi.Input

	ToGetIPsResourcePtrOutput() GetIPsResourcePtrOutput
	ToGetIPsResourcePtrOutputWithContext(context.Context) GetIPsResourcePtrOutput
}

type getIPsResourcePtrType GetIPsResourceArgs

func GetIPsResourcePtr(v *GetIPsResourceArgs) GetIPsResourcePtrInput {
	return (*getIPsResourcePtrType)(v)
}

func (*getIPsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIPsResource)(nil)).Elem()
}

func (i *getIPsResourcePtrType) ToGetIPsResourcePtrOutput() GetIPsResourcePtrOutput {
	return i.ToGetIPsResourcePtrOutputWithContext(context.Background())
}

func (i *getIPsResourcePtrType) ToGetIPsResourcePtrOutputWithContext(ctx context.Context) GetIPsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIPsResourcePtrOutput)
}

type GetIPsResourceOutput struct{ *pulumi.OutputState }

func (GetIPsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPsResource)(nil)).Elem()
}

func (o GetIPsResourceOutput) ToGetIPsResourceOutput() GetIPsResourceOutput {
	return o
}

func (o GetIPsResourceOutput) ToGetIPsResourceOutputWithContext(ctx context.Context) GetIPsResourceOutput {
	return o
}

func (o GetIPsResourceOutput) ToGetIPsResourcePtrOutput() GetIPsResourcePtrOutput {
	return o.ToGetIPsResourcePtrOutputWithContext(context.Background())
}

func (o GetIPsResourceOutput) ToGetIPsResourcePtrOutputWithContext(ctx context.Context) GetIPsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetIPsResource) *GetIPsResource {
		return &v
	}).(GetIPsResourcePtrOutput)
}

// The ID of the resource that the IP is bound to.
func (o GetIPsResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIPsResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource to get the IP from.
func (o GetIPsResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIPsResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
func (o GetIPsResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPsResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetIPsResourcePtrOutput struct{ *pulumi.OutputState }

func (GetIPsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIPsResource)(nil)).Elem()
}

func (o GetIPsResourcePtrOutput) ToGetIPsResourcePtrOutput() GetIPsResourcePtrOutput {
	return o
}

func (o GetIPsResourcePtrOutput) ToGetIPsResourcePtrOutputWithContext(ctx context.Context) GetIPsResourcePtrOutput {
	return o
}

func (o GetIPsResourcePtrOutput) Elem() GetIPsResourceOutput {
	return o.ApplyT(func(v *GetIPsResource) GetIPsResource {
		if v != nil {
			return *v
		}
		var ret GetIPsResource
		return ret
	}).(GetIPsResourceOutput)
}

// The ID of the resource that the IP is bound to.
func (o GetIPsResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIPsResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource to get the IP from.
func (o GetIPsResourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIPsResource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
func (o GetIPsResourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIPsResource) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IPResourceInput)(nil)).Elem(), IPResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPResourceArrayInput)(nil)).Elem(), IPResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPSourceInput)(nil)).Elem(), IPSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPSourceArrayInput)(nil)).Elem(), IPSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIPResourceInput)(nil)).Elem(), GetIPResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIPResourcePtrInput)(nil)).Elem(), GetIPResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIPsIpInput)(nil)).Elem(), GetIPsIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIPsIpArrayInput)(nil)).Elem(), GetIPsIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIPsIpResourceInput)(nil)).Elem(), GetIPsIpResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIPsIpResourceArrayInput)(nil)).Elem(), GetIPsIpResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIPsResourceInput)(nil)).Elem(), GetIPsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIPsResourcePtrInput)(nil)).Elem(), GetIPsResourceArgs{})
	pulumi.RegisterOutputType(IPResourceOutput{})
	pulumi.RegisterOutputType(IPResourceArrayOutput{})
	pulumi.RegisterOutputType(IPSourceOutput{})
	pulumi.RegisterOutputType(IPSourceArrayOutput{})
	pulumi.RegisterOutputType(GetIPResourceOutput{})
	pulumi.RegisterOutputType(GetIPResourcePtrOutput{})
	pulumi.RegisterOutputType(GetIPsIpOutput{})
	pulumi.RegisterOutputType(GetIPsIpArrayOutput{})
	pulumi.RegisterOutputType(GetIPsIpResourceOutput{})
	pulumi.RegisterOutputType(GetIPsIpResourceArrayOutput{})
	pulumi.RegisterOutputType(GetIPsResourceOutput{})
	pulumi.RegisterOutputType(GetIPsResourcePtrOutput{})
}
