// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerregistry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a registry image.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/containerregistry"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := containerregistry.GetImage(ctx, &containerregistry.GetImageArgs{
//				ImageId:     pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//				NamespaceId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetImage(ctx *pulumi.Context, args *GetImageArgs, opts ...pulumi.InvokeOption) (*GetImageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetImageResult
	err := ctx.Invoke("scaleway:containerregistry/getImage:getImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImage.
type GetImageArgs struct {
	// The image ID.
	// Only one of `name` and `imageId` should be specified.
	ImageId *string `pulumi:"imageId"`
	// The image name.
	// Only one of `name` and `imageId` should be specified.
	Name *string `pulumi:"name"`
	// The namespace ID in which the image is.
	NamespaceId *string `pulumi:"namespaceId"`
	// `projectId`) The ID of the project the image is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `region`) The region in which the image exists.
	Region *string `pulumi:"region"`
	// The tags associated with the registry image
	Tags []string `pulumi:"tags"`
}

// A collection of values returned by getImage.
type GetImageResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	ImageId     *string `pulumi:"imageId"`
	Name        *string `pulumi:"name"`
	NamespaceId string  `pulumi:"namespaceId"`
	// The organization ID the image is associated with.
	OrganizationId string `pulumi:"organizationId"`
	ProjectId      string `pulumi:"projectId"`
	Region         string `pulumi:"region"`
	// The size of the registry image.
	Size int `pulumi:"size"`
	// The tags associated with the registry image
	Tags []string `pulumi:"tags"`
	// The date the image of the last update
	UpdatedAt string `pulumi:"updatedAt"`
	// The privacy policy of the registry image.
	Visibility string `pulumi:"visibility"`
}

func GetImageOutput(ctx *pulumi.Context, args GetImageOutputArgs, opts ...pulumi.InvokeOption) GetImageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetImageResult, error) {
			args := v.(GetImageArgs)
			r, err := GetImage(ctx, &args, opts...)
			var s GetImageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetImageResultOutput)
}

// A collection of arguments for invoking getImage.
type GetImageOutputArgs struct {
	// The image ID.
	// Only one of `name` and `imageId` should be specified.
	ImageId pulumi.StringPtrInput `pulumi:"imageId"`
	// The image name.
	// Only one of `name` and `imageId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace ID in which the image is.
	NamespaceId pulumi.StringPtrInput `pulumi:"namespaceId"`
	// `projectId`) The ID of the project the image is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `region`) The region in which the image exists.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The tags associated with the registry image
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageArgs)(nil)).Elem()
}

// A collection of values returned by getImage.
type GetImageResultOutput struct{ *pulumi.OutputState }

func (GetImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageResult)(nil)).Elem()
}

func (o GetImageResultOutput) ToGetImageResultOutput() GetImageResultOutput {
	return o
}

func (o GetImageResultOutput) ToGetImageResultOutputWithContext(ctx context.Context) GetImageResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetImageResultOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImageResult) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

func (o GetImageResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImageResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetImageResultOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageResult) string { return v.NamespaceId }).(pulumi.StringOutput)
}

// The organization ID the image is associated with.
func (o GetImageResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o GetImageResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetImageResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageResult) string { return v.Region }).(pulumi.StringOutput)
}

// The size of the registry image.
func (o GetImageResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageResult) int { return v.Size }).(pulumi.IntOutput)
}

// The tags associated with the registry image
func (o GetImageResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImageResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The date the image of the last update
func (o GetImageResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The privacy policy of the registry image.
func (o GetImageResultOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageResult) string { return v.Visibility }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImageResultOutput{})
}
