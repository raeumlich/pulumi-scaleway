// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loadbalancer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about multiple Load Balancers.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/loadbalancer"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loadbalancer.GetLoadBalancers(ctx, &loadbalancer.GetLoadBalancersArgs{
//				Name: pulumi.StringRef("foobar"),
//				Zone: pulumi.StringRef("fr-par-2"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetLoadBalancers(ctx *pulumi.Context, args *GetLoadBalancersArgs, opts ...pulumi.InvokeOption) (*GetLoadBalancersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLoadBalancersResult
	err := ctx.Invoke("scaleway:loadbalancer/getLoadBalancers:getLoadBalancers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadBalancers.
type GetLoadBalancersArgs struct {
	// The load balancer name used as a filter. LBs with a name like it are listed.
	Name *string `pulumi:"name"`
	// The ID of the project the load-balancer is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `zone`) The zone in which LBs exist.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getLoadBalancers.
type GetLoadBalancersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of found LBs
	Lbs []GetLoadBalancersLb `pulumi:"lbs"`
	// The name of the load-balancer.
	Name *string `pulumi:"name"`
	// The organization ID the load-balancer is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The ID of the project the load-balancer is associated with.
	ProjectId string `pulumi:"projectId"`
	// The zone in which the load-balancer is.
	Zone string `pulumi:"zone"`
}

func GetLoadBalancersOutput(ctx *pulumi.Context, args GetLoadBalancersOutputArgs, opts ...pulumi.InvokeOption) GetLoadBalancersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLoadBalancersResult, error) {
			args := v.(GetLoadBalancersArgs)
			r, err := GetLoadBalancers(ctx, &args, opts...)
			var s GetLoadBalancersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLoadBalancersResultOutput)
}

// A collection of arguments for invoking getLoadBalancers.
type GetLoadBalancersOutputArgs struct {
	// The load balancer name used as a filter. LBs with a name like it are listed.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the project the load-balancer is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `zone`) The zone in which LBs exist.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GetLoadBalancersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersArgs)(nil)).Elem()
}

// A collection of values returned by getLoadBalancers.
type GetLoadBalancersResultOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersResult)(nil)).Elem()
}

func (o GetLoadBalancersResultOutput) ToGetLoadBalancersResultOutput() GetLoadBalancersResultOutput {
	return o
}

func (o GetLoadBalancersResultOutput) ToGetLoadBalancersResultOutputWithContext(ctx context.Context) GetLoadBalancersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetLoadBalancersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of found LBs
func (o GetLoadBalancersResultOutput) Lbs() GetLoadBalancersLbArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersResult) []GetLoadBalancersLb { return v.Lbs }).(GetLoadBalancersLbArrayOutput)
}

// The name of the load-balancer.
func (o GetLoadBalancersResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLoadBalancersResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The organization ID the load-balancer is associated with.
func (o GetLoadBalancersResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The ID of the project the load-balancer is associated with.
func (o GetLoadBalancersResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The zone in which the load-balancer is.
func (o GetLoadBalancersResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLoadBalancersResultOutput{})
}
