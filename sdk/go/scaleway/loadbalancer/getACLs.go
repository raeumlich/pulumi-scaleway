// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loadbalancer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about multiple Load Balancer ACLs.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/loadbalancer"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loadbalancer.GetACLs(ctx, &loadbalancer.GetACLsArgs{
//				FrontendId: scaleway_lb_frontend.Frt01.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = loadbalancer.GetACLs(ctx, &loadbalancer.GetACLsArgs{
//				FrontendId: scaleway_lb_frontend.Frt01.Id,
//				Name:       pulumi.StringRef("tf-acls-datasource"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetACLs(ctx *pulumi.Context, args *GetACLsArgs, opts ...pulumi.InvokeOption) (*GetACLsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetACLsResult
	err := ctx.Invoke("scaleway:loadbalancer/getACLs:getACLs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getACLs.
type GetACLsArgs struct {
	// The frontend ID this ACL is attached to. ACLs with a frontend ID like it are listed.
	// > **Important:** LB Frontends' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	FrontendId string `pulumi:"frontendId"`
	// The ACL name used as filter. ACLs with a name like it are listed.
	Name      *string `pulumi:"name"`
	ProjectId *string `pulumi:"projectId"`
	// `zone`) The zone in which ACLs exist.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getACLs.
type GetACLsResult struct {
	// List of found ACLs
	Acls       []GetACLsAcl `pulumi:"acls"`
	FrontendId string       `pulumi:"frontendId"`
	// The provider-assigned unique ID for this managed resource.
	Id             string  `pulumi:"id"`
	Name           *string `pulumi:"name"`
	OrganizationId string  `pulumi:"organizationId"`
	ProjectId      string  `pulumi:"projectId"`
	Zone           string  `pulumi:"zone"`
}

func GetACLsOutput(ctx *pulumi.Context, args GetACLsOutputArgs, opts ...pulumi.InvokeOption) GetACLsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetACLsResult, error) {
			args := v.(GetACLsArgs)
			r, err := GetACLs(ctx, &args, opts...)
			var s GetACLsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetACLsResultOutput)
}

// A collection of arguments for invoking getACLs.
type GetACLsOutputArgs struct {
	// The frontend ID this ACL is attached to. ACLs with a frontend ID like it are listed.
	// > **Important:** LB Frontends' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	FrontendId pulumi.StringInput `pulumi:"frontendId"`
	// The ACL name used as filter. ACLs with a name like it are listed.
	Name      pulumi.StringPtrInput `pulumi:"name"`
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `zone`) The zone in which ACLs exist.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GetACLsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetACLsArgs)(nil)).Elem()
}

// A collection of values returned by getACLs.
type GetACLsResultOutput struct{ *pulumi.OutputState }

func (GetACLsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetACLsResult)(nil)).Elem()
}

func (o GetACLsResultOutput) ToGetACLsResultOutput() GetACLsResultOutput {
	return o
}

func (o GetACLsResultOutput) ToGetACLsResultOutputWithContext(ctx context.Context) GetACLsResultOutput {
	return o
}

// List of found ACLs
func (o GetACLsResultOutput) Acls() GetACLsAclArrayOutput {
	return o.ApplyT(func(v GetACLsResult) []GetACLsAcl { return v.Acls }).(GetACLsAclArrayOutput)
}

func (o GetACLsResultOutput) FrontendId() pulumi.StringOutput {
	return o.ApplyT(func(v GetACLsResult) string { return v.FrontendId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetACLsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetACLsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetACLsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetACLsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetACLsResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetACLsResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o GetACLsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetACLsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetACLsResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetACLsResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetACLsResultOutput{})
}
