// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package documentdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about an DocumentDB instance. For further information see our [developers website](https://www.scaleway.com/en/developers/api/document_db/)
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/raeumlich/pulumi-scaleway/sdk/go/scaleway/documentdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := documentdb.LookupInstance(ctx, &documentdb.LookupInstanceArgs{
//				InstanceId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("scaleway:documentdb/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type LookupInstanceArgs struct {
	// The DocumentDB instance ID.
	// Only one of `name` and `instanceId` should be specified.
	InstanceId *string `pulumi:"instanceId"`
	// The name of the DocumentDB instance.
	// Only one of `name` and `instanceId` should be specified.
	Name *string `pulumi:"name"`
	// The ID of the project the DocumentDB instance is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `region`) The region in which the DocumentDB instance exists.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getInstance.
type LookupInstanceResult struct {
	Engine string `pulumi:"engine"`
	// The provider-assigned unique ID for this managed resource.
	Id               string   `pulumi:"id"`
	InstanceId       *string  `pulumi:"instanceId"`
	IsHaCluster      bool     `pulumi:"isHaCluster"`
	Name             *string  `pulumi:"name"`
	NodeType         string   `pulumi:"nodeType"`
	Password         string   `pulumi:"password"`
	ProjectId        *string  `pulumi:"projectId"`
	Region           *string  `pulumi:"region"`
	Tags             []string `pulumi:"tags"`
	TelemetryEnabled bool     `pulumi:"telemetryEnabled"`
	UserName         string   `pulumi:"userName"`
	VolumeSizeInGb   int      `pulumi:"volumeSizeInGb"`
	VolumeType       string   `pulumi:"volumeType"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstanceResult, error) {
			args := v.(LookupInstanceArgs)
			r, err := LookupInstance(ctx, &args, opts...)
			var s LookupInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstanceResultOutput)
}

// A collection of arguments for invoking getInstance.
type LookupInstanceOutputArgs struct {
	// The DocumentDB instance ID.
	// Only one of `name` and `instanceId` should be specified.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The name of the DocumentDB instance.
	// Only one of `name` and `instanceId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the project the DocumentDB instance is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `region`) The region in which the DocumentDB instance exists.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstance.
type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Engine }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) IsHaCluster() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.IsHaCluster }).(pulumi.BoolOutput)
}

func (o LookupInstanceResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.NodeType }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Password }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupInstanceResultOutput) TelemetryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.TelemetryEnabled }).(pulumi.BoolOutput)
}

func (o LookupInstanceResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.UserName }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) VolumeSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstanceResult) int { return v.VolumeSizeInGb }).(pulumi.IntOutput)
}

func (o LookupInstanceResultOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.VolumeType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
