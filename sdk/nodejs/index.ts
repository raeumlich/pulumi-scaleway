// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { IpamIpReverseDnsArgs, IpamIpReverseDnsState } from "./ipamIpReverseDns";
export type IpamIpReverseDns = import("./ipamIpReverseDns").IpamIpReverseDns;
export const IpamIpReverseDns: typeof import("./ipamIpReverseDns").IpamIpReverseDns = null as any;
utilities.lazyLoad(exports, ["IpamIpReverseDns"], () => require("./ipamIpReverseDns"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));


// Export sub-modules:
import * as account from "./account";
import * as applesilicon from "./applesilicon";
import * as billing from "./billing";
import * as blockstorage from "./blockstorage";
import * as cockpit from "./cockpit";
import * as config from "./config";
import * as containerregistry from "./containerregistry";
import * as dns from "./dns";
import * as documentdb from "./documentdb";
import * as elasticmetal from "./elasticmetal";
import * as iam from "./iam";
import * as instance from "./instance";
import * as iot from "./iot";
import * as ipam from "./ipam";
import * as kubernetes from "./kubernetes";
import * as loadbalancer from "./loadbalancer";
import * as mnq from "./mnq";
import * as objectstorage from "./objectstorage";
import * as rdb from "./rdb";
import * as redis from "./redis";
import * as secret from "./secret";
import * as serverless from "./serverless";
import * as tem from "./tem";
import * as types from "./types";
import * as vpc from "./vpc";
import * as webhosting from "./webhosting";

export {
    account,
    applesilicon,
    billing,
    blockstorage,
    cockpit,
    config,
    containerregistry,
    dns,
    documentdb,
    elasticmetal,
    iam,
    instance,
    iot,
    ipam,
    kubernetes,
    loadbalancer,
    mnq,
    objectstorage,
    rdb,
    redis,
    secret,
    serverless,
    tem,
    types,
    vpc,
    webhosting,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "scaleway:index/ipamIpReverseDns:IpamIpReverseDns":
                return new IpamIpReverseDns(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("scaleway", "index/ipamIpReverseDns", _module)
pulumi.runtime.registerResourcePackage("scaleway", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:scaleway") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
