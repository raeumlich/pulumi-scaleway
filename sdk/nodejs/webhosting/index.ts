// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetOfferArgs, GetOfferResult, GetOfferOutputArgs } from "./getOffer";
export const getOffer: typeof import("./getOffer").getOffer = null as any;
export const getOfferOutput: typeof import("./getOffer").getOfferOutput = null as any;
utilities.lazyLoad(exports, ["getOffer","getOfferOutput"], () => require("./getOffer"));

export { GetWebHostingArgs, GetWebHostingResult, GetWebHostingOutputArgs } from "./getWebHosting";
export const getWebHosting: typeof import("./getWebHosting").getWebHosting = null as any;
export const getWebHostingOutput: typeof import("./getWebHosting").getWebHostingOutput = null as any;
utilities.lazyLoad(exports, ["getWebHosting","getWebHostingOutput"], () => require("./getWebHosting"));

export { WebHostingArgs, WebHostingState } from "./webHosting";
export type WebHosting = import("./webHosting").WebHosting;
export const WebHosting: typeof import("./webHosting").WebHosting = null as any;
utilities.lazyLoad(exports, ["WebHosting"], () => require("./webHosting"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "scaleway:webhosting/webHosting:WebHosting":
                return new WebHosting(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("scaleway", "webhosting/webHosting", _module)
