// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Gets information about an instance private NIC.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const byNicId = scaleway.instance.getPrivateNIC({
 *     privateNicId: "11111111-1111-1111-1111-111111111111",
 *     serverId: "11111111-1111-1111-1111-111111111111",
 * });
 * const byPnId = scaleway.instance.getPrivateNIC({
 *     privateNetworkId: "11111111-1111-1111-1111-111111111111",
 *     serverId: "11111111-1111-1111-1111-111111111111",
 * });
 * const byTags = scaleway.instance.getPrivateNIC({
 *     serverId: "11111111-1111-1111-1111-111111111111",
 *     tags: ["mytag"],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getPrivateNIC(args: GetPrivateNICArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateNICResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:instance/getPrivateNIC:getPrivateNIC", {
        "privateNetworkId": args.privateNetworkId,
        "privateNicId": args.privateNicId,
        "serverId": args.serverId,
        "tags": args.tags,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrivateNIC.
 */
export interface GetPrivateNICArgs {
    /**
     * The ID of the private network
     * Only one of `privateNicId` and `privateNetworkId` should be specified.
     */
    privateNetworkId?: string;
    /**
     * The ID of the instance server private nic
     * Only one of `privateNicId` and `privateNetworkId` should be specified.
     */
    privateNicId?: string;
    /**
     * The server's id
     */
    serverId: string;
    /**
     * The tags associated with the private NIC.
     * As datasource only returns one private NIC, the search with given tags must return only one result
     */
    tags?: string[];
    /**
     * `zone`) The zone in which the private nic exists.
     */
    zone?: string;
}

/**
 * A collection of values returned by getPrivateNIC.
 */
export interface GetPrivateNICResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipIds: string[];
    readonly macAddress: string;
    readonly privateNetworkId?: string;
    readonly privateNicId?: string;
    readonly serverId: string;
    readonly tags?: string[];
    readonly zone?: string;
}
/**
 * Gets information about an instance private NIC.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const byNicId = scaleway.instance.getPrivateNIC({
 *     privateNicId: "11111111-1111-1111-1111-111111111111",
 *     serverId: "11111111-1111-1111-1111-111111111111",
 * });
 * const byPnId = scaleway.instance.getPrivateNIC({
 *     privateNetworkId: "11111111-1111-1111-1111-111111111111",
 *     serverId: "11111111-1111-1111-1111-111111111111",
 * });
 * const byTags = scaleway.instance.getPrivateNIC({
 *     serverId: "11111111-1111-1111-1111-111111111111",
 *     tags: ["mytag"],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getPrivateNICOutput(args: GetPrivateNICOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrivateNICResult> {
    return pulumi.output(args).apply((a: any) => getPrivateNIC(a, opts))
}

/**
 * A collection of arguments for invoking getPrivateNIC.
 */
export interface GetPrivateNICOutputArgs {
    /**
     * The ID of the private network
     * Only one of `privateNicId` and `privateNetworkId` should be specified.
     */
    privateNetworkId?: pulumi.Input<string>;
    /**
     * The ID of the instance server private nic
     * Only one of `privateNicId` and `privateNetworkId` should be specified.
     */
    privateNicId?: pulumi.Input<string>;
    /**
     * The server's id
     */
    serverId: pulumi.Input<string>;
    /**
     * The tags associated with the private NIC.
     * As datasource only returns one private NIC, the search with given tags must return only one result
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * `zone`) The zone in which the private nic exists.
     */
    zone?: pulumi.Input<string>;
}
