// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages Scaleway VPC Public Gateways IPs reverse DNS.
 * For more information, see [the documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#ips-268151).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const mainPublicGatewayIP = new scaleway.vpc.PublicGatewayIP("mainPublicGatewayIP", {});
 * const tfA = new scaleway.dns.Record("tfA", {
 *     dnsZone: "example.com",
 *     type: "A",
 *     data: mainPublicGatewayIP.address,
 *     ttl: 3600,
 *     priority: 1,
 * });
 * const mainPublicGatewayIPReverseDNS = new scaleway.vpc.PublicGatewayIPReverseDNS("mainPublicGatewayIPReverseDNS", {
 *     gatewayIpId: mainPublicGatewayIP.id,
 *     reverse: "tf.example.com",
 * });
 * ```
 *
 * ## Import
 *
 * Public gateway IPs reverse DNS can be imported using the `{zone}/{id}`, e.g. bash
 *
 * ```sh
 *  $ pulumi import scaleway:vpc/publicGatewayIPReverseDNS:PublicGatewayIPReverseDNS main fr-par-1/11111111-1111-1111-1111-111111111111
 * ```
 */
export class PublicGatewayIPReverseDNS extends pulumi.CustomResource {
    /**
     * Get an existing PublicGatewayIPReverseDNS resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PublicGatewayIPReverseDNSState, opts?: pulumi.CustomResourceOptions): PublicGatewayIPReverseDNS {
        return new PublicGatewayIPReverseDNS(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:vpc/publicGatewayIPReverseDNS:PublicGatewayIPReverseDNS';

    /**
     * Returns true if the given object is an instance of PublicGatewayIPReverseDNS.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PublicGatewayIPReverseDNS {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PublicGatewayIPReverseDNS.__pulumiType;
    }

    /**
     * The public gateway IP ID
     */
    public readonly gatewayIpId!: pulumi.Output<string>;
    /**
     * The reverse domain name for this IP address
     */
    public readonly reverse!: pulumi.Output<string>;
    /**
     * `zone`) The zone in which the IP should be reserved.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a PublicGatewayIPReverseDNS resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PublicGatewayIPReverseDNSArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PublicGatewayIPReverseDNSArgs | PublicGatewayIPReverseDNSState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PublicGatewayIPReverseDNSState | undefined;
            resourceInputs["gatewayIpId"] = state ? state.gatewayIpId : undefined;
            resourceInputs["reverse"] = state ? state.reverse : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as PublicGatewayIPReverseDNSArgs | undefined;
            if ((!args || args.gatewayIpId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayIpId'");
            }
            if ((!args || args.reverse === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reverse'");
            }
            resourceInputs["gatewayIpId"] = args ? args.gatewayIpId : undefined;
            resourceInputs["reverse"] = args ? args.reverse : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PublicGatewayIPReverseDNS.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PublicGatewayIPReverseDNS resources.
 */
export interface PublicGatewayIPReverseDNSState {
    /**
     * The public gateway IP ID
     */
    gatewayIpId?: pulumi.Input<string>;
    /**
     * The reverse domain name for this IP address
     */
    reverse?: pulumi.Input<string>;
    /**
     * `zone`) The zone in which the IP should be reserved.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PublicGatewayIPReverseDNS resource.
 */
export interface PublicGatewayIPReverseDNSArgs {
    /**
     * The public gateway IP ID
     */
    gatewayIpId: pulumi.Input<string>;
    /**
     * The reverse domain name for this IP address
     */
    reverse: pulumi.Input<string>;
    /**
     * `zone`) The zone in which the IP should be reserved.
     */
    zone?: pulumi.Input<string>;
}
