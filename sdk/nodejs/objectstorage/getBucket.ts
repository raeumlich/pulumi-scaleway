// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Gets information about the Bucket.
 * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const main = new scaleway.objectstorage.Bucket("main", {tags: {
 *     foo: "bar",
 * }});
 * const selected = scaleway.objectstorage.getBucketOutput({
 *     name: main.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Fetching the bucket from a specific project
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const selected = scaleway.objectstorage.getBucket({
 *     name: "bucket.test.com",
 *     projectId: "11111111-1111-1111-1111-111111111111",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getBucket(args?: GetBucketArgs, opts?: pulumi.InvokeOptions): Promise<GetBucketResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:objectstorage/getBucket:getBucket", {
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getBucket.
 */
export interface GetBucketArgs {
    name?: string;
    /**
     * `projectId`) The ID of the project the bucket is associated with.
     */
    projectId?: string;
    /**
     * `region`) The region in which the bucket exists.
     */
    region?: string;
}

/**
 * A collection of values returned by getBucket.
 */
export interface GetBucketResult {
    readonly acl: string;
    readonly apiEndpoint: string;
    readonly corsRules: outputs.objectstorage.GetBucketCorsRule[];
    /**
     * The endpoint URL of the bucket
     */
    readonly endpoint: string;
    readonly forceDestroy: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly lifecycleRules: outputs.objectstorage.GetBucketLifecycleRule[];
    readonly name?: string;
    readonly objectLockEnabled: boolean;
    readonly projectId?: string;
    readonly region?: string;
    readonly tags: {[key: string]: string};
    readonly versionings: outputs.objectstorage.GetBucketVersioning[];
}
/**
 * Gets information about the Bucket.
 * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const main = new scaleway.objectstorage.Bucket("main", {tags: {
 *     foo: "bar",
 * }});
 * const selected = scaleway.objectstorage.getBucketOutput({
 *     name: main.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Fetching the bucket from a specific project
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const selected = scaleway.objectstorage.getBucket({
 *     name: "bucket.test.com",
 *     projectId: "11111111-1111-1111-1111-111111111111",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getBucketOutput(args?: GetBucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBucketResult> {
    return pulumi.output(args).apply((a: any) => getBucket(a, opts))
}

/**
 * A collection of arguments for invoking getBucket.
 */
export interface GetBucketOutputArgs {
    name?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the project the bucket is associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * `region`) The region in which the bucket exists.
     */
    region?: pulumi.Input<string>;
}
