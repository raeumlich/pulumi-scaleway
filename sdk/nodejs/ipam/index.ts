// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetIPArgs, GetIPResult, GetIPOutputArgs } from "./getIP";
export const getIP: typeof import("./getIP").getIP = null as any;
export const getIPOutput: typeof import("./getIP").getIPOutput = null as any;
utilities.lazyLoad(exports, ["getIP","getIPOutput"], () => require("./getIP"));

export { GetIPsArgs, GetIPsResult, GetIPsOutputArgs } from "./getIPs";
export const getIPs: typeof import("./getIPs").getIPs = null as any;
export const getIPsOutput: typeof import("./getIPs").getIPsOutput = null as any;
utilities.lazyLoad(exports, ["getIPs","getIPsOutput"], () => require("./getIPs"));

export { IPArgs, IPState } from "./ip";
export type IP = import("./ip").IP;
export const IP: typeof import("./ip").IP = null as any;
utilities.lazyLoad(exports, ["IP"], () => require("./ip"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "scaleway:ipam/iP:IP":
                return new IP(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("scaleway", "ipam/iP", _module)
