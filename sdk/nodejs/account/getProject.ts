// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Gets information about an existing Project.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const byName = scaleway.account.getProject({
 *     name: "default",
 * });
 * const byId = scaleway.account.getProject({
 *     projectId: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getProject(args?: GetProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:account/getProject:getProject", {
        "name": args.name,
        "organizationId": args.organizationId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProject.
 */
export interface GetProjectArgs {
    /**
     * The name of the Project.
     * Only one of the `name` and `projectId` should be specified.
     */
    name?: string;
    /**
     * The organization ID the Project is associated with.
     * If no default organizationId is set, one must be set explicitly in this datasource
     */
    organizationId?: string;
    /**
     * The ID of the Project.
     * Only one of the `name` and `projectId` should be specified.
     */
    projectId?: string;
}

/**
 * A collection of values returned by getProject.
 */
export interface GetProjectResult {
    readonly createdAt: string;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly organizationId?: string;
    readonly projectId: string;
    readonly updatedAt: string;
}
/**
 * Gets information about an existing Project.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const byName = scaleway.account.getProject({
 *     name: "default",
 * });
 * const byId = scaleway.account.getProject({
 *     projectId: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getProjectOutput(args?: GetProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectResult> {
    return pulumi.output(args).apply((a: any) => getProject(a, opts))
}

/**
 * A collection of arguments for invoking getProject.
 */
export interface GetProjectOutputArgs {
    /**
     * The name of the Project.
     * Only one of the `name` and `projectId` should be specified.
     */
    name?: pulumi.Input<string>;
    /**
     * The organization ID the Project is associated with.
     * If no default organizationId is set, one must be set explicitly in this datasource
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The ID of the Project.
     * Only one of the `name` and `projectId` should be specified.
     */
    projectId?: pulumi.Input<string>;
}
