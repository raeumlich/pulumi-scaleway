// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Gets information about a Scaleway Cockpit plan.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const premium = scaleway.cockpit.getPlan({
 *     name: "premium",
 * });
 * const main = new scaleway.cockpit.Cockpit("main", {plan: premium.then(premium => premium.id)});
 * ```
 */
export function getPlan(args: GetPlanArgs, opts?: pulumi.InvokeOptions): Promise<GetPlanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:cockpit/getPlan:getPlan", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getPlan.
 */
export interface GetPlanArgs {
    /**
     * The name of the plan.
     */
    name: string;
}

/**
 * A collection of values returned by getPlan.
 */
export interface GetPlanResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
}
/**
 * Gets information about a Scaleway Cockpit plan.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const premium = scaleway.cockpit.getPlan({
 *     name: "premium",
 * });
 * const main = new scaleway.cockpit.Cockpit("main", {plan: premium.then(premium => premium.id)});
 * ```
 */
export function getPlanOutput(args: GetPlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlanResult> {
    return pulumi.output(args).apply((a: any) => getPlan(a, opts))
}

/**
 * A collection of arguments for invoking getPlan.
 */
export interface GetPlanOutputArgs {
    /**
     * The name of the plan.
     */
    name: pulumi.Input<string>;
}
